{"version":3,"sources":["../../js/workspaces/timeline.js"],"names":["define","defineComponent","template","withDataRequest","withElementScrollingPositionUpdates","require","Timeline","defaultAttrs","timelineConfigSelector","timelineFitSelector","before","Histogram","$node","children","teardownComponent","after","self","on","onUpdateHistogramExtent","onTimelineConfigChanged","ontologyPropertiesPromise","Promise","fulfill","event","data","foundOntologyProperties","ontologyProperties","select","trigger","onTimelineConfigToggle","onFitTimeline","TRANSITION_END","_","once","render","bind","config","properties","$target","$","target","shouldOpen","lookupAllComponents","length","TimelineConfig","done","teardownAll","attachTo","vertexIds","edgeIds","options","fromHistogram","html","all","dataRequest","spread","noDataMessageDetailsText","i18n","includeYAxis"],"mappings":"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","file":"timeline.js","sourcesContent":["define([\n    'flight/lib/component',\n    './timeline-tpl.hbs',\n    'util/withDataRequest',\n    'util/popovers/withElementScrollingPositionUpdates',\n    'require'\n], function(\n    defineComponent,\n    template,\n    withDataRequest,\n    withElementScrollingPositionUpdates,\n    require) {\n    'use strict';\n\n    return defineComponent(Timeline, withDataRequest, withElementScrollingPositionUpdates);\n\n    function Timeline() {\n\n        this.defaultAttrs({\n            timelineConfigSelector: '.timeline-config',\n            timelineFitSelector: '.timeline-fit'\n        });\n\n        this.before('teardown', function() {\n            if (this.Histogram) {\n                this.$node.children('.timeline-svg-container').teardownComponent(this.Histogram);\n            }\n        })\n\n        this.after('initialize', function() {\n            var self = this;\n\n            this.on('updateHistogramExtent', this.onUpdateHistogramExtent);\n            this.on('timelineConfigChanged', this.onTimelineConfigChanged);\n\n            this.ontologyPropertiesPromise = new Promise(function(fulfill) {\n                self.on('ontologyPropertiesRenderered', function(event, data) {\n                    self.foundOntologyProperties = data.ontologyProperties;\n                    self.select('timelineConfigSelector').trigger('ontologyPropertiesChanged', {\n                        ontologyProperties: self.foundOntologyProperties\n                    });\n                    fulfill();\n                });\n            });\n\n            this.on('click', {\n                timelineConfigSelector: this.onTimelineConfigToggle,\n                timelineFitSelector: this.onFitTimeline\n            });\n\n            this.$node.on(TRANSITION_END, _.once(this.render.bind(this)));\n        });\n\n        this.onFitTimeline = function() {\n            this.$node.children('.timeline-svg-container').trigger('fitHistogram');\n        };\n\n        this.onTimelineConfigChanged = function(event, data) {\n            this.config = data.config;\n            this.$node.children('.timeline-svg-container').trigger('propertyConfigChanged', {\n                properties: data.config.properties\n            });\n        };\n\n        this.onTimelineConfigToggle = function(event) {\n            var self = this,\n                $target = $(event.target),\n                shouldOpen = $target.lookupAllComponents().length === 0;\n\n            require(['./timeline-config'], function(TimelineConfig) {\n\n                self.ontologyPropertiesPromise.done(function() {\n                    if (shouldOpen) {\n                        TimelineConfig.teardownAll();\n                        TimelineConfig.attachTo($target, {\n                            config: self.config,\n                            ontologyProperties: self.foundOntologyProperties\n                        });\n                    } else {\n                        $target.teardownComponent(TimelineConfig);\n                    }\n                })\n            });\n        };\n\n        this.onUpdateHistogramExtent = function(event, data) {\n            this.trigger('selectObjects', {\n                vertexIds: data.vertexIds,\n                edgeIds: data.edgeIds,\n                options: {\n                    fromHistogram: true\n                }\n            })\n        };\n\n        this.render = function() {\n            var self = this;\n\n            this.$node.html(template({}));\n\n            Promise.all([\n                Promise.require('fields/histogram/histogram'),\n                this.dataRequest('ontology', 'properties'),\n            ]).spread(function(Histogram, ontologyProperties) {\n                self.Histogram = Histogram;\n                Histogram.attachTo(self.$node.children('.timeline-svg-container'), {\n                    noDataMessageDetailsText: i18n('timeline.no_data_details'),\n                    includeYAxis: true\n                });\n            })\n        }\n\n    }\n});\n"]}