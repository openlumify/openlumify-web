{"version":3,"sources":["../../../js/workspaces/diff/DiffPanel.jsx"],"names":["define","createReactClass","PropTypes","classNames","ReactVirtualized","F","Privileges","dnd","VisibilityViewer","ELEMENT_SIZE","PROPERTY_UPDATE_SIZE","PROPERTY_NEW_SIZE","AVERAGE_ROW_SIZE","Math","round","lookupTitle","diffTitle","titles","vertexId","str","loading","i18n","debounceAfterFirst","fn","debounced","_","debounce","first","apply","arguments","titlesRequest","ids","Promise","require","then","dr","dataRequest","vertexIds","newTitles","result","forEach","v","id","vertex","title","formatVisibility","propertyOrProperties","property","Array","isArray","formatValue","name","change","prop","properties","key","DiffPanel","getInitialState","renderHeader","flatDiffs","props","publishCount","undoCount","totalCount","ontologyRequiredCount","publishing","undoing","onApplyPublishClick","onApplyUndoClick","totalPublishCount","missingONTOLOGY_PUBLISH","publishingAll","undoingAll","renderHeaderActions","number","pretty","onSelectAllPublishClick","onSelectAllUndoClick","onDeselectAllClick","applying","canPUBLISH","renderDiffActions","publish","undo","requiresOntologyPublish","onPublishClick","onUndoClick","disabledBecauseOntologyChange","e","stopPropagation","canEDIT","renderRequiresOntologyPublish","diff","renderVertexDiff","style","state","action","active","className","conceptImage","deleted","selectedConceptImage","onVertexRowClick","conceptImageStyle","backgroundImage","image","selectedConceptImageStyle","selectedImage","onDragStart","type","display","event","target","dataset","edgeId","elements","edgeIds","dt","dataTransfer","setDataTransferWithElements","renderEdgeDiff","edge","edgeLabel","sourceId","targetId","sourceTitleDiff","sourceTitle","targetTitleDiff","targetTitle","onEdgeRowClick","renderPropertyDiff","nextProp","new","previousProp","old","formatLabel","nextVisibility","visibility","nextValue","value","valueStyle","textDecoration","visibilityStyle","propertyNameDisplay","source","componentDidMount","getTitles","scrollTop","componentDidUpdate","prevProps","previousFlatDiffs","List","_List","recomputeRowHeights","scrollToPosition","render","AutoSizer","rowHeight","index","rowRenderer","_rowRenderer","onRowsRendered","overscanStartIndex","overscanStopIndex","startIndex","stopIndex","height","width","r","length","onScroll","cancel","Object","keys","slice","reduce","isEmpty","updatedTitles","setState","catch","console","warn","error","finally","isScrolling","isVisible","parent","content","propTypes","array","isRequired","func","bool"],"mappings":"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","file":"DiffPanel.js","sourcesContent":["define([\n    'create-react-class',\n    'prop-types',\n    'classnames',\n    'react-virtualized',\n    'util/vertex/formatters',\n    'util/privileges',\n    'util/dnd',\n    'components/visibility/VisibilityViewer'\n], function(\n    createReactClass,\n    PropTypes,\n    classNames,\n    ReactVirtualized,\n    F,\n    Privileges,\n    dnd,\n    VisibilityViewer) {\n    'use strict';\n\n    const ELEMENT_SIZE = 45;\n    const PROPERTY_UPDATE_SIZE = 75;\n    const PROPERTY_NEW_SIZE = 40;\n    const AVERAGE_ROW_SIZE = Math.round((ELEMENT_SIZE + PROPERTY_UPDATE_SIZE + PROPERTY_NEW_SIZE) / 3);\n\n    function lookupTitle(diffTitle, titles, vertexId) {\n        let str = diffTitle;\n        let loading = false;\n        if (!str) {\n            if (vertexId && vertexId in titles) {\n                str = titles[vertexId] || i18n('vertex.property.title.not_available')\n            } else {\n                loading = true;\n                str = i18n('workspaces.diff.title.loading');\n            }\n        }\n        return { str, loading };\n    }\n\n    function debounceAfterFirst(fn) {\n        const debounced = _.debounce(fn, 500);\n        let first = true;\n        return function() {\n            if (first) {\n                fn.apply(null, arguments);\n                first = false;\n            } else {\n                debounced.apply(null, arguments);\n            }\n        }\n    }\n\n    function titlesRequest(ids) {\n        return Promise.require('util/withDataRequest')\n            .then(dr => {\n                return dr.dataRequest('vertex', 'multiple', { vertexIds: ids })\n                    .then(result => {\n                        const newTitles = {};\n                        result.forEach(v => {\n                            if (v) {\n                                newTitles[v.id] = F.vertex.title(v);\n                            }\n                        })\n                        return newTitles;\n                    })\n            })\n    }\n\n    function formatVisibility(propertyOrProperties) {\n        const property = Array.isArray(propertyOrProperties) ? propertyOrProperties[0] : propertyOrProperties;\n        return property['http://openlumify.org#visibilityJson'];\n    }\n\n    function formatValue(name, change, property) {\n        return F.vertex.prop({\n            id: property.id,\n            properties: change ? Array.isArray(change) ? change : [change] : []\n        }, name, property.key)\n    }\n\n    const DiffPanel = createReactClass({\n\n        getInitialState() {\n            return { titles: {} };\n        },\n\n        renderHeader: function(flatDiffs) {\n            const {\n                publishCount,\n                undoCount,\n                totalCount,\n                ontologyRequiredCount,\n                publishing,\n                undoing,\n                onApplyPublishClick,\n                onApplyUndoClick\n            } = this.props;\n            const totalPublishCount = Privileges.missingONTOLOGY_PUBLISH ? (totalCount - ontologyRequiredCount) : totalCount;\n            const publishingAll = publishCount > 0 && publishCount === totalPublishCount;\n            const undoingAll = undoCount > 0 && undoCount === totalCount;\n\n            return (\n              <div className=\"diff-header\">\n                  {this.renderHeaderActions(publishingAll, undoingAll)}\n\n                  <h1 className=\"header\">\n                    {publishing || publishCount > 0 ? (\n                        <button className={\n                            classNames('btn btn-small publish-all btn-success', {\n                                loading: publishing\n                            })}\n                            onClick={onApplyPublishClick}\n                            disabled={publishing || undoing}\n                            data-count={F.number.pretty(publishCount)}>\n                            { i18n('workspaces.diff.button.publish') }\n                        </button>\n                    ) : null}\n                    {undoing || undoCount > 0 ? (\n                        <button className={\n                            classNames('btn btn-small undo-all btn-danger', {\n                                loading: undoing\n                            })}\n                            onClick={onApplyUndoClick}\n                            disabled={publishing || undoing}\n                            data-count={F.number.pretty(undoCount)}>\n                            { i18n('workspaces.diff.button.undo') }\n                        </button>\n                    ) : null}\n\n                    {publishCount === 0 && undoCount === 0 ? (\n                        <span>{ i18n('workspaces.diff.header.unpublished_changes') }</span>\n                    ) : null}\n                  </h1>\n              </div>\n            );\n        },\n\n        renderHeaderActions: function(publishingAll, undoingAll) {\n            const { publishing, undoing, onSelectAllPublishClick, onSelectAllUndoClick, onDeselectAllClick } = this.props;\n            const applying = publishing || undoing;\n\n            return (\n              <div className=\"select-actions\">\n                  <span>{ i18n('workspaces.diff.button.select_all') }</span>\n                  <div className=\"btn-group actions\">\n                    {Privileges.canPUBLISH ? (\n                        <button className={\n                            classNames('btn btn-mini select-all-publish requires-PUBLISH', {\n                                'btn-success': publishingAll\n                            })}\n                            onClick={publishingAll ? onDeselectAllClick : onSelectAllPublishClick}\n                            disabled={applying}\n                            data-action=\"publish\">\n                            {i18n('workspaces.diff.button.publish')}\n                        </button>\n                    ) : null}\n                    {Privileges.canPUBLISH ? (\n                        <button className={\n                            classNames('btn btn-mini select-all-undo requires-EDIT', {\n                                'btn-danger': undoingAll\n                            })}\n                            onClick={undoingAll ? onDeselectAllClick : onSelectAllUndoClick}\n                            disabled={applying}\n                            data-action=\"undo\">\n                            {i18n('workspaces.diff.button.undo')}\n                        </button>\n                    ) : null}\n                  </div>\n              </div>\n            );\n        },\n\n        renderDiffActions: function(id, { publish, undo, requiresOntologyPublish }) {\n            const { publishing, undoing, onPublishClick, onUndoClick } = this.props;\n            const applying = publishing || undoing;\n            const disabledBecauseOntologyChange = requiresOntologyPublish && Privileges.missingONTOLOGY_PUBLISH;\n\n            return (\n                <div className=\"actions\">\n                    <div className=\"btn-group\">\n                        {Privileges.canPUBLISH && !disabledBecauseOntologyChange ? (\n                            <button className={\n                                classNames('btn', 'btn-mini', 'publish', 'requires-PUBLISH', {\n                                    'btn-success': publish\n                                })}\n                                onClick={e => {\n                                    e.stopPropagation();\n                                    onPublishClick(id);\n                                }}\n                                disabled={applying}>\n                                {i18n('workspaces.diff.button.publish')}\n                            </button>\n                        ) : null}\n                        {Privileges.canEDIT ? (\n                            <button className={\n                                classNames('btn', 'btn-mini', 'undo', 'requires-EDIT', {\n                                    'btn-danger': undo\n                                })}\n                                onClick={e => {\n                                    e.stopPropagation();\n                                    onUndoClick(id);\n                                }}\n                                disabled={applying}>\n                                {i18n('workspaces.diff.button.undo')}\n                            </button>\n                        ) : null}\n                    </div>\n                </div>\n            );\n        },\n\n        renderRequiresOntologyPublish(diff) {\n            return Privileges.canPUBLISH && diff.requiresOntologyPublish && Privileges.missingONTOLOGY_PUBLISH ?\n                (<div className=\"action-subtype\">{ i18n('workspaces.diff.requires.ontology.publish') }</div>) : null;\n        },\n\n        renderVertexDiff: function(key, style, diff) {\n            const { titles } = this.state;\n            const { action, active, className, conceptImage, deleted, publish, selectedConceptImage, title: diffTitle, undo, vertex, vertexId } = diff;\n            const { onVertexRowClick } = this.props;\n            const conceptImageStyle = {\n                backgroundImage: conceptImage || vertex ? `url(${conceptImage || F.vertex.image(vertex, null, 80)})` : ''\n            };\n            const selectedConceptImageStyle = {\n                backgroundImage: selectedConceptImage || vertex ? `url(${selectedConceptImage || F.vertex.selectedImage(vertex, null, 80)})` : ''\n            };\n            const title = lookupTitle(diffTitle, titles, vertexId);\n\n            return (\n                <div key={key} style={style}\n                    className={\n                    classNames('d-row', 'vertex-row', className, {\n                        'mark-publish': publish,\n                        'mark-undo': undo,\n                        active: active,\n                        deleted: deleted\n                    })}\n                    onClick={() => onVertexRowClick(active ? null : vertexId)}\n                    draggable={true}\n                    onDragStart={this.onDragStart}\n                    data-diff-id={ vertexId }\n                    data-vertex-id={ vertexId }>\n                    <div className=\"vertex-label\">\n                        <div className=\"img\" style={conceptImageStyle}></div>\n                        <div className=\"selected-img\" style={selectedConceptImageStyle}></div>\n                        <h1 title={title.loading ? '' : title.str}>{title.loading ? (<span className=\"loading\">{title.str}</span>) : title.str}</h1>\n                        <div className=\"diff-action\">\n                            {action.type !== 'update' ? (\n                                <span className=\"label action-type\">{ action.display }</span>\n                            ) : null}\n                            {this.renderRequiresOntologyPublish(diff)}\n                        </div>\n                    </div>\n                    {action.type !== 'update' ? this.renderDiffActions(vertexId, diff) : null }\n                </div>\n            );\n        },\n\n        onDragStart(event) {\n            const { target } = event;\n            if (target.dataset) {\n                const { vertexId, edgeId } = target.dataset;\n                const elements = { vertexIds: vertexId ? [vertexId] : [], edgeIds: edgeId ? [edgeId] : [] };\n                const dt = event.dataTransfer;\n                if (dt) {\n                    dnd.setDataTransferWithElements(dt, elements);\n                }\n            }\n        },\n\n        renderEdgeDiff: function(key, style, diff) {\n            const { action, active, className, deleted, edge, edgeId, edgeLabel,\n                publish, undo,\n                sourceId, targetId,\n                sourceTitle: sourceTitleDiff, targetTitle: targetTitleDiff\n            } = diff;\n            const { onEdgeRowClick } = this.props;\n            const { titles } = this.state;\n            const sourceTitle = lookupTitle(sourceTitleDiff, titles, sourceId);\n            const targetTitle = lookupTitle(targetTitleDiff, titles, targetId);\n\n            return (\n                <div key={key} style={style}\n                    className={classNames('d-row', 'edge-row', className, {\n                        'mark-publish': publish,\n                        'mark-undo': undo,\n                        active: active,\n                        deleted: deleted\n                    })}\n                    onClick={() => onEdgeRowClick(active ? null : edgeId)}\n                    draggable={true}\n                    onDragStart={this.onDragStart}\n                    data-diff-id={edgeId}\n                    data-edge-id={edgeId}>\n                    <div className=\"vertex-label\">\n                        <h1 title={`\"${sourceTitle.str}\" \\n${edgeLabel} \\n\"${targetTitle.str}\"`}\n                            data-edge-id={ edgeId } className=\"edge-cont\">\n                            <span className={classNames({'loading': sourceTitle.loading, 'edge-v': !sourceTitle.loading})}>{sourceTitle.str}</span>\n                            <span className=\"edge-label\">{edgeLabel + ' '}</span>\n                            <span className={classNames({'loading': targetTitle.loading, 'edge-v': !targetTitle.loading})}>{targetTitle.str}</span>\n                        </h1>\n                        <div className=\"diff-action\">\n                            {action.type !== 'update' ? (\n                                <span className=\"label action-type\">{ action.display }</span>\n                            ) : null}\n                            {this.renderRequiresOntologyPublish(diff)}\n                        </div>\n                    </div>\n                    {action.type !== 'update' ?\n                        this.renderDiffActions(edgeId, diff) : (\n                        <div>&nbsp;</div>\n                    )}\n                </div>\n            );\n        },\n\n        renderPropertyDiff: function(key, style, property) {\n            const { className, deleted, id, name, new: nextProp, old: previousProp, publish, undo } = property;\n            const { formatLabel } = this.props;\n            const nextVisibility = nextProp ? formatVisibility(nextProp) : null;\n            const visibility = previousProp ? formatVisibility(previousProp) : null;\n            const nextValue = nextProp ? formatValue(name, nextProp, property) : null;\n            const value = previousProp ? formatValue(name, previousProp, property) : null;\n            const valueStyle = value !== nextValue ? { textDecoration: 'line-through'} : {};\n            const visibilityStyle = visibility !== nextVisibility ? { textDecoration: 'line-through'} : {};\n            const propertyNameDisplay = formatLabel(name);\n\n            return (\n                <div key={key} style={style}\n                    className={classNames('d-row', className, {\n                        'mark-publish': publish,\n                        'mark-undo': undo\n                    })}\n                    data-diff-id={id}>\n                <div title={propertyNameDisplay} className=\"property-label\">{ propertyNameDisplay }</div>\n                <div title={nextValue} className={classNames('property-value', { deleted: deleted })}>\n                    {previousProp && nextProp ? (\n                        [\n                            nextValue,\n                            <VisibilityViewer key={key + 'p-vis'} value={nextVisibility && nextVisibility.source} />,\n                            <div title={value} key={key + 'pval'} style={valueStyle}>{value}</div>,\n                            <VisibilityViewer key={key + 'p-val-vis'} style={visibilityStyle} value={visibility && visibility.source} />\n                        ]\n                    ) : null}\n                    {!previousProp && nextProp ? (\n                        [\n                            nextValue,\n                            <VisibilityViewer key={key + 'v'} value={nextVisibility && nextVisibility.source} />\n                        ]\n                    ) : null}\n                </div>\n                    {this.renderRequiresOntologyPublish(property)}\n                    {this.renderDiffActions(id, property)}\n              </div>\n            );\n        },\n\n        componentDidMount() {\n            this.getTitles = debounceAfterFirst(this.getTitles);\n            this.scrollTop = 0;\n        },\n\n        componentDidUpdate(prevProps) {\n            const { flatDiffs } = this.props;\n            const { flatDiffs: previousFlatDiffs } = prevProps;\n            const List = this._List;\n\n            if (List) {\n                if (previousFlatDiffs !== flatDiffs) {\n                    List.recomputeRowHeights();\n                }\n                if (this.scrollTop > 0) {\n                    // HACK: Need to pass decimal to force update. Have to look at virtualized-grid\n                    List.scrollToPosition(this.scrollTop + 0.1);\n                }\n            }\n        },\n\n        render() {\n            const { AutoSizer, List } = ReactVirtualized;\n            const { flatDiffs } = this.props;\n            const rowHeight = ({ index }) => (flatDiffs[index].vertex || flatDiffs[index].edge) ?\n                ELEMENT_SIZE :\n                flatDiffs[index].old ?\n                PROPERTY_UPDATE_SIZE :\n                PROPERTY_NEW_SIZE;\n            const rowRenderer = this._rowRenderer;\n            const onRowsRendered = ({ overscanStartIndex, overscanStopIndex, startIndex, stopIndex }) => {\n                this.getTitles(startIndex, stopIndex)\n            }\n\n            return (\n                <div className=\"diffs-list\">\n                    {this.renderHeader(flatDiffs)}\n                    <div className=\"diff-cont\">\n                        <div className=\"diff-alerts\" />\n                        <div className=\"diff-content\">\n                            <AutoSizer>\n                            {({ height, width }) => (\n                                <List\n                                    ref={r => {this._List = r }}\n                                    width={width}\n                                    height={height}\n                                    rowCount={flatDiffs.length}\n                                    estimatedRowSize={AVERAGE_ROW_SIZE}\n                                    rowHeight={rowHeight}\n                                    rowRenderer={rowRenderer}\n                                    onRowsRendered={onRowsRendered}\n                                    onScroll={this.onScroll}\n                                />\n                            )}\n                            </AutoSizer>\n                        </div>\n                    </div>\n                </div>\n            );\n        },\n\n        onScroll({ scrollTop }) {\n            this.scrollTop = scrollTop;\n        },\n\n        getTitles(startIndex, stopIndex) {\n            if (this.titlesRequest) {\n                this.titlesRequest.cancel();\n            }\n            const { titles } = this.state;\n            const { flatDiffs } = this.props;\n            const ids = Object.keys(flatDiffs.slice(startIndex, stopIndex + 1).reduce((ids, diff) => {\n                if (diff.vertexId) {\n                    if (!diff.title && !(diff.vertexId in titles)) ids[diff.vertexId] = true;\n                } else if (diff.sourceId && diff.targetId) {\n                    if (!diff.sourceTitle && !(diff.sourceId in titles)) ids[diff.sourceId] = true;\n                    if (!diff.targetTitle && !(diff.targetId in titles)) ids[diff.targetId] = true;\n                }\n                return ids;\n            }, {}))\n            if (ids.length) {\n                this.titlesRequest = titlesRequest(ids)\n                    .then(newTitles => {\n                        if (!_.isEmpty(newTitles)) {\n                            const updatedTitles = { ...titles, ...newTitles };\n                            this.setState({ titles: updatedTitles })\n                        }\n                    })\n                    .catch(error => {\n                        console.warn(error);\n                    })\n                    .finally(() => {\n                        this.titlesRequest = null;\n                    })\n            }\n        },\n\n        _rowRenderer({ index, isScrolling, isVisible, key, parent, style }) {\n            const { flatDiffs } = this.props;\n            const diff = flatDiffs[index];\n            const content =\n                diff.vertex ? this.renderVertexDiff(key, style, diff) :\n                diff.edge ? this.renderEdgeDiff(key, style, diff) :\n                this.renderPropertyDiff(key, style, diff)\n\n            return content;\n        },\n\n        propTypes: {\n            flatDiffs: PropTypes.array.isRequired,\n            formatLabel: PropTypes.func.isRequired,\n            onPublishClick: PropTypes.func.isRequired,\n            onUndoClick: PropTypes.func.isRequired,\n            onSelectAllPublishClick: PropTypes.func.isRequired,\n            onSelectAllUndoClick: PropTypes.func.isRequired,\n            onDeselectAllClick: PropTypes.func.isRequired,\n            publishing: PropTypes.bool,\n            undoing: PropTypes.bool,\n            onApplyPublishClick: PropTypes.func.isRequired,\n            onApplyUndoClick: PropTypes.func.isRequired,\n            onVertexRowClick: PropTypes.func.isRequired,\n            onEdgeRowClick: PropTypes.func.isRequired\n        }\n    });\n\n    return DiffPanel;\n});\n"]}