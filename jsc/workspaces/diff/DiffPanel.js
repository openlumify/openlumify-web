var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};define(['create-react-class','prop-types','classnames','react-virtualized','util/vertex/formatters','util/privileges','util/dnd','components/visibility/VisibilityViewer'],function(createReactClass,PropTypes,classNames,ReactVirtualized,F,Privileges,dnd,VisibilityViewer){'use strict';var ELEMENT_SIZE=45;var PROPERTY_UPDATE_SIZE=75;var PROPERTY_NEW_SIZE=40;var AVERAGE_ROW_SIZE=Math.round((ELEMENT_SIZE+PROPERTY_UPDATE_SIZE+PROPERTY_NEW_SIZE)/3);function lookupTitle(diffTitle,titles,vertexId){var str=diffTitle;var loading=false;if(!str){if(vertexId&&vertexId in titles){str=titles[vertexId]||i18n('vertex.property.title.not_available');}else{loading=true;str=i18n('workspaces.diff.title.loading');}}return{str:str,loading:loading};}function debounceAfterFirst(fn){var debounced=_.debounce(fn,500);var first=true;return function(){if(first){fn.apply(null,arguments);first=false;}else{debounced.apply(null,arguments);}};}function titlesRequest(ids){return Promise.require('util/withDataRequest').then(function(dr){return dr.dataRequest('vertex','multiple',{vertexIds:ids}).then(function(result){var newTitles={};result.forEach(function(v){if(v){newTitles[v.id]=F.vertex.title(v);}});return newTitles;});});}function formatVisibility(propertyOrProperties){var property=Array.isArray(propertyOrProperties)?propertyOrProperties[0]:propertyOrProperties;return property['http://openlumify.org#visibilityJson'];}function formatValue(name,change,property){return F.vertex.prop({id:property.id,properties:change?Array.isArray(change)?change:[change]:[]},name,property.key);}var DiffPanel=createReactClass({displayName:'DiffPanel',getInitialState:function getInitialState(){return{titles:{}};},renderHeader:function renderHeader(flatDiffs){var _props=this.props,publishCount=_props.publishCount,undoCount=_props.undoCount,totalCount=_props.totalCount,ontologyRequiredCount=_props.ontologyRequiredCount,publishing=_props.publishing,undoing=_props.undoing,onApplyPublishClick=_props.onApplyPublishClick,onApplyUndoClick=_props.onApplyUndoClick;var totalPublishCount=Privileges.missingONTOLOGY_PUBLISH?totalCount-ontologyRequiredCount:totalCount;var publishingAll=publishCount>0&&publishCount===totalPublishCount;var undoingAll=undoCount>0&&undoCount===totalCount;return React.createElement('div',{className:'diff-header'},this.renderHeaderActions(publishingAll,undoingAll),React.createElement('h1',{className:'header'},publishing||publishCount>0?React.createElement('button',{className:classNames('btn btn-small publish-all btn-success',{loading:publishing}),onClick:onApplyPublishClick,disabled:publishing||undoing,'data-count':F.number.pretty(publishCount)},i18n('workspaces.diff.button.publish')):null,undoing||undoCount>0?React.createElement('button',{className:classNames('btn btn-small undo-all btn-danger',{loading:undoing}),onClick:onApplyUndoClick,disabled:publishing||undoing,'data-count':F.number.pretty(undoCount)},i18n('workspaces.diff.button.undo')):null,publishCount===0&&undoCount===0?React.createElement('span',null,i18n('workspaces.diff.header.unpublished_changes')):null));},renderHeaderActions:function renderHeaderActions(publishingAll,undoingAll){var _props2=this.props,publishing=_props2.publishing,undoing=_props2.undoing,onSelectAllPublishClick=_props2.onSelectAllPublishClick,onSelectAllUndoClick=_props2.onSelectAllUndoClick,onDeselectAllClick=_props2.onDeselectAllClick;var applying=publishing||undoing;return React.createElement('div',{className:'select-actions'},React.createElement('span',null,i18n('workspaces.diff.button.select_all')),React.createElement('div',{className:'btn-group actions'},Privileges.canPUBLISH?React.createElement('button',{className:classNames('btn btn-mini select-all-publish requires-PUBLISH',{'btn-success':publishingAll}),onClick:publishingAll?onDeselectAllClick:onSelectAllPublishClick,disabled:applying,'data-action':'publish'},i18n('workspaces.diff.button.publish')):null,Privileges.canPUBLISH?React.createElement('button',{className:classNames('btn btn-mini select-all-undo requires-EDIT',{'btn-danger':undoingAll}),onClick:undoingAll?onDeselectAllClick:onSelectAllUndoClick,disabled:applying,'data-action':'undo'},i18n('workspaces.diff.button.undo')):null));},renderDiffActions:function renderDiffActions(id,_ref){var publish=_ref.publish,undo=_ref.undo,requiresOntologyPublish=_ref.requiresOntologyPublish;var _props3=this.props,publishing=_props3.publishing,undoing=_props3.undoing,onPublishClick=_props3.onPublishClick,onUndoClick=_props3.onUndoClick;var applying=publishing||undoing;var disabledBecauseOntologyChange=requiresOntologyPublish&&Privileges.missingONTOLOGY_PUBLISH;return React.createElement('div',{className:'actions'},React.createElement('div',{className:'btn-group'},Privileges.canPUBLISH&&!disabledBecauseOntologyChange?React.createElement('button',{className:classNames('btn','btn-mini','publish','requires-PUBLISH',{'btn-success':publish}),onClick:function onClick(e){e.stopPropagation();onPublishClick(id);},disabled:applying},i18n('workspaces.diff.button.publish')):null,Privileges.canEDIT?React.createElement('button',{className:classNames('btn','btn-mini','undo','requires-EDIT',{'btn-danger':undo}),onClick:function onClick(e){e.stopPropagation();onUndoClick(id);},disabled:applying},i18n('workspaces.diff.button.undo')):null));},renderRequiresOntologyPublish:function renderRequiresOntologyPublish(diff){return Privileges.canPUBLISH&&diff.requiresOntologyPublish&&Privileges.missingONTOLOGY_PUBLISH?React.createElement('div',{className:'action-subtype'},i18n('workspaces.diff.requires.ontology.publish')):null;},renderVertexDiff:function renderVertexDiff(key,style,diff){var titles=this.state.titles;var action=diff.action,active=diff.active,className=diff.className,conceptImage=diff.conceptImage,deleted=diff.deleted,publish=diff.publish,selectedConceptImage=diff.selectedConceptImage,diffTitle=diff.title,undo=diff.undo,vertex=diff.vertex,vertexId=diff.vertexId;var onVertexRowClick=this.props.onVertexRowClick;var conceptImageStyle={backgroundImage:conceptImage||vertex?'url('+(conceptImage||F.vertex.image(vertex,null,80))+')':''};var selectedConceptImageStyle={backgroundImage:selectedConceptImage||vertex?'url('+(selectedConceptImage||F.vertex.selectedImage(vertex,null,80))+')':''};var title=lookupTitle(diffTitle,titles,vertexId);return React.createElement('div',{key:key,style:style,className:classNames('d-row','vertex-row',className,{'mark-publish':publish,'mark-undo':undo,active:active,deleted:deleted}),onClick:function onClick(){return onVertexRowClick(active?null:vertexId);},draggable:true,onDragStart:this.onDragStart,'data-diff-id':vertexId,'data-vertex-id':vertexId},React.createElement('div',{className:'vertex-label'},React.createElement('div',{className:'img',style:conceptImageStyle}),React.createElement('div',{className:'selected-img',style:selectedConceptImageStyle}),React.createElement('h1',{title:title.loading?'':title.str},title.loading?React.createElement('span',{className:'loading'},title.str):title.str),React.createElement('div',{className:'diff-action'},action.type!=='update'?React.createElement('span',{className:'label action-type'},action.display):null,this.renderRequiresOntologyPublish(diff))),action.type!=='update'?this.renderDiffActions(vertexId,diff):null);},onDragStart:function onDragStart(event){var target=event.target;if(target.dataset){var _target$dataset=target.dataset,vertexId=_target$dataset.vertexId,edgeId=_target$dataset.edgeId;var elements={vertexIds:vertexId?[vertexId]:[],edgeIds:edgeId?[edgeId]:[]};var dt=event.dataTransfer;if(dt){dnd.setDataTransferWithElements(dt,elements);}}},renderEdgeDiff:function renderEdgeDiff(key,style,diff){var action=diff.action,active=diff.active,className=diff.className,deleted=diff.deleted,edge=diff.edge,edgeId=diff.edgeId,edgeLabel=diff.edgeLabel,publish=diff.publish,undo=diff.undo,sourceId=diff.sourceId,targetId=diff.targetId,sourceTitleDiff=diff.sourceTitle,targetTitleDiff=diff.targetTitle;var onEdgeRowClick=this.props.onEdgeRowClick;var titles=this.state.titles;var sourceTitle=lookupTitle(sourceTitleDiff,titles,sourceId);var targetTitle=lookupTitle(targetTitleDiff,titles,targetId);return React.createElement('div',{key:key,style:style,className:classNames('d-row','edge-row',className,{'mark-publish':publish,'mark-undo':undo,active:active,deleted:deleted}),onClick:function onClick(){return onEdgeRowClick(active?null:edgeId);},draggable:true,onDragStart:this.onDragStart,'data-diff-id':edgeId,'data-edge-id':edgeId},React.createElement('div',{className:'vertex-label'},React.createElement('h1',{title:'"'+sourceTitle.str+'" \n'+edgeLabel+' \n"'+targetTitle.str+'"','data-edge-id':edgeId,className:'edge-cont'},React.createElement('span',{className:classNames({'loading':sourceTitle.loading,'edge-v':!sourceTitle.loading})},sourceTitle.str),React.createElement('span',{className:'edge-label'},edgeLabel+' '),React.createElement('span',{className:classNames({'loading':targetTitle.loading,'edge-v':!targetTitle.loading})},targetTitle.str)),React.createElement('div',{className:'diff-action'},action.type!=='update'?React.createElement('span',{className:'label action-type'},action.display):null,this.renderRequiresOntologyPublish(diff))),action.type!=='update'?this.renderDiffActions(edgeId,diff):React.createElement('div',null,'\xA0'));},renderPropertyDiff:function renderPropertyDiff(key,style,property){var className=property.className,deleted=property.deleted,id=property.id,name=property.name,nextProp=property.new,previousProp=property.old,publish=property.publish,undo=property.undo;var formatLabel=this.props.formatLabel;var nextVisibility=nextProp?formatVisibility(nextProp):null;var visibility=previousProp?formatVisibility(previousProp):null;var nextValue=nextProp?formatValue(name,nextProp,property):null;var value=previousProp?formatValue(name,previousProp,property):null;var valueStyle=value!==nextValue?{textDecoration:'line-through'}:{};var visibilityStyle=visibility!==nextVisibility?{textDecoration:'line-through'}:{};var propertyNameDisplay=formatLabel(name);return React.createElement('div',{key:key,style:style,className:classNames('d-row',className,{'mark-publish':publish,'mark-undo':undo}),'data-diff-id':id},React.createElement('div',{title:propertyNameDisplay,className:'property-label'},propertyNameDisplay),React.createElement('div',{title:nextValue,className:classNames('property-value',{deleted:deleted})},previousProp&&nextProp?[nextValue,React.createElement(VisibilityViewer,{key:key+'p-vis',value:nextVisibility&&nextVisibility.source}),React.createElement('div',{title:value,key:key+'pval',style:valueStyle},value),React.createElement(VisibilityViewer,{key:key+'p-val-vis',style:visibilityStyle,value:visibility&&visibility.source})]:null,!previousProp&&nextProp?[nextValue,React.createElement(VisibilityViewer,{key:key+'v',value:nextVisibility&&nextVisibility.source})]:null),this.renderRequiresOntologyPublish(property),this.renderDiffActions(id,property));},componentDidMount:function componentDidMount(){this.getTitles=debounceAfterFirst(this.getTitles);this.scrollTop=0;},componentDidUpdate:function componentDidUpdate(prevProps){var flatDiffs=this.props.flatDiffs;var previousFlatDiffs=prevProps.flatDiffs;var List=this._List;if(List){if(previousFlatDiffs!==flatDiffs){List.recomputeRowHeights();}if(this.scrollTop>0){List.scrollToPosition(this.scrollTop+0.1);}}},render:function render(){var _this=this;var AutoSizer=ReactVirtualized.AutoSizer,List=ReactVirtualized.List;var flatDiffs=this.props.flatDiffs;var rowHeight=function rowHeight(_ref2){var index=_ref2.index;return flatDiffs[index].vertex||flatDiffs[index].edge?ELEMENT_SIZE:flatDiffs[index].old?PROPERTY_UPDATE_SIZE:PROPERTY_NEW_SIZE;};var rowRenderer=this._rowRenderer;var onRowsRendered=function onRowsRendered(_ref3){var overscanStartIndex=_ref3.overscanStartIndex,overscanStopIndex=_ref3.overscanStopIndex,startIndex=_ref3.startIndex,stopIndex=_ref3.stopIndex;_this.getTitles(startIndex,stopIndex);};return React.createElement('div',{className:'diffs-list'},this.renderHeader(flatDiffs),React.createElement('div',{className:'diff-cont'},React.createElement('div',{className:'diff-alerts'}),React.createElement('div',{className:'diff-content'},React.createElement(AutoSizer,null,function(_ref4){var height=_ref4.height,width=_ref4.width;return React.createElement(List,{ref:function ref(r){_this._List=r;},width:width,height:height,rowCount:flatDiffs.length,estimatedRowSize:AVERAGE_ROW_SIZE,rowHeight:rowHeight,rowRenderer:rowRenderer,onRowsRendered:onRowsRendered,onScroll:_this.onScroll});}))));},onScroll:function onScroll(_ref5){var scrollTop=_ref5.scrollTop;this.scrollTop=scrollTop;},getTitles:function getTitles(startIndex,stopIndex){var _this2=this;if(this.titlesRequest){this.titlesRequest.cancel();}var titles=this.state.titles;var flatDiffs=this.props.flatDiffs;var ids=Object.keys(flatDiffs.slice(startIndex,stopIndex+1).reduce(function(ids,diff){if(diff.vertexId){if(!diff.title&&!(diff.vertexId in titles))ids[diff.vertexId]=true;}else if(diff.sourceId&&diff.targetId){if(!diff.sourceTitle&&!(diff.sourceId in titles))ids[diff.sourceId]=true;if(!diff.targetTitle&&!(diff.targetId in titles))ids[diff.targetId]=true;}return ids;},{}));if(ids.length){this.titlesRequest=titlesRequest(ids).then(function(newTitles){if(!_.isEmpty(newTitles)){var updatedTitles=_extends({},titles,newTitles);_this2.setState({titles:updatedTitles});}}).catch(function(error){console.warn(error);}).finally(function(){_this2.titlesRequest=null;});}},_rowRenderer:function _rowRenderer(_ref6){var index=_ref6.index,isScrolling=_ref6.isScrolling,isVisible=_ref6.isVisible,key=_ref6.key,parent=_ref6.parent,style=_ref6.style;var flatDiffs=this.props.flatDiffs;var diff=flatDiffs[index];var content=diff.vertex?this.renderVertexDiff(key,style,diff):diff.edge?this.renderEdgeDiff(key,style,diff):this.renderPropertyDiff(key,style,diff);return content;},propTypes:{flatDiffs:PropTypes.array.isRequired,formatLabel:PropTypes.func.isRequired,onPublishClick:PropTypes.func.isRequired,onUndoClick:PropTypes.func.isRequired,onSelectAllPublishClick:PropTypes.func.isRequired,onSelectAllUndoClick:PropTypes.func.isRequired,onDeselectAllClick:PropTypes.func.isRequired,publishing:PropTypes.bool,undoing:PropTypes.bool,onApplyPublishClick:PropTypes.func.isRequired,onApplyUndoClick:PropTypes.func.isRequired,onVertexRowClick:PropTypes.func.isRequired,onEdgeRowClick:PropTypes.func.isRequired}});return DiffPanel;});
//# sourceMappingURL=DiffPanel.js.map
