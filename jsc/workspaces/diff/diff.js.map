{"version":3,"sources":["../../../js/workspaces/diff/diff.js"],"names":["define","defineComponent","React","ReactDOM","F","withDataRequest","dnd","require","SHOW_CHANGES_TEXT_SECONDS","COMMENT_ENTRY_IRI","DiffPanel","Diff","titleForEdgesVertices","vertex","vertexId","diffsGroupedByElement","title","matchingDiffs","diff","length","attributes","diffs","schemaTypeSelector","render","panel","$node","removeClass","createElement","flatDiffs","formatLabel","onPublishClick","onMarkPublish","onUndoClick","onMarkUndo","onSelectAllPublishClick","onSelectAllPublish","onSelectAllUndoClick","onSelectAllUndo","onDeselectAllClick","onDeselectAll","publishing","undoing","onApplyPublishClick","onApplyUndoClick","onVertexRowClick","onEdgeRowClick","renderCounts","before","unmountComponentAtNode","node","after","self","forEach","m","bind","dataRequest","done","ontology","ontologyConcepts","concepts","ontologyProperties","properties","ontologyRelationships","relationships","name","byTitle","displayName","setup","setDiffs","reduce","flat","i","type","action","updateCounts","totalCount","ontologyRequiredCount","publishCount","undoCount","publish","undo","requiresOntologyPublish","requiresOntologyPublishProperty","inc","processDiffs","attr","on","event","data","document","onObjectsSelected","onSchemaTypeChange","referencedVertices","referencedEdges","groupedByElement","_","groupBy","elementType","push","elementId","outVertexId","edgeId","inVertexId","output","Promise","all","openlumifyData","storePromise","selectedObjectsPromise","spread","store","selectedObjects","state","getState","workspaceId","workspace","currentId","elementStore","element","verticesById","vertices","edgesById","edges","selectedById","concat","map","object","id","selected","previousDiffsById","diffsById","diffsForElementId","diffDependencies","undoDiffDependencies","each","actionTypes","CREATE","display","i18n","UPDATE","DELETE","outputItem","active","className","to","isElementVertex","conceptType","elementConcept","visibilityJson","concept","byId","conceptImage","glyphIconHref","selectedConceptImage","glyphIconSelectedHref","sandboxStatus","edge","edgeLabel","label","relationship","sourceId","targetId","source","target","sourceTitle","targetTitle","deleted","addDiffDependency","ontologyProperty","compoundProperty","byDependentToCompound","isDependent","dependentName","userVisible","key","property","hasProperty","previousPropertyWithKey","findWhere","old","new","inVertex","outVertex","displayLabel","console","warn","isEmpty","trigger","vertexIds","edgeIds","resetWarning","deselectAction","Object","keys","onSelectAll","canPublishOntology","Boolean","currentUser","privilegesHelper","ONTOLOGY_PUBLISH","allowSelect","selectAction","values","partial","$li","$","closest","diffIds","JSON","parse","defer","ontologyToPublish","buildOntologyToPublish","some","size","skipSchemaWarning","handleSchemaChanges","toPublish","makeList","diffId","lookup","list","usages","string","plural","stringify","d","html","tpl","types","compact","error","addClass","prependTo","find","empty","alert","onApplyAll","publishOntology","diffsToSend","buildDiffsToSend","finally","then","response","failures","success","nextDiffs","buildNextDiffs","pluck","join","catch","errorText","currentUserId","ontologyObjectCreatedByCurrentUser","metadata","modifiedBy","add","obj","o","applyType","filter","vertexDiffToSend","edgeDiffToSend","applying","propertyDiffToSend","status","destId","diffToSend","failuresById","failure","diffsToProcess","deps","vertexDiff","undefined","propertyDiff","chain","result","val","value","edgeDiff","inVertexDiff","outVertexDiff"],"mappings":"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","file":"diff.js","sourcesContent":["\ndefine([\n    'flight/lib/component',\n    'react',\n    'react-dom',\n    'util/vertex/formatters',\n    'util/withDataRequest',\n    'util/dnd',\n    'require'\n], function(\n    defineComponent,\n    React,\n    ReactDOM,\n    F,\n    withDataRequest,\n    dnd,\n    require) {\n    'use strict';\n\n    var SHOW_CHANGES_TEXT_SECONDS = 3;\n    var COMMENT_ENTRY_IRI = 'http://openlumify.org/comment#entry';\n    var DiffPanel;\n\n    return defineComponent(Diff, withDataRequest);\n\n    function titleForEdgesVertices(vertex, vertexId, diffsGroupedByElement) {\n        if (vertex) {\n            return F.vertex.title(vertex);\n        }\n\n        var matchingDiffs = diffsGroupedByElement[vertexId],\n            diff = matchingDiffs && matchingDiffs.length && matchingDiffs[0];\n\n        if (diff && diff.title) {\n            return diff.title;\n        }\n\n        return null;\n    }\n\n    function Diff() {\n\n        this.attributes({\n            diffs: null,\n            schemaTypeSelector: '.schema-type'\n        })\n\n        this.render = function() {\n            if (!DiffPanel) {\n                require(['./DiffPanel'], panel => {\n                    DiffPanel = panel\n                    this.render();\n                });\n                return;\n            }\n            this.$node.removeClass('loading-small-animate');\n\n            ReactDOM.render(React.createElement(DiffPanel, {\n                flatDiffs: this.flatDiffs,\n                formatLabel: this.formatLabel,\n                onPublishClick: this.onMarkPublish,\n                onUndoClick: this.onMarkUndo,\n                onSelectAllPublishClick: this.onSelectAllPublish,\n                onSelectAllUndoClick: this.onSelectAllUndo,\n                onDeselectAllClick: this.onDeselectAll,\n                publishing: this.publishing,\n                undoing: this.undoing,\n                onApplyPublishClick: this.onApplyPublishClick,\n                onApplyUndoClick: this.onApplyUndoClick,\n                onVertexRowClick: this.onVertexRowClick,\n                onEdgeRowClick: this.onEdgeRowClick,\n                ...this.renderCounts\n            }), this.$node[0]);\n        };\n\n        this.before('teardown', function() {\n            ReactDOM.unmountComponentAtNode(this.node);\n        })\n\n        this.after('initialize', function() {\n            var self = this;\n\n            [\n                'onMarkPublish', 'onSelectAll', 'onSelectAllPublish',\n                'onSelectAllUndo', 'onMarkUndo', 'onDeselectAll',\n                'onApplyPublishClick', 'onApplyUndoClick',\n                'onVertexRowClick', 'onEdgeRowClick'\n            ].forEach(m => {\n                this[m] = this[m].bind(this);\n            })\n\n            this.dataRequest('ontology', 'ontology').done(function(ontology) {\n                self.ontologyConcepts = ontology.concepts;\n                self.ontologyProperties = ontology.properties;\n                self.ontologyRelationships = ontology.relationships;\n                self.formatLabel = function(name) {\n                    return self.ontologyProperties.byTitle[name].displayName;\n                };\n                self.setup();\n            })\n        });\n\n        this.setDiffs = function(diffs) {\n            this.diffs = diffs;\n            this.flatDiffs = this.diffs.reduce((flat, diff, i) => {\n                const { type } = diff.action;\n                return [...flat, diff, ...diff.properties];\n            }, []);\n            this.updateCounts();\n        }\n\n        this.updateCounts = function() {\n            let totalCount = 0, ontologyRequiredCount = 0;\n            const { publishCount, undoCount } = this.flatDiffs.reduce(({ publishCount, undoCount }, diff) => {\n                const { action, publish, undo, requiresOntologyPublish, requiresOntologyPublishProperty } = diff;\n                let inc = 0;\n\n                if (!action || action.type !== 'update') {\n                    inc = 1;\n                    totalCount++;\n\n                    if (requiresOntologyPublish || requiresOntologyPublishProperty) {\n                        ontologyRequiredCount++;\n                    }\n                }\n                return {\n                    publishCount: publish ? publishCount + inc : publishCount,\n                    undoCount: undo ? undoCount + inc : undoCount\n                }\n            }, { publishCount: 0, undoCount: 0 });\n\n            this.renderCounts = { publishCount, undoCount, totalCount, ontologyRequiredCount };\n        }\n\n        this.setup = function() {\n            var self = this;\n            this.setDiffs([]);\n\n            self.processDiffs(self.attr.diffs).done(function(processDiffs) {\n                self.setDiffs(processDiffs)\n                self.render();\n            });\n\n            self.on('diffsChanged', function(event, data) {\n                self.processDiffs(data.diffs).done(function(processDiffs) {\n                    self.setDiffs(processDiffs);\n                    self.render();\n                });\n            })\n            self.on(document, 'objectsSelected', self.onObjectsSelected);\n            self.on('click', { schemaTypeSelector: self.onSchemaTypeChange });\n        };\n\n        this.processDiffs = function(diffs) {\n            var self = this,\n                referencedVertices = [],\n                referencedEdges = [],\n                groupedByElement = _.groupBy(diffs, function(diff) {\n                    if (diff.elementType === 'vertex' || diff.type === 'VertexDiffItem') {\n                        referencedVertices.push(diff.vertexId || diff.elementId || diff.outVertexId);\n                    } else if (diff.elementType === 'edge' || diff.type === 'EdgeDiffItem') {\n                        referencedEdges.push(diff.edgeId || diff.elementId);\n                    }\n                    if (diff.inVertexId) {\n                        referencedVertices.push(diff.inVertexId);\n                    }\n                    if (diff.outVertexId) {\n                        referencedVertices.push(diff.outVertexId);\n                    }\n                    if (diff.vertexId) return diff.vertexId;\n                    if (diff.edgeId) return diff.edgeId;\n                    if (diff.elementId) return diff.elementId;\n                    return diff.outVertexId;\n                }),\n                output = [];\n\n            return Promise.all([\n                openlumifyData.storePromise,\n                openlumifyData.selectedObjectsPromise()\n            ]).spread(function(store, selectedObjects) {\n                var state = store.getState(),\n                    workspaceId = state.workspace.currentId,\n                    elementStore = state.element[workspaceId] || {},\n                    verticesById = elementStore.vertices || {},\n                    edgesById = elementStore.edges || {},\n                    selectedById = selectedObjects.vertices.concat(selectedObjects.edges)\n                        .map(function(object) { return object.id; })\n                        .reduce(function(selected, id) {\n                            selected[id] = true;\n                            return selected;\n                        }, {}),\n                    previousDiffsById = self.diffsById || {};\n                    self.diffsForElementId = {};\n                    self.diffsById = {};\n                    self.diffDependencies = {};\n                    self.undoDiffDependencies = {};\n\n                    _.each(groupedByElement, function(diffs, elementId) {\n                        var actionTypes = {\n                                CREATE: { type: 'create', display: i18n('workspaces.diff.action.types.create') },\n                                UPDATE: { type: 'update', display: i18n('workspaces.diff.action.types.update') },\n                                DELETE: { type: 'delete', display: i18n('workspaces.diff.action.types.delete') }\n                            },\n                            outputItem = {\n                                properties: [],\n                                action: {},\n                                active: selectedById[elementId],\n                                publish: previousDiffsById[elementId] && previousDiffsById[elementId].publish,\n                                undo: previousDiffsById[elementId] && previousDiffsById[elementId].undo,\n                                className: F.className.to(elementId)\n                            },\n                            isElementVertex = (\n                                diffs[0].elementType === 'vertex' ||\n                                diffs[0].type === 'VertexDiffItem'\n                            );\n\n                        if (isElementVertex) {\n                            outputItem.vertexId = elementId;\n                            outputItem.vertex = verticesById[elementId];\n                            const conceptType = diffs[0].conceptType || diffs[0].elementConcept;\n                            if (outputItem.vertex) {\n                                outputItem.title = F.vertex.title(outputItem.vertex);\n                            } else {\n                                outputItem.vertex = {\n                                    id: elementId,\n                                    type: 'vertex',\n                                    properties: [],\n                                    conceptType,\n                                    'http://openlumify.org#visibilityJson': diffs[0].visibilityJson\n                                };\n                                outputItem.title = diffs[0].title;\n                            }\n                            if (conceptType) {\n                                var concept = self.ontologyConcepts.byId[conceptType];\n                                if (concept) {\n                                    outputItem.concept = concept;\n                                    outputItem.conceptImage = concept.glyphIconHref;\n                                    outputItem.selectedConceptImage = concept.glyphIconSelectedHref || concept.glyphIconHref;\n                                    if (concept.sandboxStatus !== 'PUBLIC') {\n                                        outputItem.requiresOntologyPublish = true;\n                                    }\n                                }\n                            }\n                        } else {\n                            outputItem.edgeId = elementId;\n                            outputItem.edge = edgesById[elementId];\n                            if (outputItem.edge) {\n                                outputItem.edgeLabel = self.ontologyRelationships.byTitle[outputItem.edge.label].displayName;\n                            } else {\n                                outputItem.edge = {\n                                    id: elementId,\n                                    type: 'edge',\n                                    properties: [],\n                                    'http://openlumify.org#visibilityJson': diffs[0].visibilityJson\n                                };\n                            }\n\n                            const label = diffs[0].label || diffs[0].elementConcept;\n                            if (label) {\n                                const relationship = self.ontologyRelationships.byId[label];\n                                if (relationship) {\n                                    outputItem.edgeLabel = relationship.displayName;\n                                    outputItem.relationship = relationship;\n                                    if (relationship.sandboxStatus !== 'PUBLIC') {\n                                        outputItem.requiresOntologyPublish = true;\n                                    }\n                                }\n                            }\n\n                            var sourceId = diffs[0].outVertexId,\n                                targetId = diffs[0].inVertexId,\n                                source = verticesById[sourceId],\n                                target = verticesById[targetId];\n                            outputItem.sourceId = sourceId;\n                            outputItem.targetId = targetId;\n                            outputItem.sourceTitle = titleForEdgesVertices(source, sourceId, groupedByElement);\n                            outputItem.targetTitle = titleForEdgesVertices(target, targetId, groupedByElement);\n                        }\n\n                        diffs.forEach(function(diff) {\n\n                            switch (diff.type) {\n                                case 'VertexDiffItem':\n                                    diff.id = elementId;\n                                    diff.publish = outputItem.publish;\n                                    diff.undo = outputItem.undo;\n                                    diff.requiresOntologyPublish = outputItem.requiresOntologyPublish;\n                                    outputItem.action = diff.deleted ? actionTypes.DELETE : actionTypes.CREATE;\n                                    self.diffsForElementId[elementId] = diff;\n                                    self.diffsById[elementId] = diff;\n                                    addDiffDependency(diff.id);\n                                    break;\n\n                                case 'PropertyDiffItem':\n                                    var ontologyProperty = self.ontologyProperties.byTitle[diff.name];\n                                    var compoundProperty = self.ontologyProperties.byDependentToCompound[diff.name];\n                                    var isDependent = !!diff.dependentName;\n\n                                    if (ontologyProperty && (ontologyProperty.userVisible || ontologyProperty.title === COMMENT_ENTRY_IRI)) {\n                                        if (!isDependent) {\n                                            diff.id = elementId + diff.name + diff.key;\n                                            diff.publish = previousDiffsById[diff.id] && previousDiffsById[diff.id].publish;\n                                            diff.undo = previousDiffsById[diff.id] && previousDiffsById[diff.id].undo;\n                                            addDiffDependency(diff.elementId, diff);\n                                            diff.className = F.className.to(diff.id);\n                                        }\n\n                                        diff.requiresOntologyPublishProperty = ontologyProperty.sandboxStatus !== 'PUBLIC';\n                                        diff.requiresOntologyPublish = outputItem.requiresOntologyPublish || diff.requiresOntologyPublishProperty;\n                                        if (diff.requiresOntologyPublishProperty) {\n                                            diff.property = ontologyProperty;\n                                        }\n\n                                        if (compoundProperty &&\n                                            F.vertex.hasProperty(outputItem.vertex, compoundProperty)) {\n\n                                            diff.dependentName = diff.name;\n                                            diff.name = compoundProperty;\n                                            var previousPropertyWithKey = _.findWhere(outputItem.properties, {\n                                                key: diff.key,\n                                                name: diff.name\n                                            })\n                                            if (previousPropertyWithKey) {\n                                                if (previousPropertyWithKey.old) {\n                                                    previousPropertyWithKey.old.push(diff.old);\n                                                }\n                                                if (previousPropertyWithKey.new) {\n                                                    previousPropertyWithKey.new.push(diff.new);\n                                                }\n                                                previousPropertyWithKey.diffs.push(diff)\n                                            } else {\n                                                if (diff.old) {\n                                                    diff.old = [diff.old];\n                                                }\n                                                if (diff.new) {\n                                                    diff.new = [diff.new];\n                                                }\n                                                diff.diffs = [diff];\n                                                outputItem.properties.push(diff)\n                                            }\n                                        } else {\n                                            outputItem.properties.push(diff)\n                                        }\n                                        self.diffsById[diff.id] = diff;\n                                    }\n                                    break;\n\n                                case 'EdgeDiffItem':\n                                    diff.id = diff.edgeId;\n                                    diff.publish = outputItem.publish;\n                                    diff.undo = outputItem.undo;\n                                    diff.inVertex = verticesById[diff.inVertexId];\n                                    diff.outVertex = verticesById[diff.outVertexId];\n                                    diff.className = F.className.to(diff.edgeId);\n                                    diff.displayLabel = self.ontologyRelationships.byTitle[diff.label].displayName;\n                                    diff.requiresOntologyPublish = outputItem.requiresOntologyPublish;\n                                    self.diffsForElementId[diff.edgeId] = diff;\n                                    outputItem.action = diff.deleted ? actionTypes.DELETE : actionTypes.CREATE;\n                                    addDiffDependency(diff.inVertexId, diff);\n                                    addDiffDependency(diff.outVertexId, diff);\n                                    self.diffsById[diff.id] = diff;\n                                    break;\n\n                                default:\n                                    console.warn('Unknown diff item type', diff.type)\n                            }\n\n                            addDiffDependency(diff.id);\n                        });\n\n                        if (_.isEmpty(outputItem.action)) {\n                            outputItem.action = actionTypes.UPDATE;\n                        }\n\n                        output.push(outputItem);\n                    });\n\n                    return output;\n            });\n\n            function addDiffDependency(id, diff) {\n                if (!self.diffDependencies[id]) {\n                    self.diffDependencies[id] = [];\n                }\n                if (diff) {\n                    self.diffDependencies[id].push(diff.id);\n\n                    // Undo dependencies are inverse\n                    if (!self.undoDiffDependencies[diff.id]) {\n                        self.undoDiffDependencies[diff.id] = [];\n                    }\n                    self.undoDiffDependencies[diff.id].push(id);\n                }\n            }\n        };\n\n        this.onObjectsSelected = function(event, data) {\n            var vertices = data.vertices,\n                edges = data.edges;\n\n            this.diffs.forEach(function(diff) {\n                diff.active = _.findWhere(vertices, { id: diff.vertexId }) || _.findWhere(edges, { id: diff.edgeId });\n            });\n            this.render();\n        };\n\n        this.onVertexRowClick = function(vertexId) {\n            this.trigger('selectObjects', {\n                vertexIds: vertexId ? [vertexId] : []\n            });\n        };\n\n        this.onEdgeRowClick = function(edgeId) {\n            this.trigger('selectObjects', {\n                edgeIds: edgeId ? [edgeId] : []\n            });\n        };\n\n        this.onDeselectAll = function() {\n            this.resetWarning();\n\n            var self = this;\n            this.diffs.forEach(function(diff) {\n                deselectAction(diff);\n                diff.properties.forEach(function(property) {\n                    deselectAction(property);\n                });\n            });\n            Object.keys(this.diffsById).forEach(function(id) {\n                deselectAction(self.diffsById[id]);\n            });\n            this.updateCounts();\n            this.render();\n\n            function deselectAction(diff, action) {\n                diff.publish = false;\n                diff.undo = false;\n            }\n        };\n\n        this.onSelectAll = function(action) {\n            const canPublishOntology = Boolean(openlumifyData.currentUser.privilegesHelper.ONTOLOGY_PUBLISH);\n\n            this.resetWarning();\n\n            this.diffs\n                .forEach((diff) => {\n                    if (allowSelect(diff, action)) {\n                        selectAction(diff, action);\n                        diff.properties.forEach((property) => {\n                            selectAction(property, action)\n                        });\n                    } else if (action === 'publish') {\n                        diff.undo = false;\n                    }\n                });\n\n            _.values(this.diffsById).forEach(diff => {\n                if (allowSelect(diff, action)) {\n                    selectAction(diff, action);\n                } else if (action === 'publish') {\n                    diff.undo = false;\n                }\n            });\n            this.updateCounts();\n            this.render();\n\n            function allowSelect(diff, action) {\n                return (\n                    (!diff.action || diff.action.type !== 'update')\n                    && (\n                        action === 'undo'\n                        || !(diff.requiresOntologyPublish || diff.requiresOntologyPublishProperty)\n                        || canPublishOntology\n                    )\n                );\n            }\n            function selectAction(diff, action) {\n                diff.publish = false;\n                diff.undo = false;\n\n                if (action === 'undo'\n                    || !(diff.requiresOntologyPublish || diff.requiresOntologyPublishProperty)\n                    || canPublishOntology) {\n                    diff[action] = true;\n                }\n            }\n        };\n\n        this.onSelectAllPublish = _.partial(this.onSelectAll, 'publish');\n        this.onSelectAllUndo = _.partial(this.onSelectAll, 'undo');\n\n        this.onSchemaTypeChange = function(event) {\n            const $li = $(event.target).closest('li')\n            const diffIds = JSON.parse($li.attr('data-diff-ids'));\n\n            diffIds.forEach(id => {\n                this.onMarkPublish(id, false);\n            })\n\n            _.defer(() => {\n                var ontologyToPublish = this.buildOntologyToPublish();\n                if (_.some(ontologyToPublish, _.size)) {\n                    this.skipSchemaWarning = true;\n                    this.handleSchemaChanges(ontologyToPublish);\n                }\n            })\n        };\n\n        this.handleSchemaChanges = function(toPublish) {\n            require(['./schemaWarning.hbs'], tpl => {\n                const makeList = (name, displayName, diffId, lookup) => {\n                    const size = _.size(toPublish[name]);\n                    if (size) {\n                        return {\n                            displayName,\n                            size,\n                            list:  _.map(toPublish[name], (diffs, id) => ({\n                                displayName: lookup[id].displayName,\n                                usages: F.string.plural(diffs.length, 'usage'),\n                                diffs: JSON.stringify(diffs.map(d => d[diffId]))\n                            }))\n                        }\n                    }\n                }\n                const html = tpl({\n                    types: _.compact([\n                        makeList('concepts', i18n('workspaces.diff.schema.warning.type.vertex'), 'vertexId', this.ontologyConcepts.byId),\n                        makeList('relationships', i18n('workspaces.diff.schema.warning.type.edge'), 'edgeId', this.ontologyRelationships.byTitle),\n                        makeList('properties', i18n('workspaces.diff.schema.warning.type.property'), 'id', this.ontologyProperties.byTitle)\n                    ])\n                })\n\n                var error = $('<div>')\n                    .addClass('alert alert-warning')\n                    .html(html)\n                    .prependTo(this.$node.find('.diff-alerts').empty())\n                    .alert();\n            })\n        };\n\n        this.onApplyAll = function(type, publishOntology) {\n            const self = this;\n            const publishing = type === 'publish';\n            const canPublishOntology = Boolean(openlumifyData.currentUser.privilegesHelper.ONTOLOGY_PUBLISH);\n\n            if (publishing && !publishOntology && canPublishOntology) {\n                var ontologyToPublish = this.buildOntologyToPublish();\n                if (_.some(ontologyToPublish, _.size)) {\n                    if (this.skipSchemaWarning) {\n                        this.skipSchemaWarning = false;\n                        this.onApplyAll(type, true);\n                    } else {\n                        this.skipSchemaWarning = true;\n                        this.handleSchemaChanges(ontologyToPublish);\n                    }\n                    return;\n                }\n            }\n\n            this.resetWarning();\n\n            var diffsToSend = this.buildDiffsToSend(type);\n            this.publishing = publishing;\n            this.undoing = type === 'undo';\n            this.render();\n\n            this.dataRequest('workspace', type, diffsToSend)\n                .finally(function() {\n                    self.publishing = self.undoing = false;\n                    self.trigger(document, 'updateDiff');\n                })\n                .then(function(response) {\n                    var failures = response.failures,\n                        success = response.success,\n                        nextDiffs = self.buildNextDiffs(type, failures);\n\n                    return self\n                        .processDiffs(nextDiffs)\n                        .then(function(processDiffs) {\n                            if (processDiffs.length) {\n                                self.setDiffs(processDiffs);\n                                self.render();\n\n                                if (failures && failures.length) {\n                                    var error = $('<div>')\n                                        .addClass('alert alert-error')\n                                        .html(\n                                            '<button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>' +\n                                            '<ul><li>' + _.pluck(failures, 'errorMessage').join('</li><li>') + '</li></ul>'\n                                        )\n                                        .prependTo(self.$node.find('.diff-alerts').empty())\n                                        .alert();\n                                }\n\n                                if (type === 'undo') {\n                                    self.trigger('loadCurrentWorkspace');\n                                }\n                            } else {\n                                self.trigger('toggleDiffPanel');\n                            }\n                        });\n                })\n                .catch(function(errorText) {\n                    self.render();\n\n                    var error = $('<div>')\n                        .addClass('alert alert-error')\n                        .html(\n                            '<button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>' +\n                            i18n('workspaces.diff.error', type, errorText)\n                        )\n                        .prependTo(self.$node.find('.diff-alerts').empty())\n                        .alert();\n                });\n        };\n        this.onApplyPublishClick = _.partial(this.onApplyAll, 'publish', false);\n        this.onApplyUndoClick = _.partial(this.onApplyAll, 'undo', false);\n\n        this.resetWarning = function() {\n            this.$node.find('.diff-alerts').empty();\n            this.skipSchemaWarning = false;\n        }\n\n        this.buildOntologyToPublish = function() {\n            const currentUserId = openlumifyData.currentUser.id;\n            const concepts = {};\n            const relationships = {};\n            const properties = {};\n            const ontologyObjectCreatedByCurrentUser = ontology => {\n                if (ontology.metadata) {\n                    const modifiedBy = ontology.metadata['http://openlumify.org#modifiedBy'];\n                    if (modifiedBy === currentUserId) {\n                        return true\n                    }\n                }\n            }\n            const add = (obj, o, diff) => {\n                if (!ontologyObjectCreatedByCurrentUser(o)) {\n                    if (!obj[o.title]) {\n                        obj[o.title] = [];\n                    }\n                    obj[o.title].push(diff)\n                }\n            };\n            this.diffs.forEach(diff => {\n                if (diff.publish) {\n                    if (diff.requiresOntologyPublish) {\n                        if (diff.concept) add(concepts, diff.concept, diff);\n                        if (diff.relationship) add(relationships, diff.relationship, diff);\n                    }\n                }\n                diff.properties.forEach(diff => {\n                    if (diff.publish && diff.requiresOntologyPublishProperty && diff.property) {\n                        add(properties, diff.property, diff)\n                    }\n                })\n            })\n\n            return { concepts, relationships, properties };\n        };\n\n        this.buildDiffsToSend = function(applyType) {\n            const self = this;\n            const publishing = applyType === 'publishing';\n            const canPublishOntology = Boolean(openlumifyData.currentUser.privilegesHelper.ONTOLOGY_PUBLISH);\n            let diffsToSend = [];\n\n            this.diffs\n                .filter(diff => {\n                    return !publishing\n                        || !(diff.requiresOntologyPublish || diff.requiresOntologyPublishProperty)\n                        || canPublishOntology;\n                }).forEach(function(diff) {\n                    const vertexId = diff.vertexId;\n                    const edgeId = diff.edgeId;\n                    const properties = diff.properties;\n\n                    if (diff[applyType]) {\n                        if (diff.vertex) {\n                            diffsToSend.push(vertexDiffToSend(diff));\n                        } else if (diff.edge) {\n                            diffsToSend.push(edgeDiffToSend(diff));\n                        }\n                        diff.applying = self.diffsById[vertexId || edgeId].applying = true;\n                    }\n\n                    properties\n                        .filter(function(property) { return property[applyType]; })\n                        .forEach(function(property) {\n                            property.applying = self.diffsById[property.id].applying = true;\n                            if (property.diffs) {\n                                diffsToSend = diffsToSend.concat(property.diffs.map(propertyDiffToSend))\n                            } else {\n                                diffsToSend.push(propertyDiffToSend(property));\n                            }\n                        });\n                });\n\n            return diffsToSend;\n\n            function vertexDiffToSend(diff) {\n                var vertex = self.diffsById[diff.vertexId];\n\n                return {\n                    type: 'vertex',\n                    vertexId: diff.vertexId,\n                    action: vertex.deleted ? 'delete' : 'create',\n                    status: vertex.sandboxStatus\n                };\n            }\n\n            function edgeDiffToSend(diff) {\n                var edge = self.diffsById[diff.edgeId];\n\n                return {\n                    type: 'relationship',\n                    edgeId: diff.edgeId,\n                    sourceId: edge.outVertexId,\n                    destId: edge.inVertexId,\n                    action: edge.deleted ? 'delete' : 'create',\n                    status: edge.sandboxStatus\n                };\n            }\n\n            function propertyDiffToSend(diff) {\n                var diffToSend = {\n                    type: 'property',\n                    key: diff.key,\n                    name: diff.dependentName || diff.name,\n                    action: diff.deleted ? 'delete' : 'update',\n                    status: diff.sandboxStatus\n                };\n                diffToSend[diff.elementType + 'Id'] = diff.elementId;\n                return diffToSend;\n            }\n        };\n\n        this.buildNextDiffs = function(applyType, failures) {\n            var self = this,\n                failuresById = failures.reduce(function(failures, failure) {\n                    var type = failure.type,\n                        vertexId = failure.vertexId,\n                        edgeId = failure.edgeId,\n                        name = failure.name,\n                        key = failure.key,\n                        id;\n\n                    switch (type) {\n                        case 'vertex':\n                            id = failure.vertexId;\n                            break;\n                        case 'relationship':\n                            id = failure.edgeId;\n                            break;\n                        case 'property':\n                            id = (vertexId || edgeId) + name + key;\n                            break;\n                    }\n                    failures[id] = true;\n                    return failures;\n                }, {});\n            return Object.keys(self.diffsById)\n                .map(function(id) {\n                    return self.diffsById[id];\n                })\n                .reduce(function(diffsToProcess, diff) {\n                    if (!diff.applying || failuresById[diff.id]) {\n                        diffsToProcess.push(diff);\n                    }\n                    diff[applyType] = diff.applying ? failuresById[diff.id] : diff[applyType];\n                    diff.applying = false;\n                    return diffsToProcess;\n                }, []);\n        };\n\n        this.onMarkUndo = function(diffId, state) {\n            var self = this,\n                diff = this.diffsById[diffId],\n                deps = this.diffDependencies[diffId] || [],\n                vertexDiff;\n            state = state === undefined ? !diff.undo : state;\n\n            this.resetWarning();\n\n            switch (diff.type) {\n                case 'VertexDiffItem':\n                    vertexDiff = _.findWhere(this.diffs, { vertexId: diffId});\n                    vertexDiff.undo = diff.undo = state;\n                    vertexDiff.publish = diff.publish = false;\n\n                    if (state) {\n                        if (!diff.deleted) {\n                            deps.forEach(function(diffId) {\n                                self.onMarkUndo(diffId, true);\n                                self.trigger('markUndoDiffItem', { diffId: diffId, state: true });\n                            })\n                        }\n                    }\n\n                    break;\n\n                case 'PropertyDiffItem':\n                    var byId = {};\n                    byId[diff.elementType + 'Id'] = diff.elementId;\n                    var propertyDiff = _.chain(this.diffs)\n                        .findWhere(byId)\n                        .reduce(function(result, val, key) { return key === 'properties' ? val : result})\n                        .findWhere({ id: diffId })\n                        .value();\n\n                    if (propertyDiff) {\n                        propertyDiff.undo = diff.undo = state;\n                        propertyDiff.publish = diff.publish = false;\n                    }\n\n                    if (!state) {\n                        vertexDiff = self.diffsForElementId[diff.elementId];\n                        if (vertexDiff && vertexDiff.undo) {\n                            self.onMarkUndo(vertexDiff.id, false);\n                            self.trigger('markUndoDiffItem', { diffId: vertexDiff.id, state: false });\n                        }\n                    }\n\n                    break;\n\n                case 'EdgeDiffItem':\n                    var edgeDiff = _.findWhere(this.diffs, { edgeId: diffId });\n                    edgeDiff.undo = diff.undo = state;\n                    edgeDiff.publish = diff.publish = false;\n\n                    var inVertex = self.diffsForElementId[diff.inVertexId],\n                        outVertex = self.diffsForElementId[diff.outVertexId];\n\n                    if (state) {\n                        if (diff.deleted) {\n                            if (inVertex && inVertex.deleted) {\n                                self.onMarkUndo(inVertex.id, true);\n                                self.trigger('markUndoDiffItem', { diffId: inVertex.id, state: true });\n                            }\n                            if (outVertex && outVertex.deleted) {\n                                self.onMarkUndo(outVertex.id, true);\n                                self.trigger('markUndoDiffItem', { diffId: outVertex.id, state: true });\n                            }\n                        } else {\n                            deps.forEach(function(diffId) {\n                                self.onMarkUndo(diffId, true);\n                                self.trigger('markUndoDiffItem', { diffId: diffId, state: true });\n                            })\n                        }\n                    } else {\n                        if (inVertex) {\n                            self.onMarkUndo(inVertex.id, false);\n                            self.trigger('markUndoDiffItem', { diffId: inVertex.id, state: false });\n                        }\n\n                        if (outVertex) {\n                            self.onMarkUndo(outVertex.id, false);\n                            self.trigger('markUndoDiffItem', { diffId: outVertex.id, state: false });\n                        }\n                    }\n\n                    break;\n\n                default: console.warn('Unknown diff item type', diff.type)\n            }\n            this.updateCounts();\n            this.render();\n        };\n\n        this.onMarkPublish = function(diffId, state) {\n            var self = this,\n                diff = this.diffsById[diffId],\n                canPublishOntology = Boolean(openlumifyData.currentUser.privilegesHelper.ONTOLOGY_PUBLISH),\n                vertexDiff;\n            state = state === undefined ? !diff.publish : state;\n\n            if (diff.requiresOntologyPublish && !canPublishOntology) {\n                return;\n            }\n\n            this.resetWarning();\n\n            switch (diff.type) {\n\n                case 'VertexDiffItem':\n                    vertexDiff = _.findWhere(this.diffs, { vertexId: diffId });\n                    vertexDiff.publish = diff.publish = state;\n                    vertexDiff.undo = diff.undo = false;\n                    if (state && diff.deleted) {\n                        this.diffDependencies[diff.id].forEach(function(diffId) {\n                            var diff = self.diffsById[diffId];\n                            if (diff && diff.type === 'EdgeDiffItem' && diff.deleted) {\n                                self.onMarkPublish(diffId, true);\n                                self.trigger('markPublishDiffItem', { diffId: diffId, state: true });\n                            } else {\n                                self.onMarkPublish(diffId, false);\n                                self.trigger('markPublishDiffItem', { diffId: diffId, state: false });\n                            }\n                        });\n                    } else if (!state) {\n                        this.diffDependencies[diff.id].forEach(function(diffId) {\n                            self.onMarkPublish(diffId, false);\n                            self.trigger('markPublishDiffItem', { diffId: diffId, state: false });\n                        });\n                    }\n\n                    break;\n\n                case 'PropertyDiffItem':\n                    var byId = {};\n                    byId[diff.elementType + 'Id'] = diff.elementId;\n                    var propertyDiff = _.chain(this.diffs)\n                        .findWhere(byId)\n                        .reduce(function(result, val, key) { return key === 'properties' ? val : result})\n                        .findWhere({ id: diffId })\n                        .value();\n\n                    if (propertyDiff) {\n                        propertyDiff.publish = diff.publish = state;\n                        propertyDiff.undo = diff.undo = false;\n                    }\n\n                    if (state) {\n                        vertexDiff = this.diffsForElementId[diff.elementId];\n                        if (vertexDiff && !vertexDiff.deleted) {\n                            self.onMarkPublish(diff.elementId, true);\n                            this.trigger('markPublishDiffItem', { diffId: diff.elementId, state: true })\n                        }\n                    }\n\n                    break;\n\n                case 'EdgeDiffItem':\n                    var edgeDiff = _.findWhere(this.diffs, { edgeId: diffId });\n                    edgeDiff.publish = diff.publish = state;\n                    edgeDiff.undo = diff.undo = false;\n\n                    if (!state) {\n                        // Unpublish all dependents\n                        this.diffDependencies[diff.id].forEach(function(diffId) {\n                            self.onMarkPublish(diffId, false);\n                            self.trigger('markPublishDiffItem', { diffId: diffId, state: false });\n                        });\n                    } else {\n                        var inVertexDiff = this.diffsForElementId[diff.inVertexId],\n                            outVertexDiff = this.diffsForElementId[diff.outVertexId];\n\n                        if (inVertexDiff && !diff.deleted) {\n                            self.onMarkPublish(diff.inVertexId, true);\n                            this.trigger('markPublishDiffItem', { diffId: diff.inVertexId, state: true });\n                        }\n                        if (outVertexDiff && !diff.deleted) {\n                            self.onMarkPublish(diff.outVertexId, true);\n                            this.trigger('markPublishDiffItem', { diffId: diff.outVertexId, state: true });\n                        }\n                    }\n\n                    break;\n\n                default: console.warn('Unknown diff item type', diff.type)\n            }\n            this.updateCounts();\n            this.render();\n        };\n    }\n});\n"]}