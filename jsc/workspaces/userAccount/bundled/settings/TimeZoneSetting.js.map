{"version":3,"sources":["../../../../../js/workspaces/userAccount/bundled/settings/TimeZoneSetting.jsx"],"names":["define","createReactClass","PropTypes","jstz","F","withDataRequest","TimeZoneDropDown","TimeZoneSetting","getInitialState","prefs","timezone","getPreferences","disabled","handleDetectChange","evt","savePreferences","detect","target","checked","timeZone","determine","name","state","handleTimeZoneChange","tzName","preferences","dataRequest","JSON","stringify","then","openlumifyData","currentUser","uiPreferences","setCurrentTimezone","setState","render","i18n","props","setting","displayName","display","marginLeft","marginBottom"],"mappings":"gOAAAA,OAAO,CACH,oBADG,CAEH,YAFG,CAGH,MAHG,CAIH,iBAJG,CAKH,sBALG,CAMH,oBANG,CAAP,CAOG,SAAUC,gBAAV,CAA4BC,SAA5B,CAAuCC,IAAvC,CAA6CC,CAA7C,CAAgDC,eAAhD,CAAiEC,gBAAjE,CAAmF,CAClF,aAEA,GAAMC,iBAAkBN,iBAAiB,+BACrCO,eADqC,2BACnB,CACd,GAAMC,OAAQL,EAAEM,QAAF,CAAWC,cAAX,EAAd,CACA,mBACOF,KADP,EAEIG,SAAU,KAFd,GAIH,CAPoC,CASrCC,kBATqC,6BASlBC,GATkB,CASb,CACpB,KAAKC,eAAL,CAAqB,CACjBC,OAAQF,IAAIG,MAAJ,CAAWC,OADF,CAEjBC,SAAUL,IAAIG,MAAJ,CAAWC,OAAX,CAAqBf,KAAKiB,SAAL,GAAiBC,IAAjB,EAArB,CAA+C,KAAKC,KAAL,CAAWH,QAFnD,CAArB,EAIH,CAdoC,CAgBrCI,oBAhBqC,+BAgBhBC,MAhBgB,CAgBR,CACzB,KAAKT,eAAL,CAAqB,CACjBC,OAAQ,KADS,CAEjBG,SAAUK,MAFO,CAArB,EAIH,CArBoC,CAuBrCT,eAvBqC,0BAuBrBU,WAvBqB,CAuBR,gBACzBpB,gBAAgBqB,WAAhB,CAA4B,MAA5B,CAAoC,YAApC,CAAkD,yBAAlD,CAA6EC,KAAKC,SAAL,CAAeH,WAAf,CAA7E,EACKI,IADL,CACU,UAAM,CACRC,eAAeC,WAAf,CAA2BC,aAA3B,CAAyC,yBAAzC,EAAsEL,KAAKC,SAAL,CAAeH,WAAf,CAAtE,CACArB,EAAEM,QAAF,CAAWuB,kBAAX,CAA8B,IAA9B,EACA,MAAKC,QAAL,aACOT,WADP,EAEIb,SAAU,KAFd,IAIH,CARL,EASH,CAjCoC,CAmCrCuB,MAnCqC,kBAmC5B,CACL,MAAQ,gCACJ,2BAAK,UAAU,cAAf,EAA+BC,KAAK,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,WAAxB,CAA/B,CADI,CAEJ,2BAAK,MAAO,CAACC,QAAS,OAAV,CAAZ,EACI,oBAAC,gBAAD,EAAkB,SAAU,KAAKlB,KAAL,CAAWV,QAAX,EAAuB,KAAKU,KAAL,CAAWN,MAA9D,CACkB,SAAU,KAAKO,oBADjC,CAEkB,MAAO,KAAKD,KAAL,CAAWH,QAFpC,EADJ,CAII,6BAAO,MAAO,CAACqB,QAAS,QAAV,CAAd,EACI,6BAAO,KAAK,UAAZ,CACO,SAAU,KAAKlB,KAAL,CAAWV,QAD5B,CAEO,MAAO,CAAC6B,WAAY,MAAb,CAAqBC,aAAc,KAAnC,CAA0CF,QAAS,QAAnD,CAFd,CAGO,QAAS,KAAKlB,KAAL,CAAWN,MAH3B,CAIO,SAAU,KAAKH,kBAJtB,EADJ,KAKiDuB,KAAK,gEAAL,CALjD,CAJJ,CAFI,CAAR,CAeH,CAnDoC,CAAjB,CAAxB,CAsDA,MAAO7B,gBAAP,CACH,CAjED","file":"TimeZoneSetting.js","sourcesContent":["define([\n    'create-react-class',\n    'prop-types',\n    'jstz',\n    'util/formatters',\n    'util/withDataRequest',\n    './TimeZoneDropDown'\n], function (createReactClass, PropTypes, jstz, F, withDataRequest, TimeZoneDropDown) {\n    'use strict';\n\n    const TimeZoneSetting = createReactClass({\n        getInitialState() {\n            const prefs = F.timezone.getPreferences();\n            return {\n                ...prefs,\n                disabled: false\n            };\n        },\n\n        handleDetectChange(evt) {\n            this.savePreferences({\n                detect: evt.target.checked,\n                timeZone: evt.target.checked ? jstz.determine().name() : this.state.timeZone\n            });\n        },\n\n        handleTimeZoneChange(tzName) {\n            this.savePreferences({\n                detect: false,\n                timeZone: tzName\n            });\n        },\n\n        savePreferences(preferences) {\n            withDataRequest.dataRequest('user', 'preference', 'org.openlumify.timezone', JSON.stringify(preferences))\n                .then(() => {\n                    openlumifyData.currentUser.uiPreferences['org.openlumify.timezone'] = JSON.stringify(preferences);\n                    F.timezone.setCurrentTimezone(null);\n                    this.setState({\n                        ...preferences,\n                        disabled: false\n                    });\n                });\n        },\n\n        render() {\n            return (<div>\n                <div className=\"display-name\">{i18n(this.props.setting.displayName)}</div>\n                <div style={{display: 'block'}}>\n                    <TimeZoneDropDown disabled={this.state.disabled || this.state.detect}\n                                      onChange={this.handleTimeZoneChange}\n                                      value={this.state.timeZone}/>\n                    <label style={{display: 'inline'}}>\n                        <input type=\"checkbox\"\n                               disabled={this.state.disabled}\n                               style={{marginLeft: '.5em', marginBottom: '4px', display: 'inline'}}\n                               checked={this.state.detect}\n                               onChange={this.handleDetectChange}/> {i18n('org.openlumify.user.account.page.setting.timezone.field.detect')}\n                    </label>\n                </div>\n            </div>);\n        }\n    });\n\n    return TimeZoneSetting;\n});\n"]}