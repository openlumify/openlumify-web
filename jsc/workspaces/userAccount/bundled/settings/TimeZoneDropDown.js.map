{"version":3,"sources":["../../../../../js/workspaces/userAccount/bundled/settings/TimeZoneDropDown.jsx"],"names":["define","createReactClass","PropTypes","jstz","F","TimeZoneDropDown","propTypes","value","string","isRequired","onChange","func","disabled","bool","handleTimeZoneChange","evt","name","target","props","render","Object","keys","olson","timezones","map","tz","key","tzInfo","timezone","lookupTimezone","components","split","offsetMinutes","parseInt","offset","offsetDisplay","tzPretty","replace","dst"],"mappings":"AAAAA,OAAO,CACH,oBADG,CAEH,YAFG,CAGH,MAHG,CAIH,iBAJG,CAAP,CAKG,SAAUC,gBAAV,CAA4BC,SAA5B,CAAuCC,IAAvC,CAA6CC,CAA7C,CAAgD,CAC/C,aAEA,GAAMC,kBAAmBJ,iBAAiB,gCACtCK,UAAW,CACPC,MAAOL,UAAUM,MAAV,CAAiBC,UADjB,CAEPC,SAAUR,UAAUS,IAAV,CAAeF,UAFlB,CAGPG,SAAUV,UAAUW,IAHb,CAD2B,CAOtCC,oBAPsC,+BAOjBC,GAPiB,CAOZ,CACtB,GAAMC,MAAOD,IAAIE,MAAJ,CAAWV,KAAxB,CACA,KAAKW,KAAL,CAAWR,QAAX,CAAoBM,IAApB,EACH,CAVqC,CAYtCG,MAZsC,kBAY7B,CACL,GAAMP,UAAW,YAAc,MAAKM,KAAnB,CAA2B,KAAKA,KAAL,CAAWN,QAAtC,CAAiD,KAAlE,CAEA,MAAQ,+BAAQ,SAAUA,QAAlB,CAA4B,SAAU,KAAKE,oBAA3C,CACQ,MAAO,KAAKI,KAAL,CAAWX,KAD1B,EAEHa,OAAOC,IAAP,CAAYlB,KAAKmB,KAAL,CAAWC,SAAvB,EAAkCC,GAAlC,CAAsC,aAAO,CAC1C,GAAMC,IAAKtB,KAAKmB,KAAL,CAAWC,SAAX,CAAqBG,GAArB,CAAX,CACA,GAAMC,QAASvB,EAAEwB,QAAF,CAAWC,cAAX,CAA0BJ,EAA1B,CAAf,CACA,GAAMK,YAAaJ,IAAIK,KAAJ,CAAU,GAAV,CAAnB,CACA,GAAMC,eAAgBC,SAASH,WAAW,CAAX,CAAT,CAAwB,EAAxB,CAAtB,CACA,GAAMI,QAAS9B,EAAEwB,QAAF,CAAWO,aAAX,CAAyBH,aAAzB,CAAf,CACA,GAAMI,UAAWX,GAAGY,OAAH,CAAW,IAAX,CAAiB,GAAjB,CAAjB,CACA,MAAQ,+BAAQ,IAAKX,GAAb,CAAkB,MAAOD,EAAzB,EAA8BS,MAA9B,KAAuCE,QAAvC,CAAiDT,OAAOW,GAAP,CAAa,GAAb,CAAmB,EAApE,CAAR,CACH,CARA,CAFG,CAAR,CAYH,CA3BqC,CAAjB,CAAzB,CA8BA,MAAOjC,iBAAP,CACH,CAvCD","file":"TimeZoneDropDown.js","sourcesContent":["define([\n    'create-react-class',\n    'prop-types',\n    'jstz',\n    'util/formatters'\n], function (createReactClass, PropTypes, jstz, F) {\n    'use strict';\n\n    const TimeZoneDropDown = createReactClass({\n        propTypes: {\n            value: PropTypes.string.isRequired,\n            onChange: PropTypes.func.isRequired,\n            disabled: PropTypes.bool\n        },\n\n        handleTimeZoneChange(evt) {\n            const name = evt.target.value;\n            this.props.onChange(name);\n        },\n\n        render() {\n            const disabled = 'disabled' in this.props ? this.props.disabled : false;\n\n            return (<select disabled={disabled} onChange={this.handleTimeZoneChange}\n                            value={this.props.value}>\n                {Object.keys(jstz.olson.timezones).map(key => {\n                    const tz = jstz.olson.timezones[key];\n                    const tzInfo = F.timezone.lookupTimezone(tz);\n                    const components = key.split(',');\n                    const offsetMinutes = parseInt(components[0], 10);\n                    const offset = F.timezone.offsetDisplay(offsetMinutes);\n                    const tzPretty = tz.replace(/_/g, ' ');\n                    return (<option key={key} value={tz}>{offset} {tzPretty}{tzInfo.dst ? '*' : ''}</option>);\n                })}\n            </select>);\n        }\n    });\n\n    return TimeZoneDropDown;\n});\n"]}