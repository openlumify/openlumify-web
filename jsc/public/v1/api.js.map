{"version":3,"sources":["../../../js/public/v1/api.js"],"names":["define","defineComponent","registry","connectReact","connect","Promise","all","map","module","require","spread","List","ConceptSelector","PropertySelector","RelationshipSelector","F","JustificationViewer","VisibilityEditor","VisibilityViewer","withDataRequest","connected","components","OntologyConceptSelector","OntologyPropertySelector","OntologyRelationshipSelector","formatters","dataRequest"],"mappings":"AAWAA,OAAO,CACH,sBADG,CAEH,gCAFG,CAGH,qBAHG,CAAP,CAIG,SACCC,eADD,CAECC,QAFD,CAGCC,YAHD,CAGe,CACd,aAKA,MAAO,CAQHC,QAASA,OARN,CAgBHD,aAAcA,YAhBX,CA4CHF,gBAAiBA,eA5Cd,CAmDHC,SAAUA,QAnDP,CAAP,CAsDA,QAASE,QAAT,EAAmB,CACf,MAAOC,SAAQC,GAAR,CAAY,CACf,mBADe,CAEf,6BAFe,CAGf,8BAHe,CAIf,kCAJe,CAKf,wBALe,CAMf,kCANe,CAOf,sBAPe,CAQf,sBARe,CASf,sBATe,EAUjBC,GAViB,CAUb,SAASC,MAAT,CAAiB,CACnB,MAAOH,SAAQI,OAAR,CAAgBD,MAAhB,CAAP,CACH,CAZkB,CAAZ,EAYHE,MAZG,CAYI,SACPC,IADO,CAEPC,eAFO,CAGPC,gBAHO,CAIPC,oBAJO,CAKPC,CALO,CAMPC,mBANO,CAOPC,gBAPO,CAQPC,gBARO,CASPC,eATO,CASU,CAcjB,GAAIC,WAAY,CAOZC,WAAY,CASRL,oBAAqBA,mBATb,CAkBRL,KAAMA,IAlBE,CA4BRW,wBAAyBV,eA5BjB,CAqCRW,yBAA0BV,gBArClB,CA8CRW,6BAA8BV,oBA9CtB,CAPA,CAgEZW,WAAYV,CAhEA,CAyEZW,YAAaP,gBAAgBO,WAzEjB,CAAhB,CA4EA,MAAON,UAAP,CACH,CAhHM,CAAP,CAiHH,CACJ,CAtLD","file":"api.js","sourcesContent":["/**\n * Plugins should `require` this module for access to OpenLumify components and\n * helpers.\n *\n * @module public/v1/api\n * @classdesc OpenLumify Top-Level API\n * @example\n * require(['public/v1/api'], function(openlumifyApi) {\n *     // ...\n * })\n */\ndefine([\n    'flight/lib/component',\n    'configuration/plugins/registry',\n    'public/connectReact'\n], function(\n    defineComponent,\n    registry,\n    connectReact) {\n    'use strict';\n\n    /**\n     * @alias module:public/v1/api\n     */\n    return {\n\n        /**\n         * Connect to secondary dependencies\n         *\n         * @function\n         * @returns {Promise.<(module:public/v1/api.connected)>} The connected objects\n         */\n        connect: connect,\n\n        /**\n         * {@link module:public/connectReact|Higher-order component}\n         * for React that automcatically loads `connect`.\n         *\n         * @see module:public/connectReact\n         */\n        connectReact: connectReact,\n\n        /**\n         * Reference to Flight `defineComponent`\n         *\n         * @function\n         * @deprecated React is now the preferred component model.\n         * @example\n         * // Creating react component\n         * define(['create-react-class'], function(createReactClass) {\n         *  return createReactClass({\n         *      render() {\n         *          return <h1>Hello</h1>\n         *      }\n         *  })\n         * })\n         * @example\n         * // Creating flightjs component\n         * define([], function() {\n         *  return defineComponent(MyFlightComp);\n         *\n         *  function MyFlightComp() {\n         *     this.after('initialize', function() {\n         *         this.$node.html('<h1>Hello</h1>');\n         *     }\n         *  }\n         * })\n         */\n        defineComponent: defineComponent,\n\n        /**\n         * {@link module:registry|Extension Registry}\n         * component allows plugins to configure extension points.\n         * @see module:registry\n         */\n        registry: registry\n    };\n\n    function connect() {\n        return Promise.all([\n            'util/element/list',\n            'util/ontology/conceptSelect',\n            'util/ontology/propertySelect',\n            'util/ontology/relationshipSelect',\n            'util/vertex/formatters',\n            'util/vertex/justification/viewer',\n            'util/visibility/edit',\n            'util/visibility/view',\n            'util/withDataRequest'\n        ].map(function(module) {\n            return Promise.require(module);\n        })).spread(function(\n            List,\n            ConceptSelector,\n            PropertySelector,\n            RelationshipSelector,\n            F,\n            JustificationViewer,\n            VisibilityEditor,\n            VisibilityViewer,\n            withDataRequest) {\n\n            /**\n             * OpenLumify Second-Level API\n             *\n             * @alias module:public/v1/api.connected\n             * @namespace\n             * @example\n             * require(['public/v1/api'], function(api) {\n             *     api.then(function(connected) {\n             *         // ...\n             *     })\n             * })\n             */\n            var connected = {\n\n                /**\n                 * Shared user interface components\n                 *\n                 * @namespace\n                 */\n                components: {\n\n                    /**\n                     * Display justification values\n                     *\n                     * Reference to {@link module:components/JustificationViewer|JustificationViewer}\n                     *\n                     * @see module:components/JustificationViewer\n                     */\n                    JustificationViewer: JustificationViewer,\n\n                    /**\n                     * Render lists of elements\n                     *\n                     * Reference to {@link module:components/List|List}\n                     *\n                     * @see module:components/List\n                     */\n                    List: List,\n\n                    /**\n                     * Concept select dropdown\n                     *\n                     * Reference to {@link\n                     * module:components/ConceptSelect|ConceptSelect}\n                     *\n                     * @see module:components/ConceptSelect\n                     */\n                    OntologyConceptSelector: ConceptSelector,\n\n                    /**\n                     * Property select dropdown\n                     *\n                     * Reference to {@link module:components/PropertySelect|PropertySelect}\n                     *\n                     * @see module:components/PropertySelect\n                     */\n                    OntologyPropertySelector: PropertySelector,\n\n                    /**\n                     * Relationship select dropdown\n                     *\n                     * Reference to {@link module:components/RelationshipSelect|RelationshipSelect}\n                     *\n                     * @see module:components/RelationshipSelect\n                     */\n                    OntologyRelationshipSelector: RelationshipSelector\n                },\n\n                /**\n                 * Helpful utities for formatting datatypes to user\n                 * displayable values\n                 *\n                 * Reference to {@link module:formatters|Formatters}\n                 *\n                 * @see module:formatters\n                 */\n                formatters: F,\n\n                /**\n                 * Make service requests on web worker thread\n                 *\n                 * Reference to {@link module:dataRequest}\n                 *\n                 * @see module:dataRequest\n                 */\n                dataRequest: withDataRequest.dataRequest\n            };\n\n            return connected\n        });\n    }\n});\n"]}