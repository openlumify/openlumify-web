{"version":3,"sources":["../../js/data/withSessionTimeout.js"],"names":["define","SecondsBeforeTimeout","Key","ConfigKey","SecondsToMillis","MinutesToMillis","UserInitiatedLogoutHint","MinumumWarning","warnAboutWriting","_","once","console","warn","withSessionTimeout","after","worker","postMessage","type","init","on","document","sessionTimeoutWillLogout","sessionTimeoutUpdateExpiration","Promise","all","require","dataRequestPromise","then","dr","parseFloat","props","spread","overlay","minutes","Overlay","defaultExpiration","sessionTimeoutListeners","sessionTimeoutPushUserActivityExtend","schedule","sessionTimeoutLogout","userInitiatedLogout","$","lookupComponent","Offline","message","i18n","trigger","sessionTimeoutActivityHeartBeatFailed","millis","ignoreStorageUpdates","localStorage","setItem","String","removeItem","error","sessionTimeoutGetExpiration","getItem","parseInt","Date","now","sessionTimeoutWait","warningUser","teardownAll","inactiveLogoutTimer","clearTimeout","expirationMillis","expiration","defaultWarningDurationMillis","setTimeout","warningDuration","Math","min","attachTo","max","throttledActivity","throttle","bind","leading","window","eventFinished","event","isButton","target","is","onSessionTimeoutStorageEvent","key","originalEvent","defer"],"mappings":"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","file":"withSessionTimeout.js","sourcesContent":["define([], function() {\n\n    const SecondsBeforeTimeout = 30;\n    const Key = 'inactivityLogoutDate';\n    const ConfigKey = 'auth.token.expiration_minutes';\n    const SecondsToMillis = 1000;\n    const MinutesToMillis = SecondsToMillis * 60;\n    const UserInitiatedLogoutHint = -1;\n    const MinumumWarning = 5 * SecondsToMillis;\n    const warnAboutWriting = _.once(error => {\n        console.warn(`Unable to write to localStorage,\ninactivity timeout and logout might happen if multiple windows\nare open and inactive.`)\n    });\n\n    return withSessionTimeout;\n\n    function withSessionTimeout() {\n\n        this.after('initialize', function() {\n            this.worker.postMessage({ type: 'userActivityExtend', init: true })\n\n            this.on(document, 'willLogout', () => {\n                if (!this.sessionTimeoutWillLogout) {\n                    this.sessionTimeoutWillLogout = true;\n                    this.sessionTimeoutUpdateExpiration(UserInitiatedLogoutHint);\n                }\n            })\n\n            this.on('applicationReady', _.once(() => {\n                Promise.all([\n                    Promise.require('util/sessionExpirationOverlay'),\n                    this.dataRequestPromise\n                        .then(dr => dr('config', 'properties'))\n                        .then(props => {\n                            return parseFloat(props[ConfigKey], 10);\n                    })\n                ]).spread((overlay, minutes) => {\n                    this.Overlay = overlay;\n                    if (minutes) {\n                        this.defaultExpiration = minutes * 60 * 1000;\n                        this.sessionTimeoutListeners();\n                        this.sessionTimeoutPushUserActivityExtend({ schedule: false });\n                    }\n                })\n            }));\n        });\n\n        this.sessionTimeoutLogout = function({ userInitiatedLogout = false } = {}) {\n            if (!this.sessionTimeoutWillLogout) {\n                this.sessionTimeoutWillLogout = true;\n                require(['util/offlineOverlay'], Offline => {\n                    if (!$(document).lookupComponent(Offline)) {\n                        let message = userInitiatedLogout ? null : i18n('openlumify.session.expired')\n                        $(document).trigger('logout', { message });\n                    }\n                });\n            }\n        };\n\n        this.sessionTimeoutActivityHeartBeatFailed = function() {\n            this.sessionTimeoutLogout();\n        };\n\n        this.sessionTimeoutUpdateExpiration = function(millis) {\n            this.ignoreStorageUpdates = true;\n            try {\n                if (millis) {\n                    localStorage.setItem(Key, String(millis));\n                } else {\n                    localStorage.removeItem(Key);\n                }\n            } catch(error) {\n                warnAboutWriting(error)\n            }\n            this.ignoreStorageUpdates = false;\n        };\n\n        this.sessionTimeoutGetExpiration = function() {\n            const millis = localStorage.getItem(Key);\n            if (millis) {\n                return parseInt(millis, 10);\n            }\n        }\n\n        this.sessionTimeoutPushUserActivityExtend = function({ schedule = true } = {}) {\n            if (!this.sessionTimeoutWillLogout) {\n                this.sessionTimeoutUpdateExpiration(Date.now() + this.defaultExpiration);\n                this.sessionTimeoutWait();\n\n                this.worker.postMessage({\n                    type: 'userActivityExtend',\n                    defaultExpiration: this.defaultExpiration,\n                    schedule\n                });\n            }\n        };\n\n        this.sessionTimeoutWait = function() {\n            this.warningUser = false;\n            this.Overlay.teardownAll();\n            if (this.inactiveLogoutTimer) {\n                clearTimeout(this.inactiveLogoutTimer)\n            }\n\n            const expirationMillis = this.sessionTimeoutGetExpiration();\n            if (expirationMillis) {\n                if (expirationMillis === UserInitiatedLogoutHint) {\n                    this.sessionTimeoutLogout({ userInitiatedLogout: true })\n                } else {\n                    const expiration = expirationMillis - Date.now();\n                    const defaultWarningDurationMillis = SecondsBeforeTimeout * SecondsToMillis;\n                    const warn = expiration - defaultWarningDurationMillis;\n\n                    if (expiration < MinumumWarning) {\n                        this.sessionTimeoutLogout();\n                    } else {\n                        this.inactiveLogoutTimer = setTimeout(() => {\n                            this.warningUser = true;\n                            clearTimeout(this.inactiveLogoutTimer)\n\n                            const warningDuration = Math.min(expirationMillis - Date.now(), defaultWarningDurationMillis);\n                            if (warningDuration < MinumumWarning) {\n                                this.sessionTimeoutLogout();\n                            } else {\n                                this.Overlay.attachTo(document)\n                                this.inactiveLogoutTimer = setTimeout(() => {\n                                    this.sessionTimeoutLogout();\n                                }, warningDuration)\n                            }\n                        }, Math.max(0, warn));\n                    }\n                }\n            }\n        };\n\n        this.sessionTimeoutListeners = function() {\n            const throttledActivity = _.throttle(this.sessionTimeoutPushUserActivityExtend.bind(this), 1000, { leading: false })\n\n            this.on(window, 'mousedown mouseup keydown keyup', event => {\n                if (this.warningUser) {\n                    const eventFinished = event.type === 'mouseup' || event.type === 'keyup';\n                    const isButton = $(event.target).is('.session-continue');\n                    if (eventFinished && isButton) {\n                        this.sessionTimeoutPushUserActivityExtend();\n                    }\n                } else {\n                    throttledActivity();\n                }\n            });\n            this.on(window, 'storage', this.onSessionTimeoutStorageEvent);\n        };\n\n        this.onSessionTimeoutStorageEvent = function(event) {\n            const { key } = event.originalEvent;\n            if (key === Key && !this.ignoreStorageUpdates && !this.sessionTimeoutWillLogout) {\n                // IE returns the old value unless we defer\n                _.defer(() => {\n                    this.sessionTimeoutWait()\n                })\n            }\n        };\n\n    }\n});\n"]}