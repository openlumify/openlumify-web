{"version":3,"sources":["../../js/data/withWorkspaces.js"],"names":["define","withWorkspaces","workspace","undoManagersPerWorkspace","after","self","fireApplicationReadyOnce","_","once","trigger","bind","on","onLoadCurrentWorkspace","onSwitchWorkspace","onUpdateWorkspace","onUndo","onRedo","openlumifyData","storePromise","then","store","observe","state","next","prev","getState","oldWorkspace","currentId","byId","newWorkspace","changed","workspaceId","setPublicApi","title","editable","commentable","each","id","previousWorkspace","workspaceChanged","deletedKeys","Object","keys","omit","forEach","event","currentWorkspaceId","data","Promise","all","require","spread","workspaceActions","dispatch","setCurrent","triggered","buffer","delay","result","legacyKeys","legacy","pick","length","console","warn","isEmpty","dataRequestPromise","dataRequest","clearTimeout","saved","catch","e","error","actions","scope","undoForProduct","redoForProduct"],"mappings":"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","file":"withWorkspaces.js","sourcesContent":["define([], function() {\n    'use strict';\n\n    return withWorkspaces;\n\n    function withWorkspaces() {\n        var workspace,\n            undoManagersPerWorkspace = {};\n\n        this.after('initialize', function() {\n            var self = this;\n\n            this.fireApplicationReadyOnce = _.once(this.trigger.bind(this, 'applicationReady'));\n\n            this.on('loadCurrentWorkspace', this.onLoadCurrentWorkspace);\n            this.on('switchWorkspace', this.onSwitchWorkspace);\n            this.on('updateWorkspace', this.onUpdateWorkspace);\n            this.on('undo', this.onUndo);\n            this.on('redo', this.onRedo);\n\n            openlumifyData.storePromise.then(store => store.observe(state => state.workspace, (next, prev) => {\n                const state = store.getState()\n                const oldWorkspace = prev && prev.currentId && prev.byId[prev.currentId];\n                const newWorkspace = next && next.currentId && next.byId[next.currentId];\n                const changed = newWorkspace && (!oldWorkspace || oldWorkspace.workspaceId !== newWorkspace.workspaceId);\n\n                if (changed) {\n                    workspace = {...newWorkspace};\n                    this.setPublicApi('currentWorkspaceId', workspace.workspaceId);\n                    this.setPublicApi('currentWorkspaceName', workspace.title);\n                    this.setPublicApi('currentWorkspaceEditable', workspace.editable);\n                    this.setPublicApi('currentWorkspaceCommentable', workspace.commentable);\n                    this.trigger('workspaceLoaded', workspace);\n                    this.trigger('selectObjects');\n                    this.fireApplicationReadyOnce();\n                }\n\n                _.each(next.byId, (workspace, id) => {\n                    const previousWorkspace = prev.byId[id];\n                    const workspaceChanged = !previousWorkspace || (previousWorkspace !== workspace);\n                    if (workspaceChanged) {\n                        this.setPublicApi('currentWorkspaceName', workspace.title);\n                        this.setPublicApi('currentWorkspaceEditable', workspace.editable);\n                        this.setPublicApi('currentWorkspaceCommentable', workspace.commentable);\n                        this.trigger('workspaceUpdated', { workspace })\n                    }\n                });\n\n                const deletedKeys = prev && next && Object.keys(_.omit(prev.byId, Object.keys(next.byId)));\n                if (deletedKeys) {\n                    deletedKeys.forEach(workspaceId => {\n                        this.trigger('workspaceDeleted', { workspaceId });\n                    })\n                }\n            }));\n        });\n\n        this.onLoadCurrentWorkspace = function(event) {\n            var currentWorkspaceId = this.openlumifyData.currentWorkspaceId;\n            this.trigger('switchWorkspace', { workspaceId: currentWorkspaceId });\n        };\n\n        this.onSwitchWorkspace = function(event, data) {\n            this.setPublicApi('currentWorkspaceId', data.workspaceId);\n            Promise.all([\n                openlumifyData.storePromise,\n                Promise.require('data/web-worker/store/workspace/actions')\n            ]).spread(function(store, workspaceActions) {\n                store.dispatch(workspaceActions.setCurrent(data.workspaceId))\n            });\n        };\n\n        this.onUpdateWorkspace = function(event, data) {\n            var self = this,\n                triggered = false,\n                buffer = _.delay(function() {\n                    triggered = true;\n                    self.trigger('workspaceSaving', workspace);\n                }, 250),\n                result,\n                legacyKeys = ['entityUpdates', 'entityDeletes'],\n                legacy = _.pick(data, legacyKeys);\n\n            if (legacy.length) {\n                data = _.omit(data, legacyKeys);\n                console.warn('updateWorkspace no longer accepts entity changes');\n            }\n\n            if (!_.isEmpty(data)) {\n                this.dataRequestPromise.then(function(dataRequest) {\n                    dataRequest('workspace', 'save', data)\n                        .then(function(data) {\n                            clearTimeout(buffer);\n                            if (data.saved) {\n                                triggered = true;\n                            }\n                        })\n                        .catch(function(e) {\n                            console.error(e);\n                        })\n                        .then(function() {\n                            if (triggered) {\n                                self.trigger('workspaceSaved', result);\n                            }\n                        })\n                });\n            }\n        };\n\n        this.onUndo = function() {\n            Promise.all([\n                openlumifyData.storePromise,\n                Promise.require('data/web-worker/store/undo/actions')\n            ]).spread((store, actions) => {\n                const scope = this.openlumifyData.currentWorkspaceId;\n                store.dispatch(actions.undoForProduct());\n            });\n        };\n\n        this.onRedo = function() {\n            Promise.all([\n                openlumifyData.storePromise,\n                Promise.require('data/web-worker/store/undo/actions')\n            ]).spread((store, actions) => {\n                const scope = this.openlumifyData.currentWorkspaceId;\n                store.dispatch(actions.redoForProduct());\n            });\n        };\n    }\n});\n"]}