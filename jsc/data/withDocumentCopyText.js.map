{"version":3,"sources":["../../js/data/withDocumentCopyText.js"],"names":["define","withDocumentCopyText","copiedDocumentText","copiedDocumentTextStorageKey","after","on","onDocumentTextCopy","Object","defineProperty","openlumifyData","get","getCopiedDocumentText","event","data","snippet","trigger","message","i18n","subtitle","dismissDuration","window","localStorage","setItem","JSON","stringify","e","console","error","text","getItem","parse","_","isUndefined"],"mappings":"AAAAA,OAAO,EAAP,CAAW,UAAW,CAClB,aAEA,MAAOC,qBAAP,CAEA,QAASA,qBAAT,EAAgC,CAE5B,GAAIC,mBAAJ,CACIC,6BAA+B,4BADnC,CAGA,KAAKC,KAAL,CAAW,YAAX,CAAyB,UAAW,gBAChC,KAAKC,EAAL,CAAQ,kBAAR,CAA4B,KAAKC,kBAAjC,EACAC,OAAOC,cAAP,CAAsBC,cAAtB,CAAsC,oBAAtC,CAA4D,CACxDC,IAAK,qBAAM,OAAKC,qBAAL,EAAN,EADmD,CAA5D,EAGH,CALD,EAOA,KAAKL,kBAAL,CAA0B,SAASM,KAAT,CAAgBC,IAAhB,CAAsB,CAC5CX,mBAAqBW,IAArB,CACA,GAAIA,MAAQA,KAAKC,OAAjB,CAA0B,CACtB,KAAKC,OAAL,CAAa,oBAAb,CAAmC,CAC/BC,QAASC,KAAK,oCAAL,CADsB,CAE/BC,SAAUD,KAAK,6CAAL,CAFqB,CAG/BE,gBAAiB,IAHc,CAAnC,EAKH,CACD,GAAI,gBAAkBC,OAAtB,CAA8B,CAC1B,GAAI,CACAC,aAAaC,OAAb,CAAqBnB,4BAArB,CAAmDoB,KAAKC,SAAL,CAAeX,IAAf,CAAnD,EACH,CAAC,MAAMY,CAAN,CAAS,CACPC,QAAQC,KAAR,CAAc,iCAAd,EACH,CACJ,CACJ,CAhBD,CAkBA,KAAKhB,qBAAL,CAA6B,UAAW,CACpC,GAAIiB,KAAJ,CACA,GAAI,gBAAkBR,OAAtB,CAA8B,CAC1BQ,KAAOP,aAAaQ,OAAb,CAAqB1B,4BAArB,CAAP,CACA,GAAIyB,IAAJ,CAAU,CACNA,KAAOL,KAAKO,KAAL,CAAWF,IAAX,CAAP,CACH,CACJ,CAED,GAAIA,OAAS,IAAT,EAAiBG,EAAEC,WAAF,CAAcJ,IAAd,CAArB,CAA0C,CACtCA,KAAO1B,kBAAP,CACH,CAED,MAAO0B,KAAP,CACH,CAdD,CAeH,CACJ,CAnDD","file":"withDocumentCopyText.js","sourcesContent":["define([], function() {\n    'use strict';\n\n    return withDocumentCopyText;\n\n    function withDocumentCopyText() {\n\n        var copiedDocumentText,\n            copiedDocumentTextStorageKey = 'SESSION_copiedDocumentText';\n\n        this.after('initialize', function() {\n            this.on('copydocumenttext', this.onDocumentTextCopy);\n            Object.defineProperty(openlumifyData, 'copiedDocumentText', {\n                get: () => this.getCopiedDocumentText()\n            });\n        });\n\n        this.onDocumentTextCopy = function(event, data) {\n            copiedDocumentText = data;\n            if (data && data.snippet) {\n                this.trigger('displayInformation', {\n                    message: i18n('element.clipboard.reference.copied'),\n                    subtitle: i18n('element.clipboard.reference.copied.subtitle'),\n                    dismissDuration: 3000\n                });\n            }\n            if ('localStorage' in window) {\n                try {\n                    localStorage.setItem(copiedDocumentTextStorageKey, JSON.stringify(data));\n                } catch(e) {\n                    console.error('Unable to set localStorage item');\n                }\n            }\n        };\n\n        this.getCopiedDocumentText = function() {\n            var text;\n            if ('localStorage' in window) {\n                text = localStorage.getItem(copiedDocumentTextStorageKey);\n                if (text) {\n                    text = JSON.parse(text);\n                }\n            }\n\n            if (text === null || _.isUndefined(text)) {\n                text = copiedDocumentText;\n            }\n\n            return text;\n        }\n    }\n});\n"]}