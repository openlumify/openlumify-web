{"version":3,"sources":["../../../../../js/data/web-worker/store/undo/reducer.js"],"names":["define","initialState","global","undos","redos","undoActionHistory","state","type","payload","scope","undoScope","length","currentUndo","slice","currentRedo","undo","redo","undoActionType","newUndo","scopedState"],"mappings":"8jBAAAA,OAAO,EAAP,CAAW,UAAW,CAClB,aAEA,GAAMC,cAAe,CACjBC,OAAQ,CACJC,MAAO,EADH,CAEJC,MAAO,EAFH,CADS,CAArB,CAOA,MAAO,SAASC,kBAAT,EAAoE,IAAzCC,MAAyC,2DAAjCL,YAAiC,0BAAjBM,KAAiB,MAAjBA,IAAiB,CAAXC,OAAW,MAAXA,OAAW,CACvE,OAAQD,IAAR,EACI,IAAK,MAAL,CAAa,CACT,GAAME,OAAQD,SAAWA,QAAQE,SAAnB,EAAgC,QAA9C,CACA,GAAI,CAACJ,MAAMG,KAAN,CAAL,CAAmB,CACf,MAAOH,MAAP,CACH,CAJQ,iBAKgBA,MAAMG,KAAN,CALhB,CAKDN,KALC,cAKDA,KALC,CAKMC,KALN,cAKMA,KALN,CAMT,GAAI,CAACD,MAAMQ,MAAX,CAAmB,CACf,MAAOL,MAAP,CACH,CACD,GAAMM,aAAcT,MAAMA,MAAMQ,MAAN,CAAe,CAArB,CAApB,CAEA,mBACOL,KADP,oBAEKG,KAFL,CAEa,CACLN,MAAOA,MAAMU,KAAN,CAAY,CAAZ,CAAeV,MAAMQ,MAAN,CAAe,CAA9B,CADF,CAELP,mCAAYA,KAAZ,GAAmBQ,WAAnB,EAFK,CAFb,GAOH,CACD,IAAK,MAAL,CAAa,CACT,GAAMH,QAAQD,SAAWA,QAAQE,SAAnB,EAAgC,QAA9C,CACA,GAAI,CAACJ,MAAMG,MAAN,CAAL,CAAmB,CACf,MAAOH,MAAP,CACH,CAJQ,kBAKgBA,MAAMG,MAAN,CALhB,CAKDN,MALC,eAKDA,KALC,CAKMC,MALN,eAKMA,KALN,CAMT,GAAI,CAACA,OAAMO,MAAX,CAAmB,CACf,MAAOL,MAAP,CACH,CACD,GAAMQ,aAAcV,OAAMA,OAAMO,MAAN,CAAe,CAArB,CAApB,CAEA,mBACOL,KADP,oBAEKG,MAFL,CAEa,CACLN,mCAAYA,MAAZ,GAAmBW,WAAnB,EADK,CAELV,MAAOA,OAAMS,KAAN,CAAY,CAAZ,CAAeT,OAAMO,MAAN,CAAe,CAA9B,CAFF,CAFb,GAOH,CACD,IAAK,WAAL,CACA,QAAS,CACL,GAAI,CAACH,OAAL,CAAc,CACV,MAAOF,MAAP,CACH,CAHI,uBAK+DE,OAL/D,CAKGE,SALH,CAKcD,OALd,gCAKsB,QALtB,oBAKgCM,IALhC,CAK+DP,OAL/D,CAKgCO,IALhC,CAKsCC,IALtC,CAK+DR,OAL/D,CAKsCQ,IALtC,CAK4CC,cAL5C,CAK+DT,OAL/D,CAK4CS,cAL5C,CAML,GAAI,CAACF,IAAD,EAAS,CAACC,IAAd,CAAoB,CAChB,MAAOV,MAAP,CACH,CAED,GAAMY,SAAU,CACZH,SADY,CAEZC,SAFY,CAGZT,KAAMU,gBAAkBV,IAHZ,CAAhB,CAMA,GAAMY,aAAcb,MAAMG,OAAN,GAAgB,CAAEN,MAAO,EAAT,CAAaC,MAAO,EAApB,CAApC,CAhBK,GAiBGD,QAjBH,CAiBoBgB,WAjBpB,CAiBGhB,KAjBH,CAiBUC,OAjBV,CAiBoBe,WAjBpB,CAiBUf,KAjBV,CAmBL,mBACOE,KADP,oBAEKG,OAFL,CAEa,CACLN,mCAAYA,OAAZ,GAAmBe,OAAnB,EADK,CAELd,MAAO,EAFF,CAFb,GAOH,CAlEL,CAoEH,CArED,CAsEH,CAhFD","file":"reducer.js","sourcesContent":["define([], function() {\n    'use strict';\n\n    const initialState = {\n        global: {\n            undos: [],\n            redos: []\n        }\n    };\n\n    return function undoActionHistory(state = initialState, { type, payload }) {\n        switch (type) {\n            case 'UNDO': {\n                const scope = payload && payload.undoScope || 'global';\n                if (!state[scope]) {\n                    return state;\n                }\n                const { undos, redos } = state[scope];\n                if (!undos.length) {\n                    return state;\n                }\n                const currentUndo = undos[undos.length - 1];\n\n                return {\n                    ...state,\n                    [scope]: {\n                        undos: undos.slice(0, undos.length - 1),\n                        redos: [ ...redos, currentUndo ]\n                    }\n                };\n            }\n            case 'REDO': {\n                const scope = payload && payload.undoScope || 'global';\n                if (!state[scope]) {\n                    return state;\n                }\n                const { undos, redos } = state[scope];\n                if (!redos.length) {\n                    return state;\n                }\n                const currentRedo = redos[redos.length - 1];\n\n                return {\n                    ...state,\n                    [scope]: {\n                        undos: [ ...undos, currentRedo ],\n                        redos: redos.slice(0, redos.length - 1)\n                    }\n                };\n            }\n            case 'PUSH_UNDO':\n            default: {\n                if (!payload) {\n                    return state;\n                }\n\n                const { undoScope: scope = 'global', undo, redo, undoActionType } = payload;\n                if (!undo || !redo) {\n                    return state;\n                }\n\n                const newUndo = {\n                    undo,\n                    redo,\n                    type: undoActionType || type\n                };\n\n                const scopedState = state[scope] || { undos: [], redos: [] };\n                const { undos, redos } = scopedState;\n\n                return {\n                    ...state,\n                    [scope]: {\n                        undos: [ ...undos, newUndo ],\n                        redos: []\n                    }\n                };\n            }\n        }\n    }\n});\n"]}