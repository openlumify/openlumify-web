{"version":3,"sources":["../../../../js/data/web-worker/store/actions.js"],"names":["define","validActionKeys","split","isValidAction","action","_","isObject","isString","type","Object","keys","every","isValidKey","key","indexOf","createActions","workerImpl","actions","Error","mapObject","value","payload","meta","name","isFunction","protectFromMain","isMainThread","protectFromWorker","importScripts"],"mappings":"gOAAAA,OAAO,EAAP,CAAW,UAAW,CAClB,aAEA,GAAMC,iBAAkB,0BAA0BC,KAA1B,CAAgC,GAAhC,CAAxB,CAEA,MAAO,CAGHC,aAHG,wBAGWC,MAHX,CAGmB,CAClB,MACIC,GAAEC,QAAF,CAAWF,MAAX,GACAC,EAAEE,QAAF,CAAWH,OAAOI,IAAlB,CADA,EAEAC,OAAOC,IAAP,CAAYN,MAAZ,EAAoBO,KAApB,CAA0BC,UAA1B,CAHJ,CAMA,QAASA,WAAT,CAAoBC,GAApB,CAAyB,CAAE,MAAOZ,iBAAgBa,OAAhB,CAAwBD,GAAxB,EAA+B,CAAC,CAAvC,CAA2C,CACzE,CAXE,CAwBHE,aAxBG,6BAwBoC,IAAvBC,WAAuB,MAAvBA,UAAuB,CAAXC,OAAW,MAAXA,OAAW,CACnC,GAAI,CAACZ,EAAEE,QAAF,CAAWS,UAAX,CAAL,CAA6B,KAAM,IAAIE,MAAJ,CAAU,wCAAV,CAAN,CAC7B,GAAI,CAACb,EAAEC,QAAF,CAAWW,OAAX,CAAL,CAA0B,KAAM,IAAIC,MAAJ,CAAU,2BAAV,CAAN,CAE1B,MAAOb,GAAEc,SAAF,CAAYF,OAAZ,CAAqB,SAASG,KAAT,CAAgBP,GAAhB,CAAqB,CAC7C,GAAIT,QAAS,CAAEI,KAAM,wBAAR,CAAkCa,QAAS,EAA3C,CAA+CC,KAAM,CAAEN,WAAYA,UAAd,CAA0BO,KAAMV,GAAhC,CAArD,CAAb,CACA,GAAIR,EAAEmB,UAAF,CAAaJ,KAAb,CAAJ,CAAyB,CACrB,MAAO,WAAoB,CACvB,mBAAYhB,MAAZ,EAAoBiB,QAASD,gCAA7B,GACH,CAFD,CAGH,CAJD,IAIO,CACH,MAAOhB,OAAP,CACH,CACJ,CATM,CAAP,CAUH,CAtCE,CAwCHqB,eAxCG,2BAwCe,CACd,GAAIC,cAAJ,CAAoB,KAAM,IAAIR,MAAJ,CAAU,sDAAV,CAAN,CACvB,CA1CE,CA4CHS,iBA5CG,6BA4CiB,CAChB,GAAI,CAACD,cAAL,CAAqB,KAAM,IAAIR,MAAJ,CAAU,sDAAV,CAAN,CACxB,CA9CE,CAAP,CAkDA,QAASQ,aAAT,EAAwB,CACpB,MAAO,OAAOE,cAAP,GAAyB,WAAhC,CACH,CACJ,CA1DD","file":"actions.js","sourcesContent":["define([], function() {\n    'use strict';\n\n    const validActionKeys = 'type payload error meta'.split(' ');\n\n    return {\n\n        // Similar to https://github.com/acdlite/flux-standard-action\n        isValidAction(action) {\n            return (\n                _.isObject(action) &&\n                _.isString(action.type) &&\n                Object.keys(action).every(isValidKey)\n            );\n\n            function isValidKey(key) { return validActionKeys.indexOf(key) > -1; }\n        },\n\n        /*\n         * Create FSA compatible actions which include the worker action\n         * mapper.\n         *\n         * We can't send functions over the worker wire, so just send keys and\n         * map those to new actions that could be processed by thunk, promise\n         * middleware.\n         *\n         * Specify functions as the value of actions to add create action\n         * payloads from calling code. If value is not a function it's ignored.\n         */\n        createActions({ workerImpl, actions }) {\n            if (!_.isString(workerImpl)) throw new Error('workerImpl must be defined as a string')\n            if (!_.isObject(actions)) throw new Error('actions must be an object')\n\n            return _.mapObject(actions, function(value, key) {\n                var action = { type: 'ROUTE_TO_WORKER_ACTION', payload: {}, meta: { workerImpl: workerImpl, name: key } }\n                if (_.isFunction(value)) {\n                    return function(...params) {\n                        return { ...action, payload: value(...params) }\n                    }\n                } else {\n                    return action;\n                }\n            })\n        },\n\n        protectFromMain() {\n            if (isMainThread()) throw new Error('This file should only be required in a worker thread')\n        },\n\n        protectFromWorker() {\n            if (!isMainThread()) throw new Error('This file should only be required in the main thread');\n        }\n\n    }\n\n    function isMainThread() {\n        return typeof importScripts === 'undefined'\n    }\n})\n"]}