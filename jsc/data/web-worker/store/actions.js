var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};define([],function(){'use strict';var validActionKeys='type payload error meta'.split(' ');return{isValidAction:function isValidAction(action){return _.isObject(action)&&_.isString(action.type)&&Object.keys(action).every(isValidKey);function isValidKey(key){return validActionKeys.indexOf(key)>-1;}},createActions:function createActions(_ref){var workerImpl=_ref.workerImpl,actions=_ref.actions;if(!_.isString(workerImpl))throw new Error('workerImpl must be defined as a string');if(!_.isObject(actions))throw new Error('actions must be an object');return _.mapObject(actions,function(value,key){var action={type:'ROUTE_TO_WORKER_ACTION',payload:{},meta:{workerImpl:workerImpl,name:key}};if(_.isFunction(value)){return function(){return _extends({},action,{payload:value.apply(undefined,arguments)});};}else{return action;}});},protectFromMain:function protectFromMain(){if(isMainThread())throw new Error('This file should only be required in a worker thread');},protectFromWorker:function protectFromWorker(){if(!isMainThread())throw new Error('This file should only be required in the main thread');}};function isMainThread(){return typeof importScripts==='undefined';}});
//# sourceMappingURL=actions.js.map
