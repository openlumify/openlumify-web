{"version":3,"sources":["../../../../../js/data/web-worker/store/element/reducer.js"],"names":["define","u","element","state","type","payload","focusing","vertexIds","edgeIds","setFocusing","workspaceId","Error","update","updateEdgeLabels","vertexLabels","vertices","_","mapObject","edgeLabels","constant","labels","elementIds","updates","object","concat","map","vertexId","edgeId","previous","edges","updater","e","_DELETED","propertiesByName","groupBy","properties","length","indexBy"],"mappings":"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","file":"reducer.js","sourcesContent":["define(['updeep'], function(u) {\n    'use strict';\n\n    return function element(state, { type, payload }) {\n        if (!state) return { focusing: { vertexIds: {}, edgeIds: {} } }\n\n        if (payload) {\n            switch (type) {\n                case 'ELEMENT_SET_FOCUS': return setFocusing(state, payload)\n\n                case 'ELEMENT_UPDATE':\n                    const { workspaceId } = payload;\n                    if (!workspaceId) throw new Error('WorkspaceId required');\n                    return { ...state, [workspaceId]: update(state[workspaceId], payload) };\n\n                case 'ELEMENT_UPDATE_EDGELABELS': return updateEdgeLabels(state, payload);\n            }\n        }\n\n        return state;\n    }\n\n    function updateEdgeLabels(state, { workspaceId, vertexLabels }) {\n        return u({\n            [workspaceId]: {\n                vertices: {\n                    ..._.mapObject(vertexLabels, labels => {\n                        return { edgeLabels: u.constant(labels) };\n                    })\n                }\n            }\n        }, state)\n    }\n\n    function setFocusing(state, { vertexIds = [], edgeIds = [], elementIds = [] }) {\n        const updates = {\n            vertexIds: _.object(vertexIds.concat(elementIds).map(vertexId => [vertexId, true])),\n            edgeIds: _.object(edgeIds.concat(elementIds).map(edgeId => [edgeId, true]))\n        };\n        return u({ focusing: u.constant(updates) }, state);\n    }\n\n    function update(previous, { vertices, edges }) {\n        const updates = {};\n        const updater = e => {\n            if (e._DELETED) {\n                return null;\n            }\n            e.propertiesByName = e.propertiesByName ? e.propertiesByName : _.groupBy(e.properties, 'name');\n            return u.constant(e);\n        }\n\n        if (vertices && vertices.length) {\n            updates.vertices = _.mapObject(_.indexBy(vertices, 'id'), updater);\n        } else if (!previous || !previous.vertices) updates.vertices = {};\n\n        if (edges && edges.length) {\n            updates.edges = _.mapObject(_.indexBy(edges, 'id'), updater);\n        } else if (!previous || !previous.edges) updates.edges = {};\n\n        return u(updates, previous)\n    }\n\n});\n\n"]}