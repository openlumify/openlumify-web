var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};define(['../actions'],function(storeActions){'use strict';return dataRequest;function dataRequest(_ref){var dispatch=_ref.dispatch;return function(next){return function(action){if(storeActions.isValidAction(action)){if(action.type==='dataRequest'){var _action$payload=action.payload,service=_action$payload.service,name=_action$payload.name,_action$payload$param=_action$payload.params,params=_action$payload$param===undefined?[]:_action$payload$param;var prefix=[service,name,'dataRequest'].join('_');return Promise.require('data/web-worker/services/'+service).then(function(service){dispatch({type:prefix+'Loading',payload:_extends({},action.payload)});return service[name].apply(null,params);}).then(function(result){dispatch({type:prefix+'Success',payload:_extends({},action.payload,{result:result})});}).catch(function(error){dispatch({type:prefix+'Failure',payload:_extends({},action.payload,{error:error})});});}}next(action);};};function isPromise(obj){return obj&&_.isFunction(obj.then);}}});
//# sourceMappingURL=dataRequest.js.map
