var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};define(['../actions'],function(storeActions){'use strict';return function reduxPromise(_ref){var dispatch=_ref.dispatch;return function(next){return function(action){if(!storeActions.isValidAction(action)){return isPromise(action)?action.then(dispatch):next(action);}return isPromise(action.payload)?action.payload.then(function(result){return dispatch(_extends({},action,{payload:result}));},function(error){return dispatch(_extends({},action,{payload:error,error:true}));}):next(action);};};function isPromise(obj){return obj&&_.isFunction(obj.then);}};});
//# sourceMappingURL=promise.js.map
