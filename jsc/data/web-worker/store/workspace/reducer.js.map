{"version":3,"sources":["../../../../../js/data/web-worker/store/workspace/reducer.js"],"names":["define","u","workspace","state","type","payload","currentId","byId","allLoaded","workspaceId","update","deleteWorkspace","setAll","workspaces","updates","_","mapObject","indexBy","constant","w","omit","Error"],"mappings":"sLAAAA,OAAO,CAAC,QAAD,CAAP,CAAmB,SAASC,CAAT,CAAY,CAC3B,aAEA,MAAO,SAASC,UAAT,CAAmBC,KAAnB,MAA6C,IAAjBC,KAAiB,MAAjBA,IAAiB,CAAXC,OAAW,MAAXA,OAAW,CAChD,GAAI,CAACF,KAAL,CAAY,MAAO,CAAEG,UAAW,IAAb,CAAmBC,KAAM,EAAzB,CAA6BC,UAAW,KAAxC,CAAP,CAEZ,OAAQJ,IAAR,EACI,IAAK,sBAAL,CAA6B,MAAOH,GAAE,CAAEK,UAAWD,QAAQI,WAArB,CAAF,CAAsCN,KAAtC,CAAP,CAC7B,IAAK,kBAAL,CAAyB,MAAOO,QAAOP,KAAP,CAAcE,QAAQH,SAAtB,CAAP,CACzB,IAAK,kBAAL,CAAyB,MAAOS,iBAAgBR,KAAhB,CAAuBE,QAAQI,WAA/B,CAAP,CACzB,IAAK,mBAAL,CAA0B,MAAOG,QAAOT,KAAP,CAAcE,QAAQQ,UAAtB,CAAP,CAJ9B,CAOA,MAAOV,MAAP,CACH,CAXD,CAaA,QAASS,OAAT,CAAgBT,KAAhB,CAAuBU,UAAvB,CAAmC,CAC/B,GAAMC,SAAUC,EAAEC,SAAF,CAAYD,EAAEE,OAAF,CAAUJ,UAAV,CAAsB,aAAtB,CAAZ,CAAkD,kBAAKZ,GAAEiB,QAAF,CAAWC,CAAX,CAAL,EAAlD,CAAhB,CACA,MAAOlB,GAAE,CAAEM,KAAMO,OAAR,CAAiBN,UAAW,IAA5B,CAAF,CAAsCL,KAAtC,CAAP,CACH,CAED,QAASQ,gBAAT,CAAyBR,KAAzB,CAAgCM,WAAhC,CAA6C,CACzC,MAAOR,GAAE,CAAEM,KAAMN,EAAEmB,IAAF,CAAO,CAACX,WAAD,CAAP,CAAR,CAAF,CAAmCN,KAAnC,CAAP,CACH,CAED,QAASO,OAAT,CAAgBP,KAAhB,CAAuBD,SAAvB,CAAkC,CAC9B,GAAI,CAACA,SAAL,CAAgB,KAAM,IAAImB,MAAJ,CAAU,iCAAV,CAAN,CAChB,MAAOpB,GAAE,CAAEM,wBAASL,UAAUO,WAAnB,CAAiCR,EAAEiB,QAAF,CAAWhB,SAAX,CAAjC,CAAF,CAAF,CAA+DC,KAA/D,CAAP,CACH,CACJ,CA7BD","file":"reducer.js","sourcesContent":["define(['updeep'], function(u) {\n    'use strict';\n\n    return function workspace(state, { type, payload }) {\n        if (!state) return { currentId: null, byId: {}, allLoaded: false };\n\n        switch (type) {\n            case 'WORKSPACE_SETCURRENT': return u({ currentId: payload.workspaceId }, state);\n            case 'WORKSPACE_UPDATE': return update(state, payload.workspace);\n            case 'WORKSPACE_DELETE': return deleteWorkspace(state, payload.workspaceId);\n            case 'WORKSPACE_SET_ALL': return setAll(state, payload.workspaces);\n        }\n\n        return state\n    }\n\n    function setAll(state, workspaces) {\n        const updates = _.mapObject(_.indexBy(workspaces, 'workspaceId'), w => u.constant(w));\n        return u({ byId: updates, allLoaded: true }, state)\n    }\n\n    function deleteWorkspace(state, workspaceId) {\n        return u({ byId: u.omit([workspaceId]) }, state);\n    }\n\n    function update(state, workspace) {\n        if (!workspace) throw new Error('Workspace must not be undefined')\n        return u({ byId: { [workspace.workspaceId]: u.constant(workspace) }}, state);\n    }\n})\n\n\n"]}