define(['../actions','../../util/ajax','require'],function(actions,ajax,require){actions.protectFromMain();var sort=function sort(workspaces){return _.sortBy(_.filter(workspaces,function(w){return!w.sharedToUser&&'createdBy'in w;}),function(w){return w.title.toLowerCase();});};var api={setCurrent:function setCurrent(_ref){var workspaceId=_ref.workspaceId;return function(dispatch,getState){if(!workspaceId){var workspaces=getState().workspace;return Promise.try(function(){if(workspaces.allLoaded){return Promise.resolve(sort(Object.values(workspaces.byId)));}else{publicData.currentWorkspaceId=null;return ajax('GET','/workspace/all').then(function(result){dispatch(api.setAll({workspaces:result.workspaces}));return sort(result.workspaces);});}}).then(function(list){if(list.length){return list[0].workspaceId;}return ajax('POST','/workspace/create').then(function(workspace){dispatch(api.update({workspace:workspace}));return workspace.workspaceId;});}).then(function(workspaceId){return new Promise(function(f){require(['../ontology/actions-impl'],function(ontologyActions){var getOntology=ontologyActions.get({workspaceId:workspaceId})(dispatch,getState);Promise.resolve(getOntology).then(function(){dispatch({type:'WORKSPACE_SETCURRENT',payload:{workspaceId:workspaceId}});pushSocketMessage({type:'setActiveWorkspace',data:{workspaceId:workspaceId}});f();});});});});}else{return new Promise(function(f){require(['../ontology/actions-impl'],function(ontologyActions){var getOntology=ontologyActions.get({workspaceId:workspaceId})(dispatch,getState);Promise.resolve(getOntology).then(function(){dispatch({type:'WORKSPACE_SETCURRENT',payload:{workspaceId:workspaceId}});dispatch(api.get({workspaceId:workspaceId}));pushSocketMessage({type:'setActiveWorkspace',data:{workspaceId:workspaceId}});f();});});});}};},setAll:function setAll(_ref2){var workspaces=_ref2.workspaces;return{type:'WORKSPACE_SET_ALL',payload:{workspaces:workspaces}};},deleteWorkspace:function deleteWorkspace(_ref3){var workspaceId=_ref3.workspaceId;return function(dispatch,getState){var workspaces=getState().workspace;var workspace=workspaces.byId[workspaceId];if(workspace){dispatch({type:'WORKSPACE_DELETE',payload:{workspaceId:workspaceId}});var _workspaces=getState().workspace;if(_workspaces.currentId===workspaceId){dispatch(api.setCurrent({workspaceId:undefined}));}}};},get:function get(_ref4){var workspaceId=_ref4.workspaceId,invalidate=_ref4.invalidate;return function(dispatch,getState){var workspace=getState().workspace.byId[workspaceId];if(!workspace||invalidate){ajax('GET','/workspace',{workspaceId:workspaceId}).then(function(workspace){return dispatch(api.update({workspace:workspace}));});}};},update:function update(_ref5){var workspace=_ref5.workspace;return function(dispatch,getState){var state=getState();var _state$workspace=state.workspace,currentId=_state$workspace.currentId,byId=_state$workspace.byId;var current=state.user.current;var currentUserId=current&&current.id;var hasAccess=currentUserId===workspace.createdBy||workspace.users.some(function(_ref6){var userId=_ref6.userId;return userId===currentUserId;});if(hasAccess){dispatch({type:'WORKSPACE_UPDATE',payload:{workspace:workspace}});if(!currentId||!byId[currentId]){dispatch(api.setCurrent({workspaceId:workspace.workspaceId}));}else{require(['data/web-worker/store/product/actions-impl','data/web-worker/store/product/selectors'],function(productActions,productSelectors){var selectedProduct=productSelectors.getProduct(state);if(selectedProduct&&selectedProduct.extendedData){dispatch(productActions.get({productId:selectedProduct.id,invalidate:true}));}});}}};}};return api;});
//# sourceMappingURL=actions-impl.js.map
