define(['util/promise','./cancel'],function(Promise,cancelPreviousByHash){'use strict';RequestFailed.prototype=Object.create(Error.prototype);return ajax;function RequestFailed(_ref){var json=_ref.json,_ref$status=_ref.status,status=_ref$status===undefined?'':_ref$status,_ref$statusText=_ref.statusText,statusText=_ref$statusText===undefined?'':_ref$statusText;this.json=json;this.status=status;this.statusText=statusText;}function paramPair(key,value){return key+'='+encodeURIComponent(value);}function isFile(params){return params&&(params instanceof FormData||params instanceof File||params instanceof Blob||_.isArray(params));}function toFileUpload(params){if(params instanceof FormData){return params;}var formData=new FormData();if(!_.isArray(params)){params=[params];}params.forEach(function(file){formData.append(file.name,file);});return formData;}function toQueryString(params){var str='',key;for(key in params){if(typeof params[key]!=='undefined'){if(_.isArray(params[key])){str+=_.map(params[key],_.partial(paramPair,!/\[\]$/.test(key)?key+'[]':key)).join('&')+'&';}else if(_.isObject(params[key])){str+=paramPair(key,JSON.stringify(params[key]))+'&';}else{str+=paramPair(key,params[key])+'&';}}}return str.slice(0,str.length-1);}function ajax(method,url,parameters){var _ref2=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{},cancelHash=_ref2.cancelHash;var debugOptions=arguments[4];var isJson=true,methodRegex=/^(.*)->HTML$/;method=method.toUpperCase();var matches=method.match(methodRegex);if(matches&&matches.length===2){isJson=false;method=matches[1];}var finished=false,r=new XMLHttpRequest(),promise=new Promise(function(fulfill,reject,onCancel){var progressHandler,params=isFile(parameters)?toFileUpload(parameters):toQueryString(parameters),resolvedUrl=BASE_URL+url+(/GET|DELETE/.test(method)&&parameters?'?'+params:''),formData;onCancel(function(){r.abort();});r.onload=function(){finished=true;try{r.upload.removeEventListener('progress',progressHandler);}catch(e){}if(r.status===200){var text=r.responseText;if(isJson){try{var json=JSON.parse(text);if(typeof ajaxPostfilter!=='undefined'){ajaxPostfilter(r,json,{method:method,url:url,parameters:parameters});}fulfill(json);}catch(e){reject(e);}}else{fulfill(text);}}else{if(r.responseText&&/^\s*{/.test(r.responseText)){try{var errorJson=JSON.parse(r.responseText);reject(new RequestFailed({json:errorJson}));return;}catch(e){}}var status=r.status,statusText=r.statusText;reject(new RequestFailed({status:status,statusText:statusText}));}};r.onerror=function(){finished=true;try{r.upload.removeEventListener('progress',progressHandler);}catch(e){}reject(new Error('Network Error'));};r.open(method,resolvedUrl,true);try{r.upload.addEventListener('progress',progressHandler=function progressHandler(event){if(event.lengthComputable){var complete=event.loaded/event.total||0;if(complete<1.0){fulfill.updateProgress(complete);}}},false);}catch(e){}if(method==='POST'&&parameters){formData=params;if(!(params instanceof FormData)){r.setRequestHeader('Content-type','application/x-www-form-urlencoded');}}if(debugOptions){console.warn('Request Debugging is set for '+url);if(debugOptions.error){r.setRequestHeader('OpenLumify-Request-Error',debugOptions.error);}if(debugOptions.errorJson){if(!debugOptions.errorJson.invalidValues){debugOptions.errorJson.invalidValues=[];}r.setRequestHeader('OpenLumify-Request-Error-Json',JSON.stringify(debugOptions.errorJson));}if(debugOptions.delay){r.setRequestHeader('OpenLumify-Request-Delay-Millis',debugOptions.delay);}}if(typeof ajaxPrefilter!=='undefined'){ajaxPrefilter.call(null,r,method,url,parameters);}r.send(formData);});if(cancelHash){cancelPreviousByHash(promise,cancelHash);}return promise;}});
//# sourceMappingURL=ajax.js.map
