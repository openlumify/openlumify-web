define(['../util/ajax','./storeHelper'],function(ajax,storeHelper){'use strict';var api={queryForOptions:function queryForOptions(options){var params={},q=_.isUndefined(options.query.query)?options.query:options.query.query,matchType=options.matchType||'vertex',url='/'+matchType+'/search',originalUrl=url;if(options.conceptFilter&&matchType==='vertex'){if(_.isArray(options.conceptFilter)){params.conceptTypes=JSON.stringify(options.conceptFilter);}else{params.conceptType=options.conceptFilter;}}if(options.edgeLabelFilter&&(matchType==='edge'||options.otherFilters&&options.otherFilters.relatedToVertexIds)){if(_.isArray(options.edgeLabelFilter)){params.edgeLabels=JSON.stringify(options.edgeLabelFilter);}else{params.edgeLabel=options.edgeLabelFilter;}}if(options.paging){if(options.paging.offset)params.offset=options.paging.offset;if(options.paging.size)params.size=options.paging.size;}if(!_.isEmpty(options.sort)){params.sort=options.sort.map(function(sort){return[sort.field,sort.direction.toUpperCase()].join(':');});}if(q){params.q=q;}params.fetchReferencedElements=options.fetchReferencedElements;if(options.otherFilters){_.each(options.otherFilters,function(value,key,options){if(key==='url'){url=value;delete options.url;}else if(_.isString(value)&&!value){delete options[key];}});_.extend(params,options.otherFilters);}params.filter=JSON.stringify(options.propertyFilters||[]);return Promise.resolve({url:url,originalUrl:originalUrl,parameters:params});},search:function search(options){return api.queryForOptions(options).then(function(query){return ajax('POST',query.url,query.parameters);}).then(storeHelper.indexSearchResultsProperties).tap(function(_ref){var elements=_ref.elements,referencedElements=_ref.referencedElements;if(options.disableResultCache!==true){if(referencedElements){storeHelper.putSearchResults(referencedElements);}storeHelper.putSearchResults(elements);}});},'geo-search':function geoSearch(lat,lon,radius){return ajax('GET','/vertex/geo-search',{lat:lat,lon:lon,radius:radius});},findPath:function findPath(options){return ajax('GET','/vertex/find-path',options);},history:function history(vertexId,withVisibility){return ajax('GET','/vertex/history',{graphVertexId:vertexId,withVisibility:withVisibility});},propertyHistory:function propertyHistory(vertexId,property,options){return ajax('GET','/vertex/property/history',_.extend({},options||{},{graphVertexId:vertexId,propertyName:property.name,propertyKey:property.key}));},details:function details(vertexId){return ajax('GET','/vertex/details',{vertexId:vertexId});},multiple:storeHelper.createStoreAccessorOrDownloader('vertex'),properties:function properties(vertexId){return ajax('GET','/vertex/properties',{graphVertexId:vertexId});},propertyDetails:function propertyDetails(vertexId,name,key,visibility){return ajax('GET','/vertex/property/details',{vertexId:vertexId,propertyName:name,propertyKey:key,visibilitySource:visibility||''});},propertyValue:function propertyValue(vertexId,name,key){return ajax('GET->HTML','/vertex/property',{graphVertexId:vertexId,propertyName:name,propertyKey:key});},edges:function edges(vertexId,options){var parameters={graphVertexId:vertexId};if(options){if(options.offset)parameters.offset=options.offset;if(options.size)parameters.size=options.size;if(options.edgeLabel)parameters.edgeLabel=options.edgeLabel;if(options.direction)parameters.direction=options.direction;}return ajax('GET','/vertex/edges',parameters).then(function(response){if(response.relationships){response.relationships.forEach(function(relationship){storeHelper.indexElementProperties(relationship.relationship);storeHelper.indexElementProperties(relationship.vertex);});}return response;});},'delete':function _delete(vertexId){return ajax('DELETE','/vertex',{graphVertexId:vertexId});},exists:function exists(vertexIds){return ajax(vertexIds.length>1?'POST':'GET','/vertex/exists',{vertexIds:vertexIds});},deleteProperty:function deleteProperty(vertexId,property){var url=storeHelper.vertexPropertyUrl(property);return ajax('DELETE',url,{graphVertexId:vertexId,propertyName:property.name,propertyKey:property.key});},'highlighted-text':function highlightedText(vertexId,propertyKey,propertyName){return ajax('GET->HTML','/vertex/highlighted-text',{graphVertexId:vertexId,propertyKey:propertyKey,propertyName:propertyName});},related:function related(vertexIds,options){return ajax('POST','/vertex/find-related',{graphVertexIds:vertexIds,limitEdgeLabel:options.limitEdgeLabel,limitParentConceptId:options.limitParentConceptId});},store:function store(options){return api.multiple(options);},uploadImage:function uploadImage(vertexId,file){return ajax('POST','/vertex/upload-image?'+'graphVertexId='+encodeURIComponent(vertexId),file);},create:function create(justification,conceptType,visibilitySource){return ajax('POST','/vertex/new',_.tap({conceptType:conceptType,visibilitySource:visibilitySource},function(data){if(justification.justificationText){data.justificationText=justification.justificationText;}else if(justification.sourceInfo){data.sourceInfo=JSON.stringify(justification.sourceInfo);}})).tap(storeHelper.updateElement);},cloudImport:function cloudImport(cloudResource,cloudConfiguration){return ajax('POST','/vertex/cloudImport',{cloudResource:cloudResource,cloudConfiguration:JSON.stringify(cloudConfiguration)});},importFiles:function importFiles(files,conceptValue,visibilitySource){var formData=new FormData();_.forEach(files,function(f){formData.append('file',f);if(_.isString(visibilitySource)){formData.append('visibilitySource',visibilitySource);}if(_.isString(conceptValue)){formData.append('conceptId',conceptValue);}});if(_.isArray(conceptValue)){_.forEach(conceptValue,function(v){formData.append('conceptId',v);});}return ajax('POST','/vertex/import',formData);},importFileString:function importFileString(content,conceptValue,visibilitySource){var formData=new FormData();formData.append('file',new Blob([content.string],{type:content.type}),'untitled.'+(content.type==='text/html'?'html':'txt'));if(_.isString(visibilitySource)){formData.append('visibilitySource',visibilitySource);}if(_.isString(conceptValue)){formData.append('conceptId',conceptValue);}return ajax('POST','/vertex/import',formData);},setVisibility:function setVisibility(vertexId,visibilitySource){return ajax('POST','/vertex/visibility',{graphVertexId:vertexId,visibilitySource:visibilitySource}).tap(storeHelper.updateElement);},setPropertyVisibility:function setPropertyVisibility(vertexId,property){return ajax('POST','/vertex/property/visibility',{graphVertexId:vertexId,newVisibilitySource:property.visibilitySource,oldVisibilitySource:property.oldVisibilitySource,propertyKey:property.key,propertyName:property.name});},setProperty:function setProperty(vertexId,property,optionalWorkspaceId){var url=storeHelper.vertexPropertyUrl(property);return ajax('POST',url,_.tap({graphVertexId:vertexId,propertyName:property.name,visibilitySource:property.visibilitySource,oldVisibilitySource:property.oldVisibilitySource},function(params){if(property.sourceInfo){params.sourceInfo=JSON.stringify(property.sourceInfo);}else if(property.justificationText){params.justificationText=property.justificationText;}if(!_.isUndefined(property.key)){params.propertyKey=property.key;}if(property.metadata){params.metadata=JSON.stringify(property.metadata);}if(optionalWorkspaceId){params.workspaceId=optionalWorkspaceId;}if(_.isObject(property.value)){params.values=property.value;}else{params.value=property.value;}})).tap(storeHelper.updateElement);},resolveTerm:function resolveTerm(params){return ajax('POST','/vertex/resolve-term',params);},unresolveTerm:function unresolveTerm(params){return ajax('POST','/vertex/unresolve-term',params);},resolveDetectedObject:function resolveDetectedObject(params){return ajax('POST','/vertex/resolve-detected-object',params);},unresolveDetectedObject:function unresolveDetectedObject(params){return ajax('POST','/vertex/unresolve-detected-object',params);}};return api;});
//# sourceMappingURL=vertex.js.map
