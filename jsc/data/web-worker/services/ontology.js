define(['../util/ajax','../store','configuration/plugins/registry'],function(ajax,store,registry){'use strict';registry.documentExtensionPoint('org.openlumify.ontology','Ignore some ontology warnings',function(e){return _.isArray(e.ignoreColorWarnings);});var PARENT_CONCEPT='http://www.w3.org/2002/07/owl#Thing';var ROOT_CONCEPT='http://openlumify.org#root';var ontologyReady=function ontologyReady(s){return s&&s.ontology&&publicData.currentWorkspaceId&&s.ontology[publicData.currentWorkspaceId]&&!_.isEmpty(s.ontology[publicData.currentWorkspaceId].concepts)&&!_.isEmpty(s.ontology[publicData.currentWorkspaceId].properties)&&!_.isEmpty(s.ontology[publicData.currentWorkspaceId].relationships);};var warnOnce=_.memoize(function(){console.warn.apply(console,arguments);},function(){return arguments.length===2?arguments[1]:arguments[0];});var subscribeToClear=_.once(function(){var _store=store.getStore();var selectOntology=function selectOntology(state){return state.workspace.currentId&&state.ontology&&state.ontology[state.workspace.currentId];};_store.observe(selectOntology,function(current,previous){if(previous&&current){_.defer(api.clearMemoizedValues);}});});var getOntology=function getOntology(){return store.getOrWaitForNestedState(function(s){subscribeToClear();return JSON.parse(JSON.stringify(s.ontology[publicData.currentWorkspaceId]));},ontologyReady);};var extensions=registry.extensionsForPoint('org.openlumify.ontology');var api={clearMemoizedValues:function clearMemoizedValues(){Object.keys(api).forEach(function(key){var obj=api[key];if(_.isFunction(obj)&&'cache'in obj){obj.cache={};}});dispatchMain('dataRequestFastPassClear',{paths:['ontology/ontology','ontology/properties','ontology/relationships']});},ontology:_.memoize(function(){return Promise.all([api.concepts(),api.properties(),api.relationships()]).then(function(results){var concepts=results.shift(),properties=results.shift(),relationships=results.shift();return{concepts:concepts,properties:properties,relationships:relationships};});}),properties:_.memoize(function(){return getOntology().then(function(ontology){return{list:_.sortBy(_.values(ontology.properties),'displayName'),byTitle:ontology.properties,byDataType:_.groupBy(ontology.properties,'dataType'),byDependentToCompound:_.chain(ontology.properties).filter(function(p){return'dependentPropertyIris'in p;}).map(function(p){return p.dependentPropertyIris.map(function(iri){return[iri,p.title];});}).flatten(true).object().value()};});}),propertiesByDomainType:_.memoize(function(type){return getOntology().then(function(ontology){if(type==='extended-data'){return _.chain(ontology.properties).pluck('tablePropertyIris').compact().flatten().uniq().map(function(propertyName){if(!ontology.properties[propertyName]){console.error('could not find extended-data property: '+propertyName);return null;}return ontology.properties[propertyName];}).compact().value();}var items=type==='concept'||type==='vertex'?ontology.concepts:ontology.relationships;return _.chain(items).pluck('properties').compact().flatten().uniq().map(function(propertyName){return ontology.properties[propertyName];}).value();});}),propertiesByRelationship:_.memoize(function(relationshipId){return api.ontology().then(function(ontology){var propertyIds=[],collectPropertyIds=function collectPropertyIds(rId){var relation=ontology.relationships.byId[rId],properties=relation&&relation.properties,parentId=relation&&relation.parentIri;if(properties&&properties.length){propertyIds.push.apply(propertyIds,properties);}if(parentId){collectPropertyIds(parentId);}};collectPropertyIds(relationshipId);var properties=_.chain(propertyIds).uniq().map(function(pId){return ontology.properties.byTitle[pId];}).value();return{list:_.sortBy(properties,'displayName'),byTitle:_.pick(ontology.properties,propertyIds)};});}),propertiesByConceptId:_.memoize(function(conceptId){return getOntology().then(function(ontology){var propertyIds=[],collectPropertyIds=function collectPropertyIds(conceptId){var concept=ontology.concepts[conceptId],properties=concept&&concept.properties,parentConceptId=concept&&concept.parentConcept;if(properties&&properties.length){propertyIds.push.apply(propertyIds,properties);}if(parentConceptId){collectPropertyIds(parentConceptId);}};collectPropertyIds(conceptId);var properties=_.chain(propertyIds).uniq().map(function(pId){return ontology.properties[pId];}).value();return{list:_.sortBy(properties,'displayName'),byTitle:_.pick(ontology.properties,propertyIds)};});}),concepts:_.memoize(function(){var clsIndex=0;return getOntology().then(function(ontology){return{entityConcept:buildTree(ontology.concepts,ontology.concepts[PARENT_CONCEPT]),forAdmin:_.chain(ontology.concepts).filter(onlyEntityConcepts.bind(null,ontology.concepts,true)).map(addFlattenedTitles.bind(null,ontology.concepts,true)).sortBy('flattenedDisplayName').value(),byId:_.chain(ontology.concepts).map(addFlattenedTitles.bind(null,ontology.concepts,false)).indexBy('id').value(),byClassName:_.indexBy(ontology.concepts,'className'),byTitle:_.chain(ontology.concepts).filter(onlyEntityConcepts.bind(null,ontology.concepts,false)).map(addFlattenedTitles.bind(null,ontology.concepts,false)).sortBy('flattenedDisplayName').value()};});function buildTree(concepts,root){var groupedByParent=_.groupBy(concepts,'parentConcept'),ignoreColorWarnings=_.chain(extensions).pluck('ignoreColorWarnings').flatten().unique().value(),findChildrenForNode=function findChildrenForNode(node){node.className='conceptId-'+clsIndex++;node.children=groupedByParent[node.id]||[];node.children=node.children.map(function(child){if(!child.glyphIconHref){child.glyphIconHref=node.glyphIconHref;}if(!child.glyphIconSelectedHref){child.glyphIconSelectedHref=node.glyphIconSelectedHref;}if(child.userVisible!==false&&child.id===child.displayName){warnOnce('Concept displayName is same as IRI',child.id);}if(!child.color){if(node.color){child.color=node.color;}else{if(openlumifyEnvironment.dev&&!_.contains(ignoreColorWarnings,child.id)&&child.userVisible!==false){warnOnce('No color specified in concept hierarchy for conceptType:',child.id);}child.color='rgb(0, 0, 0)';}}return findChildrenForNode(child);});return node;};return findChildrenForNode(root);}function onlyEntityConcepts(conceptsById,includeThing,concept){var parentConceptId=concept.parentConcept,currentParentConcept=null;while(parentConceptId){currentParentConcept=conceptsById[parentConceptId];if(!currentParentConcept){console.error('Could not trace concept\'s lineage to '+PARENT_CONCEPT+' could not find '+parentConceptId,concept);return false;}if(currentParentConcept.id===PARENT_CONCEPT){return true;}parentConceptId=currentParentConcept.parentConcept;}return includeThing&&concept.id===PARENT_CONCEPT;}function addFlattenedTitles(conceptsById,includeThing,concept){var parentConceptId=concept.parentConcept,currentParentConcept=null,parents=[];while(parentConceptId){currentParentConcept=conceptsById[parentConceptId];if(includeThing){if(currentParentConcept.id===ROOT_CONCEPT)break;}else{if(currentParentConcept.id===PARENT_CONCEPT)break;}parents.push(currentParentConcept);parentConceptId=currentParentConcept.parentConcept;}parents.reverse();var leadingSlashIfNeeded=parents.length?'/':'',flattenedDisplayName=_.pluck(parents,'displayName').join('/')+leadingSlashIfNeeded+concept.displayName,indent=flattenedDisplayName.replace(/[^\/]/g,'').replace(/\//g,'&nbsp;&nbsp;&nbsp;&nbsp;');return _.extend({},concept,{flattenedDisplayName:flattenedDisplayName,ancestors:_.pluck(parents,'id'),indent:indent});}}),relationships:_.memoize(function(){return Promise.all([api.concepts(),getOntology()]).then(function(results){var concepts=results.shift(),ontology=results.shift(),conceptIriIsVisible=function conceptIriIsVisible(iri){var concept=concepts.byId[iri];return concept&&concept.userVisible!==false;},list=_.chain(ontology.relationships).filter(function(r){return _.some(r.domainConceptIris,conceptIriIsVisible)&&_.some(r.rangeConceptIris,conceptIriIsVisible);}).sortBy('displayName').value(),out={groupedByRelated:{}};return{list:list,byId:ontology.relationships,byTitle:ontology.relationships,groupedBySourceDestConcepts:conceptGrouping(concepts,list,out),groupedByRelatedConcept:out.groupedByRelated};});function conceptGrouping(concepts,relationships,out){var groupedByRelated=out.groupedByRelated;var groups={},addToAllSourceDestChildrenGroups=function addToAllSourceDestChildrenGroups(r,source,dest){if(source.userVisible===false||dest.userVisible===false){return;}var key=genSourceDestKey(source,dest);if(!groups[key]){groups[key]=[];}if(!groupedByRelated[source]){groupedByRelated[source]={};}if(!groupedByRelated[dest]){groupedByRelated[dest]={};}groups[key].push(r);groupedByRelated[source][dest]=true;groupedByRelated[dest][source]=true;var destConcept=concepts.byId[dest];if(destConcept&&destConcept.children){destConcept.children.forEach(function(c){if(c.userVisible!==false){addToAllSourceDestChildrenGroups(r,source,c.id);}});}var sourceConcept=concepts.byId[source];if(sourceConcept&&sourceConcept.children){sourceConcept.children.forEach(function(c){if(c.userVisible!==false){addToAllSourceDestChildrenGroups(r,c.id,dest);}});}};relationships.forEach(function(r){if(r.userVisible!==false){r.domainConceptIris.forEach(function(source){r.rangeConceptIris.forEach(function(dest){addToAllSourceDestChildrenGroups(r,source,dest);});});}});out.groupedByRelated=_.mapObject(groupedByRelated,function(obj,key){return _.keys(obj);});return groups;}}),relationshipsBetween:_.memoize(function(source,dest){return api.relationships().then(function(relationships){var key=genSourceDestKey(source,dest);return _.chain(relationships.groupedBySourceDestConcepts[key]||[]).uniq(function(r){return r.title;}).sortBy('displayName').value();});},genSourceDestKey)};return api;function genSourceDestKey(source,dest){return[source,dest].join('>');}});
//# sourceMappingURL=ontology.js.map
