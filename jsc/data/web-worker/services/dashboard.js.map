{"version":3,"sources":["../../../../js/data/web-worker/services/dashboard.js"],"names":["define","ajax","storeHelper","requestData","endpoint","params","postData","then","indexSearchResultsProperties","dashboards","result","map","dashboard","items","item","configuration","JSON","parse","e","console","error","dashboardItemDelete","itemId","dashboardItemId","dashboardNew","options","title","mapped","_","extend","stringify","dashboardUpdate","dashboardItemUpdate","id","extensionId","dashboardItemNew","dashboardId","Error"],"mappings":"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","file":"dashboard.js","sourcesContent":["/**\n * Routes for dashboards and dashboard cards/items\n *\n * @module services/dashboard\n * @see module:dataRequest\n */\ndefine([\n    '../util/ajax',\n    './storeHelper'\n], function(ajax, storeHelper) {\n    'use strict';\n\n    /**\n     * @alias module:services/dashboard\n     */\n    return {\n\n        requestData: function(endpoint, params) {\n            return ajax('GET', endpoint, params);\n        },\n\n        postData: function(endpoint, params) {\n            return ajax('POST', endpoint, params)\n                .then(storeHelper.indexSearchResultsProperties);\n        },\n\n        /**\n         * Get list of all dashboards (without extendedData)\n         */\n        dashboards: function() {\n            return ajax('GET', '/dashboard/all')\n                .then(function(result) {\n                    return result.dashboards.map(function(dashboard) {\n                        dashboard.items = dashboard.items.map(function(item) {\n                            if (item.configuration) {\n                                try {\n                                    item.configuration = JSON.parse(item.configuration);\n                                } catch(e) {\n                                    console.error(e);\n                                }\n                            }\n                            return item;\n                        })\n                        return dashboard;\n                    })\n                })\n        },\n\n        /**\n         * Remove an item from a dashboard\n         *\n         * @param {string} itemId\n         */\n        dashboardItemDelete: function(itemId) {\n            return ajax('DELETE', '/dashboard/item', {\n                dashboardItemId: itemId\n            });\n        },\n\n        /**\n         * Create a new dashboard\n         *\n         * @param {object} [options]\n         * @param {string} [options.title='Untitled'] The title of the new dashboard\n         * @param {Array.<object>} [options.items=[]] List of item configurations\n         * to add to new dashboard\n         */\n        dashboardNew: function(options) {\n            var params = {};\n            if (options && options.title) {\n                params.title = options.title;\n            }\n            if (options && options.items) {\n                params.items = options.items.map(function(item) {\n                    var mapped = _.extend({}, item);\n                    if (mapped.configuration) {\n                        mapped.configuration = JSON.stringify(mapped.configuration);\n                    }\n                    return JSON.stringify(mapped);\n                })\n            }\n            return ajax('POST', '/dashboard', params);\n        },\n\n        /**\n         * Update dashboard\n         *\n         * @param {object} params\n         */\n        dashboardUpdate: function(params) {\n            return ajax('POST', '/dashboard', params);\n        },\n\n        /**\n         * Update item on dashboard\n         *\n         * @param {object} item The configuration to update\n         * @param {string} item.id\n         * @param {string} item.extensionId\n         * @param {string} item.title\n         * @param {object} [item.configuration={}]\n         */\n        dashboardItemUpdate: function(item) {\n            return ajax('POST', '/dashboard/item', {\n                dashboardItemId: item.id,\n                extensionId: item.extensionId,\n                title: item.title,\n                configuration: JSON.stringify(item.configuration || {})\n            });\n        },\n\n        /**\n         * Create new dashboard item\n         *\n         * @param {string} dashboardId\n         * @param {object} item The new item configuration\n         * @param {string} item.id\n         * @param {string} item.extensionId\n         * @param {string} [item.title]\n         * @param {object} [item.configuration={}]\n         */\n        dashboardItemNew: function(dashboardId, item) {\n            if (!dashboardId) throw new Error('dashboardId required if new item');\n\n            var params = {\n                dashboardId: dashboardId\n            };\n            if ('title' in item) {\n                params.title = item.title;\n            }\n            if (item.configuration) {\n                params.configuration = JSON.stringify(item.configuration);\n            }\n            if ('extensionId' in item) {\n                params.extensionId = item.extensionId;\n            }\n            return ajax('POST', '/dashboard/item', params);\n        }\n    };\n});\n"]}