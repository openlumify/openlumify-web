{"version":3,"sources":["../../../../js/data/web-worker/services/vertex.js"],"names":["define","ajax","storeHelper","api","queryForOptions","options","params","q","_","isUndefined","query","matchType","url","originalUrl","conceptFilter","isArray","conceptTypes","JSON","stringify","conceptType","edgeLabelFilter","otherFilters","relatedToVertexIds","edgeLabels","edgeLabel","paging","offset","size","isEmpty","sort","map","field","direction","toUpperCase","join","fetchReferencedElements","each","value","key","isString","extend","filter","propertyFilters","Promise","resolve","parameters","search","then","indexSearchResultsProperties","tap","elements","referencedElements","disableResultCache","putSearchResults","lat","lon","radius","findPath","history","vertexId","withVisibility","graphVertexId","propertyHistory","property","propertyName","name","propertyKey","details","multiple","createStoreAccessorOrDownloader","properties","propertyDetails","visibility","visibilitySource","propertyValue","edges","response","relationships","forEach","relationship","indexElementProperties","vertex","exists","vertexIds","length","deleteProperty","vertexPropertyUrl","related","graphVertexIds","limitEdgeLabel","limitParentConceptId","store","uploadImage","file","encodeURIComponent","create","justification","data","justificationText","sourceInfo","updateElement","cloudImport","cloudResource","cloudConfiguration","importFiles","files","conceptValue","formData","FormData","f","append","v","importFileString","content","Blob","string","type","setVisibility","setPropertyVisibility","newVisibilitySource","oldVisibilitySource","setProperty","optionalWorkspaceId","metadata","workspaceId","isObject","values","resolveTerm","unresolveTerm","resolveDetectedObject","unresolveDetectedObject"],"mappings":"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","file":"vertex.js","sourcesContent":["/**\n * Routes for vertices\n *\n * @module services/vertex\n * @see module:dataRequest\n */\ndefine([\n    '../util/ajax',\n    './storeHelper'\n], function(ajax, storeHelper) {\n    'use strict';\n\n    /**\n     * @alias module:services/vertex\n     */\n    var api = {\n\n        queryForOptions: function(options) {\n            var params = {},\n                q = _.isUndefined(options.query.query) ?\n                    options.query :\n                    options.query.query,\n                matchType = options.matchType || 'vertex',\n                url = '/' + matchType + '/search',\n                originalUrl = url;\n\n            if (options.conceptFilter && matchType === 'vertex') {\n                if (_.isArray(options.conceptFilter)) {\n                    params.conceptTypes = JSON.stringify(options.conceptFilter);\n                } else {\n                    params.conceptType = options.conceptFilter\n                }\n            }\n            if (options.edgeLabelFilter\n                && (matchType === 'edge' || (options.otherFilters && options.otherFilters.relatedToVertexIds))) {\n                if (_.isArray(options.edgeLabelFilter)) {\n                    params.edgeLabels = JSON.stringify(options.edgeLabelFilter);\n                } else {\n                    params.edgeLabel = options.edgeLabelFilter\n                }\n            }\n            if (options.paging) {\n                if (options.paging.offset) params.offset = options.paging.offset;\n                if (options.paging.size) params.size = options.paging.size;\n            }\n            if (!_.isEmpty(options.sort)) {\n                params.sort = options.sort.map(function(sort) {\n                    return [sort.field, sort.direction.toUpperCase()].join(':');\n                });\n            }\n\n            if (q) {\n                params.q = q;\n            }\n\n            params.fetchReferencedElements = options.fetchReferencedElements;\n\n            if (options.otherFilters) {\n                _.each(options.otherFilters, function(value, key, options) {\n                    if (key === 'url') {\n                        url = value;\n                        delete options.url;\n                    } else if (_.isString(value) && !value) {\n                        delete options[key];\n                    }\n                });\n                _.extend(params, options.otherFilters);\n            }\n\n            params.filter = JSON.stringify(options.propertyFilters || []);\n            return Promise.resolve({\n                url: url,\n                originalUrl: originalUrl,\n                parameters: params\n            });\n        },\n\n        search: function(options) {\n            return api.queryForOptions(options)\n                .then(function(query) {\n                    return ajax('POST', query.url, query.parameters);\n                })\n                .then(storeHelper.indexSearchResultsProperties)\n                .tap(function({ elements, referencedElements }) {\n                    if (options.disableResultCache !== true) {\n                        if (referencedElements) {\n                            storeHelper.putSearchResults(referencedElements)\n                        }\n                        storeHelper.putSearchResults(elements)\n                    }\n                })\n        },\n\n        'geo-search': function(lat, lon, radius) {\n            return ajax('GET', '/vertex/geo-search', {\n                lat: lat,\n                lon: lon,\n                radius: radius\n            });\n        },\n\n        findPath: function(options) {\n            return ajax('GET', '/vertex/find-path', options);\n        },\n\n        /**\n         * Get history of vertex (property changes, etc)\n         *\n         * @param {string} vertexId\n         * @param {boolean} withVisibility\n         */\n        history: function(vertexId, withVisibility) {\n            return ajax('GET', '/vertex/history', {\n                graphVertexId: vertexId,\n                withVisibility: withVisibility\n            });\n        },\n\n        /**\n         * Get history for single property\n         *\n         * @param {string} vertexId\n         * @param {object} property\n         * @param {string} property.name\n         * @param {string} property.key\n         * @param {object} [options]\n         */\n        propertyHistory: function(vertexId, property, options) {\n            return ajax('GET', '/vertex/property/history', _.extend(\n                {},\n                options || {},\n                {\n                    graphVertexId: vertexId,\n                    propertyName: property.name,\n                    propertyKey: property.key\n                }\n            ));\n        },\n\n        details: function(vertexId) {\n            return ajax('GET', '/vertex/details', { vertexId: vertexId });\n        },\n\n        /**\n         * @see module:services/vertex.store\n         * @function\n         */\n        multiple: storeHelper.createStoreAccessorOrDownloader('vertex'),\n\n        /**\n         * Get vertex properties\n         *\n         * @param {string} vertexId\n         */\n        properties: function(vertexId) {\n            return ajax('GET', '/vertex/properties', {\n                graphVertexId: vertexId\n            });\n        },\n\n        propertyDetails: function(vertexId, name, key, visibility) {\n            return ajax('GET', '/vertex/property/details', {\n                vertexId: vertexId,\n                propertyName: name,\n                propertyKey: key,\n                visibilitySource: visibility || ''\n            });\n        },\n\n        propertyValue: function(vertexId, name, key) {\n            return ajax('GET->HTML', '/vertex/property', {\n                graphVertexId: vertexId,\n                propertyName: name,\n                propertyKey: key\n            });\n        },\n\n        /**\n         * Get connected edges to vertex\n         *\n         * @param {string} id\n         * @param {object} [options]\n         * @param {object} [options.offset]\n         * @param {object} [options.size]\n         * @param {object} [options.edgeLabel]\n         * @param {object} [options.direction]\n         */\n        edges: function(vertexId, options) {\n            var parameters = {\n                graphVertexId: vertexId\n            };\n            if (options) {\n                if (options.offset) parameters.offset = options.offset;\n                if (options.size) parameters.size = options.size;\n                if (options.edgeLabel) parameters.edgeLabel = options.edgeLabel;\n                if (options.direction) parameters.direction = options.direction;\n            }\n\n            return ajax('GET', '/vertex/edges', parameters)\n                .then(function(response) {\n                    if (response.relationships) {\n                        response.relationships.forEach(function(relationship) {\n                            storeHelper.indexElementProperties(relationship.relationship);\n                            storeHelper.indexElementProperties(relationship.vertex);\n                        });\n                    }\n                    return response;\n                });\n        },\n\n        /**\n         * Delete a vertex (sandboxed)\n         *\n         * @param {string} vertexId\n         */\n        'delete': function(vertexId) {\n            return ajax('DELETE', '/vertex', {\n                graphVertexId: vertexId\n            })\n        },\n\n        /**\n         * Check if the vertices exist (in current workspace)\n         *\n         * @param {Array.<string>} vertexIds\n         */\n        exists: function(vertexIds) {\n            return ajax(vertexIds.length > 1 ? 'POST' : 'GET', '/vertex/exists', {\n                vertexIds: vertexIds\n            });\n        },\n\n        /**\n         * Delete a property\n         *\n         * @param {string} vertexId\n         * @param {object} property\n         * @param {string} property.name\n         * @param {string} property.key\n         */\n        deleteProperty: function(vertexId, property) {\n            var url = storeHelper.vertexPropertyUrl(property);\n            return ajax('DELETE', url, {\n                graphVertexId: vertexId,\n                propertyName: property.name,\n                propertyKey: property.key\n            })\n        },\n\n        /**\n         * Get text property in HTML format\n         *\n         * @param {string} vertexId\n         * @param {string} propertyKey\n         * @param {string} propertyName\n         */\n        'highlighted-text': function(vertexId, propertyKey, propertyName) {\n            return ajax('GET->HTML', '/vertex/highlighted-text', {\n                graphVertexId: vertexId,\n                propertyKey: propertyKey,\n                propertyName: propertyName\n            });\n        },\n\n        related: function(vertexIds, options) {\n            return ajax('POST', '/vertex/find-related', {\n                graphVertexIds: vertexIds,\n                limitEdgeLabel: options.limitEdgeLabel,\n                limitParentConceptId: options.limitParentConceptId\n            });\n        },\n\n        /**\n         * Get the vertexIds from the cache or request multiple vertices if they aren't yet cached.\n         *\n         * @function\n         * @param {object} obj\n         * @param {Array.<string>} obj.vertexIds\n         * @return {Array.<object>} vertices\n         * @example\n         * dataRequest('vertex', 'store', {\n         *    vertexIds: ['v1', 'v2']\n         * }).then(function(vertices) {\n         *     // ...\n         * })\n         */\n        store: function(options) {\n            return api.multiple(options);\n        },\n\n        uploadImage: function(vertexId, file) {\n            return ajax('POST', '/vertex/upload-image?' +\n                'graphVertexId=' + encodeURIComponent(vertexId), file);\n        },\n\n        /**\n         * Create new vertex\n         *\n         * @param {object} justification\n         * @param {string} [justification.justificationText]\n         * @param {string} [justification.sourceInfo]\n         * @param {string} conceptType\n         * @param {string} visibilitySource\n         */\n        create: function(justification, conceptType, visibilitySource) {\n            return ajax('POST', '/vertex/new', _.tap({\n                conceptType: conceptType,\n                visibilitySource: visibilitySource\n            }, function(data) {\n                if (justification.justificationText) {\n                    data.justificationText = justification.justificationText;\n                } else if (justification.sourceInfo) {\n                    data.sourceInfo = JSON.stringify(justification.sourceInfo);\n                }\n            })).tap(storeHelper.updateElement);\n        },\n\n        cloudImport: function(cloudResource, cloudConfiguration) {\n            return ajax('POST', '/vertex/cloudImport', {\n                cloudResource, cloudConfiguration: JSON.stringify(cloudConfiguration)\n            })\n        },\n\n        importFiles: function(files, conceptValue, visibilitySource) {\n            var formData = new FormData();\n\n            _.forEach(files, function(f) {\n                formData.append('file', f);\n                if (_.isString(visibilitySource)) {\n                    formData.append('visibilitySource', visibilitySource);\n                }\n                if (_.isString(conceptValue)) {\n                    formData.append('conceptId', conceptValue);\n                }\n            });\n\n            if (_.isArray(conceptValue)) {\n                _.forEach(conceptValue, function(v) {\n                    formData.append('conceptId', v);\n                });\n            }\n\n            return ajax('POST', '/vertex/import', formData);\n        },\n\n        importFileString: function(content, conceptValue, visibilitySource) {\n            var formData = new FormData();\n\n            formData.append('file', new Blob([content.string], {\n                type: content.type\n            }), 'untitled.' + (content.type === 'text/html' ? 'html' : 'txt'));\n            if (_.isString(visibilitySource)) {\n                formData.append('visibilitySource', visibilitySource);\n            }\n            if (_.isString(conceptValue)) {\n                formData.append('conceptId', conceptValue);\n            }\n\n            return ajax('POST', '/vertex/import', formData);\n        },\n\n        /**\n         * Set visibility on an vertex\n         *\n         * @param {string} vertexId\n         * @param {string} visibilitySource\n         */\n        setVisibility: function(vertexId, visibilitySource) {\n            return ajax('POST', '/vertex/visibility', {\n                graphVertexId: vertexId,\n                visibilitySource: visibilitySource\n            }).tap(storeHelper.updateElement);\n        },\n\n        /**\n         * Set visibility on a property\n         *\n         * @param {string} vertexId\n         * @param {object} property\n         * @param {string} property.visibilitySource\n         * @param {string} property.oldVisibilitySource\n         * @param {string} property.key\n         * @param {string} property.name\n         */\n        setPropertyVisibility: function(vertexId, property) {\n            return ajax('POST', '/vertex/property/visibility', {\n                graphVertexId: vertexId,\n                newVisibilitySource: property.visibilitySource,\n                oldVisibilitySource: property.oldVisibilitySource,\n                propertyKey: property.key,\n                propertyName: property.name\n            })\n        },\n\n        /**\n         * Change/add property\n         *\n         * @param {string} vertexId\n         * @param {object} property\n         * @param {string} property.visibilitySource\n         * @param {string} property.justificationText\n         * @param {string} property.value\n         * @param {string} property.name\n         * @param {string} [property.key]\n         * @param {object} [property.metadata]\n         * @param {object} [property.sourceInfo]\n         * @param {string} [workspaceId]\n         */\n        setProperty: function(vertexId, property, optionalWorkspaceId) {\n            var url = storeHelper.vertexPropertyUrl(property);\n            return ajax('POST', url, _.tap({\n                 graphVertexId: vertexId,\n                 propertyName: property.name,\n                 visibilitySource: property.visibilitySource,\n                 oldVisibilitySource: property.oldVisibilitySource\n            }, function(params) {\n                if (property.sourceInfo) {\n                    params.sourceInfo = JSON.stringify(property.sourceInfo);\n                } else if (property.justificationText) {\n                    params.justificationText = property.justificationText;\n                }\n                if (!_.isUndefined(property.key)) {\n                    params.propertyKey = property.key;\n                }\n                if (property.metadata) {\n                    params.metadata = JSON.stringify(property.metadata)\n                }\n                if (optionalWorkspaceId) {\n                    params.workspaceId = optionalWorkspaceId;\n                }\n\n                if (_.isObject(property.value)) {\n                    params.values = property.value;\n                } else {\n                    params.value = property.value;\n                }\n            })).tap(storeHelper.updateElement);\n        },\n\n        resolveTerm: function(params) {\n            return ajax('POST', '/vertex/resolve-term', params);\n        },\n\n        unresolveTerm: function(params) {\n            return ajax('POST', '/vertex/unresolve-term', params);\n        },\n\n        resolveDetectedObject: function(params) {\n            return ajax('POST', '/vertex/resolve-detected-object', params);\n        },\n\n        unresolveDetectedObject: function(params) {\n            return ajax('POST', '/vertex/unresolve-detected-object', params);\n        }\n    };\n\n    return api;\n});\n"]}