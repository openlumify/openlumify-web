{"version":3,"sources":["../../../../js/data/web-worker/handlers/userActivityExtend.js"],"names":["define","ajax","now","Date","getTime","nextExpiration","defaultExpiration","scheduledTimer","sending","ajaxFilters","post","push","request","json","options","expiration","getResponseHeader","parseInt","init","de","schedule","sendOrScheduleHeartBeat","sendHeartBeat","change","val","catch","dispatchMain","finally","clearTimeout","nearlyExpired","timeLeft","expiringSoon","scheduled","setTimeout"],"mappings":"AACAA,OAAO,CAAC,cAAD,CAAP,CAAyB,SAASC,IAAT,CAAe,CACpC,aAEA,GAAMC,KAAM,QAANA,IAAM,SAAM,IAAIC,KAAJ,GAAWC,OAAX,EAAN,EAAZ,CAEA,GAAIC,sBAAJ,CACA,GAAIC,yBAAJ,CACA,GAAIC,sBAAJ,CACA,GAAIC,SAAU,KAAd,CAEAC,YAAYC,IAAZ,CAAiBC,IAAjB,CAAsB,SAACC,OAAD,CAAUC,IAAV,CAAgBC,OAAhB,CAA4B,CAC9C,GAAMC,YAAaH,QAAQI,iBAAR,CAA0B,kCAA1B,CAAnB,CACA,GAAID,UAAJ,CAAgB,CACZV,eAAiBH,MAAQe,SAASF,UAAT,CAAqB,EAArB,CAAzB,CACH,CACJ,CALD,EAOA,MAAO,eAAmE,oBAAxDG,IAAwD,CAAxDA,IAAwD,uBAAjD,KAAiD,WAAvBC,EAAuB,MAA1Cb,iBAA0C,oBAAnBc,QAAmB,CAAnBA,QAAmB,2BAAR,IAAQ,eACtE,GAAI,CAACF,IAAL,CAAW,CACP,GAAI,CAACZ,iBAAL,CAAwB,CACpBA,kBAAoBa,EAApB,CACH,CACD,GAAId,gBAAkBC,iBAAtB,CAAyC,CACrCe,wBAAwBD,QAAxB,EACH,CACJ,CACJ,CATD,CAWA,QAASE,cAAT,EAAyB,CACrB,GAAMC,QAAS,QAATA,OAAS,KAAO,CAAEf,QAAUgB,GAAV,CAAgB,CAAxC,CACAD,OAAO,IAAP,EACAtB,KAAK,KAAL,CAAY,iBAAZ,EACKwB,KADL,CACW,eAAS,CACZC,aAAa,uCAAb,EACH,CAHL,EAIKC,OAJL,CAIa,iBAAMJ,QAAO,KAAP,CAAN,EAJb,EAKH,CAED,QAASF,wBAAT,CAAiCD,QAAjC,CAA2C,CACvCQ,aAAarB,cAAb,EACA,GAAIC,OAAJ,CAAa,CACT,MAAO,MAAP,CACH,CAED,GAAIqB,eAAiBvB,kBAAoB,CAApB,CAAwB,IAA7C,CACA,GAAMwB,UAAWzB,eAAiBH,KAAlC,CACA,GAAM6B,cAAeD,SAAWD,aAAhC,CAEA,GAAIE,YAAJ,CAAkB,CACdT,gBACH,CAFD,IAEO,IAAIF,QAAJ,CAAc,CACjB,GAAMY,WAAYF,SAAWD,aAA7B,CACAtB,eAAiB0B,WAAWX,aAAX,CAA0BU,SAA1B,CAAjB,CACH,CACJ,CACJ,CAvDD","file":"userActivityExtend.js","sourcesContent":["/* globals ajaxFilters:false */\ndefine(['../util/ajax'], function(ajax) {\n    'use strict';\n\n    const now = () => new Date().getTime();\n\n    let nextExpiration;\n    let defaultExpiration;\n    let scheduledTimer;\n    let sending = false;\n\n    ajaxFilters.post.push((request, json, options) => {\n        const expiration = request.getResponseHeader('OpenLumify-Auth-Token-Expiration')\n        if (expiration) {\n            nextExpiration = now() + parseInt(expiration, 10);\n        }\n    })\n\n    return function({ init = false, defaultExpiration: de, schedule = true }) {\n        if (!init) {\n            if (!defaultExpiration) {\n                defaultExpiration = de;\n            }\n            if (nextExpiration && defaultExpiration) {\n                sendOrScheduleHeartBeat(schedule);\n            }\n        }\n    }\n\n    function sendHeartBeat() {\n        const change = val => { sending = val; }\n        change(true)\n        ajax('GET', '/user/heartbeat')\n            .catch(error => {\n                dispatchMain('sessionTimeoutActivityHeartBeatFailed');\n            })\n            .finally(() => change(false))\n    }\n\n    function sendOrScheduleHeartBeat(schedule) {\n        clearTimeout(scheduledTimer)\n        if (sending) {\n            return false;\n        }\n\n        let nearlyExpired = (defaultExpiration / 2 - 5000)\n        const timeLeft = nextExpiration - now();\n        const expiringSoon = timeLeft < nearlyExpired;\n\n        if (expiringSoon) {\n            sendHeartBeat();\n        } else if (schedule) {\n            const scheduled = timeLeft - nearlyExpired;\n            scheduledTimer = setTimeout(sendHeartBeat, scheduled)\n        }\n    }\n});\n"]}