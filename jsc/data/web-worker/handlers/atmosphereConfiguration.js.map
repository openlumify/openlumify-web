{"version":3,"sources":["../../../../js/data/web-worker/handlers/atmosphereConfiguration.js"],"names":["define","message","close","closeSocket","atmosphere","publicData","atmosphereConfiguration","configuration","socket","subscribe","_","extend","onOpen","response","util","__socketPromiseFulfill","__socketOpened","onError","request","dispatchMain","reason","reasonPhrase","error","onClose","status","onMessage","processMainMessage","type","responseBody"],"mappings":"AAAAA,OAAO,EAAP,CAAW,UAAW,CAClB,aACA,MAAO,UAASC,OAAT,CAAkB,CACrB,GAAIA,QAAQC,KAAR,GAAkB,IAAtB,CAA4B,CACxBC,cACH,CAFD,IAEO,IAAI,MAAOC,WAAP,GAAsB,WAA1B,CAAuC,CAC1CC,WAAWC,uBAAX,CAAqCL,QAAQM,aAA7C,CAEAF,WAAWG,MAAX,CAAoBJ,WAAWK,SAAX,CAAqBC,EAAEC,MAAF,CAASV,QAAQM,aAAjB,CAAgC,CACrEK,OAAQ,gBAASC,QAAT,CAAmB,CACvB,GAAIT,WAAWU,IAAX,CAAgBC,sBAApB,CAA4C,CACxCX,WAAWU,IAAX,CAAgBC,sBAAhB,CAAuCV,WAAWG,MAAlD,EACH,CAFD,IAEO,CACHJ,WAAWU,IAAX,CAAgBE,cAAhB,CAAiC,IAAjC,CACH,CACJ,CAPoE,CAQrEC,QAAS,iBAASC,OAAT,CAAkB,CACvBC,aAAa,uBAAb,CAAsC,CAClCC,OAAQF,QAAQG,YADkB,CAElCC,MAAOJ,QAAQI,KAFmB,CAAtC,EAIH,CAboE,CAcrEC,QAAS,iBAASL,OAAT,CAAkB,CACvBd,WAAWU,IAAX,CAAgBE,cAAhB,CAAiC,KAAjC,CACAG,aAAa,uBAAb,CAAsC,CAClCC,OAAQF,QAAQG,YADkB,CAElCC,MAAOJ,QAAQI,KAFmB,CAGlCE,OAAQN,QAAQM,MAHkB,CAAtC,EAKH,CArBoE,CAsBrEC,UAAW,mBAASZ,QAAT,CAAmB,CAC1Ba,mBAAmB,CACfC,KAAM,kBADS,CAEfC,aAAcf,SAASe,YAFR,CAAnB,EAIH,CA3BoE,CAAhC,CAArB,CAApB,CA6BH,CACJ,CApCD,CAqCH,CAvCD","file":"atmosphereConfiguration.js","sourcesContent":["define([], function() {\n    'use strict';\n    return function(message) {\n        if (message.close === true) {\n            closeSocket();\n        } else if (typeof atmosphere !== 'undefined') {\n            publicData.atmosphereConfiguration = message.configuration;\n            // TODO: add sourceId to filter current users requests\n            publicData.socket = atmosphere.subscribe(_.extend(message.configuration, {\n                onOpen: function(response) {\n                    if (atmosphere.util.__socketPromiseFulfill) {\n                        atmosphere.util.__socketPromiseFulfill(publicData.socket);\n                    } else {\n                        atmosphere.util.__socketOpened = true;\n                    }\n                },\n                onError: function(request) {\n                    dispatchMain('websocketStateOnError', {\n                        reason: request.reasonPhrase,\n                        error: request.error\n                    });\n                },\n                onClose: function(request) {\n                    atmosphere.util.__socketOpened = false;\n                    dispatchMain('websocketStateOnClose', {\n                        reason: request.reasonPhrase,\n                        error: request.error,\n                        status: request.status\n                    });\n                },\n                onMessage: function(response) {\n                    processMainMessage({\n                        type: 'websocketMessage',\n                        responseBody: response.responseBody\n                    });\n                }\n            }));\n        }\n    };\n})\n"]}