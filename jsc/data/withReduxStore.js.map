{"version":3,"sources":["../../js/data/withReduxStore.js"],"names":["define","redux","jsonpatch","observe","withReduxStore","before","openlumifyData","storePromise","Promise","storeReady","done","reduxStoreInit","message","initialState","state","devTools","_","isFunction","window","devToolsExtension","enhancers","applyMiddleware","webworkerMiddleware","worker","push","store","createStore","rootReducer","compose","_reduxStore","setupInitialStoreState","reduxStoreAction","dispatch","action","self","loadOntology","loadPixelRatio","loadConfiguration","require","retina","screenActions","$","document","on","event","devicePixelRatio","setPixelRatio","locale","language","localStorage","getItem","country","variant","e","configActions","get","currentUser","handler","off","workspaceId","currentWorkspaceId","ontologyActions","console","error","type","payload","applyDiff","webWorker","next","meta","originator","postMessage","data","diff","copy","copyChangedPaths","newState","applyPatch","newDocument","tree","patches","alreadyCopiedObjs","length","copyIfNeeded","forEach","patch","obj","keys","path","split","i","key","replace","cloned","isArray","alreadyCopied","concat","isObject","Object","assign","contains"],"mappings":"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","file":"withReduxStore.js","sourcesContent":["define([\n    'redux',\n    'fast-json-patch',\n    'data/web-worker/store/enhancer/observe'\n], function(\n    redux,\n    jsonpatch,\n    observe) {\n    'use strict';\n\n    return withReduxStore;\n\n    function withReduxStore() {\n\n        this.before('initialize', function() {\n            openlumifyData.storePromise = new Promise(done => { this.storeReady = done });\n        })\n\n        this.reduxStoreInit = function(message) {\n            const initialState = message.state;\n            const devTools = _.isFunction(window.devToolsExtension) ? window.devToolsExtension() : null;\n            const enhancers = [redux.applyMiddleware(webworkerMiddleware(this.worker)), observe];\n\n            if (devTools) {\n                enhancers.push(devTools);\n            }\n\n            const store = redux.createStore(\n                rootReducer(initialState),\n                redux.compose(...enhancers)\n            );\n\n            this._reduxStore = store;\n            this.setupInitialStoreState();\n            this.storeReady(store);\n        };\n\n        this.reduxStoreAction = function(message) {\n            this._reduxStore.dispatch(message.action);\n        };\n\n        this.setupInitialStoreState = function() {\n            var self = this;\n\n            loadOntology();\n            loadPixelRatio();\n            loadConfiguration();\n\n            function loadPixelRatio() {\n                require(['util/retina', 'data/web-worker/store/screen/actions'], (retina, screenActions) => {\n                    $(document).on('devicePixelRatioChanged', (event, { devicePixelRatio }) => {\n                        self._reduxStore.dispatch(screenActions.setPixelRatio(devicePixelRatio))\n                    });\n                    self._reduxStore.dispatch(screenActions.setPixelRatio(retina.devicePixelRatio))\n                })\n            }\n            function loadConfiguration() {\n                require(['data/web-worker/store/configuration/actions'], configActions => {\n                    var locale = {};\n                    if ('localStorage' in window) {\n                        try {\n                            locale.language = localStorage.getItem('language');\n                            locale.country = localStorage.getItem('country');\n                            locale.variant = localStorage.getItem('variant');\n                        } catch(e) { /*eslint no-empty:0 */ }\n                    }\n                    self._reduxStore.dispatch(configActions.get(locale))\n                });\n            }\n            function loadOntology() {\n                if (!openlumifyData.currentUser) {\n                    self.on(document, 'currentUserOpenLumifyDataUpdated', function handler() {\n                        self.off(document, 'currentUserOpenLumifyDataUpdated', handler);\n                        loadOntology();\n                    });\n                    return;\n                }\n                const workspaceId = openlumifyData.currentUser.currentWorkspaceId;\n                require(['data/web-worker/store/ontology/actions'], ontologyActions => {\n                    self._reduxStore.dispatch(ontologyActions.get(workspaceId))\n                });\n                if (!workspaceId) {\n                    console.error(`Current user doesn't have a currentWorkspaceId property set\nThat should not be possible as /user/me ensures a workspace is created in that case.`);\n                }\n            }\n        }\n    }\n\n    function rootReducer(initialState) {\n        return (state, action) => {\n            if (!state) {\n                return initialState\n            }\n\n            var { type, payload } = action;\n\n            switch (type) {\n                case 'STATE_APPLY_DIFF': return applyDiff(state, payload);\n            }\n\n            return state;\n        }\n    }\n\n    function webworkerMiddleware(webWorker) {\n        return () => (next) => (action) => {\n            if (action.meta && action.meta.originator && action.meta.originator === 'webworker') {\n                return next(action);\n            }\n\n            webWorker.postMessage({\n                type: 'reduxStoreActions',\n                data: {\n                    action: action\n                }\n            });\n        };\n    }\n\n    /*\n     * Apply diff in a redux safe manner by not mutating existing objects.\n     */\n    function applyDiff(state, diff) {\n        // Need to copy all changed paths, since jsonpatch mutates\n        let copy = copyChangedPaths(state, diff);\n\n        const newState = jsonpatch.applyPatch(copy, diff).newDocument;\n\n        return newState;\n    }\n\n    function copyChangedPaths(tree, patches) {\n        var alreadyCopiedObjs = [];\n\n        if (patches.length) {\n            tree = copyIfNeeded(alreadyCopiedObjs, tree);\n        }\n        patches.forEach(function(patch) {\n            var obj = tree,\n                keys = (patch.path || '').split('/');\n            for (var i = 1; i < keys.length; i++) {\n                var key = keys[i]\n                    .replace(/~1/g, '/')\n                    .replace(/~0/g, '~')\n                if (key in obj) {\n                    obj[key] = copyIfNeeded(alreadyCopiedObjs, obj[key]);\n                    obj = obj[key]\n                }\n            }\n        });\n\n        return tree;\n    }\n\n    function copyIfNeeded(alreadyCopiedObjs, obj) {\n        var cloned = obj;\n        if (_.isArray(obj)) {\n            if (!alreadyCopied(alreadyCopiedObjs, obj)) {\n                cloned = obj.concat([]);\n                alreadyCopiedObjs.push(cloned);\n            }\n        } else if (_.isObject(obj)) {\n            if (!alreadyCopied(alreadyCopiedObjs, obj)) {\n                cloned = Object.assign({}, obj);\n                alreadyCopiedObjs.push(cloned);\n            }\n        }\n        return cloned;\n    }\n\n    function alreadyCopied(alreadyCopiedObjs, obj) {\n        return _.contains(alreadyCopiedObjs, obj);\n    }\n});\n\n"]}