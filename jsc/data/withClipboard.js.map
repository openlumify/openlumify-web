{"version":3,"sources":["../../js/data/withClipboard.js"],"names":["define","ClipboardManager","Promise","withClipboard","getObjectsFromClipboardData","data","fulfill","objects","vertexIds","edgeIds","require","F","p","vertexUrl","parametersInUrl","formatVertexAction","action","vertices","len","length","i18n","toLowerCase","after","attachTo","$node","on","onClipboardPaste","onClipboardCut","evt","self","then","trigger","elements","_","isEmpty"],"mappings":"gOAAAA,OAAO,CACH,uBADG,CAEH,cAFG,CAAP,CAGG,SAASC,gBAAT,CAA2BC,OAA3B,CAAoC,CACnC,aAEA,MAAOC,cAAP,CAEA,QAASC,4BAAT,CAAqCC,IAArC,CAA2C,CACvC,MAAO,IAAIH,QAAJ,CAAY,SAASI,OAAT,CAAkB,CACjC,GAAIC,SAAU,CAAEC,UAAW,EAAb,CAAiBC,QAAS,EAA1B,CAAd,CAEA,GAAIJ,IAAJ,CAAU,CACNK,QAAQ,CAAC,2BAAD,CAAR,CAAuC,SAASC,CAAT,CAAY,CAC/C,GAAIC,GAAID,EAAEE,SAAF,CAAYC,eAAZ,CAA4BT,IAA5B,CAAR,CACA,GAAIO,GAAKA,EAAEJ,SAAX,CAAsB,CAClBF,oBAAYM,CAAZ,GACH,CAFD,IAEO,CACHN,QAAQC,OAAR,EACH,CACJ,CAPD,EAQH,CATD,IASO,CACHD,QAAQC,OAAR,EACH,CACJ,CAfM,CAAP,CAgBH,CAED,QAASQ,mBAAT,CAA4BC,MAA5B,CAAoCC,QAApC,CAA8C,CAC1C,GAAIC,KAAMD,SAASE,MAAnB,CACA,MAAOC,MAAK,6BACRF,MAAQ,CAAR,CAAY,KAAZ,CAAoB,MADZ,CAAL,CAEJE,KAAK,4BAA8BJ,OAAOK,WAAP,EAAnC,CAFI,CAEsDH,GAFtD,CAAP,CAGH,CAED,QAASf,cAAT,EAAyB,CAErB,KAAKmB,KAAL,CAAW,YAAX,CAAyB,UAAW,CAChCrB,iBAAiBsB,QAAjB,CAA0B,KAAKC,KAA/B,EAEA,KAAKC,EAAL,CAAQ,gBAAR,CAA0B,KAAKC,gBAA/B,EACA,KAAKD,EAAL,CAAQ,cAAR,CAAwB,KAAKE,cAA7B,EACH,CALD,EAOA,KAAKA,cAAL,CAAsB,SAASC,GAAT,CAAcvB,IAAd,CAAoB,gBACtC,GAAIwB,MAAO,IAAX,CAEAzB,4BAA4BC,KAAKA,IAAjC,EAAuCyB,IAAvC,CAA4C,kBAAY,CACpD,MAAKC,OAAL,CAAa,aAAb,CAA4BC,QAA5B,EACH,CAFD,EAGH,CAND,CAQA,KAAKN,gBAAL,CAAwB,SAASE,GAAT,CAAcvB,IAAd,CAAoB,iBACxC,GAAIwB,MAAO,IAAX,CAEAzB,4BAA4BC,KAAKA,IAAjC,EAAuCyB,IAAvC,CAA4C,kBAAY,IAC5CtB,UAD4C,CACrBwB,QADqB,CAC5CxB,SAD4C,CACjCC,OADiC,CACrBuB,QADqB,CACjCvB,OADiC,CAEpD,GAAIuB,UAAY,EAAEC,EAAEC,OAAF,CAAU1B,SAAV,GAAwByB,EAAEC,OAAF,CAAUzB,OAAV,CAA1B,CAAhB,CAA+D,CAC3D,OAAKsB,OAAL,CAAa,gBAAb,CAA+BC,QAA/B,EACH,CAFD,IAEO,CACH,OAAKD,OAAL,CAAa,cAAb,CAA6B1B,IAA7B,EACH,CACJ,CAPD,EAQH,CAXD,CAYH,CACJ,CAhED","file":"withClipboard.js","sourcesContent":["define([\n    'util/clipboardManager',\n    'util/promise'\n], function(ClipboardManager, Promise) {\n    'use strict';\n\n    return withClipboard;\n\n    function getObjectsFromClipboardData(data) {\n        return new Promise(function(fulfill) {\n            var objects = { vertexIds: [], edgeIds: [] }\n\n            if (data) {\n                require(['util/vertex/urlFormatters'], function(F) {\n                    var p = F.vertexUrl.parametersInUrl(data);\n                    if (p && p.vertexIds) {\n                        fulfill({...p});\n                    } else {\n                        fulfill(objects);\n                    }\n                })\n            } else {\n                fulfill(objects);\n            }\n        });\n    }\n\n    function formatVertexAction(action, vertices) {\n        var len = vertices.length;\n        return i18n('element.clipboard.action.' + (\n            len === 1 ? 'one' : 'some'\n        ), i18n('element.clipboard.action.' + action.toLowerCase()), len);\n    }\n\n    function withClipboard() {\n\n        this.after('initialize', function() {\n            ClipboardManager.attachTo(this.$node);\n\n            this.on('clipboardPaste', this.onClipboardPaste);\n            this.on('clipboardCut', this.onClipboardCut);\n        });\n\n        this.onClipboardCut = function(evt, data) {\n            var self = this;\n\n            getObjectsFromClipboardData(data.data).then(elements => {\n                this.trigger('elementsCut', elements);\n            });\n        };\n\n        this.onClipboardPaste = function(evt, data) {\n            var self = this;\n\n            getObjectsFromClipboardData(data.data).then(elements => {\n                const { vertexIds, edgeIds } = elements;\n                if (elements && !(_.isEmpty(vertexIds) && _.isEmpty(edgeIds))) {\n                    this.trigger('elementsPasted', elements);\n                } else {\n                    this.trigger('genericPaste', data);\n                }\n            });\n        };\n    }\n});\n"]}