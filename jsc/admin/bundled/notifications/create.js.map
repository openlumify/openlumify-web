{"version":3,"sources":["../../../../js/admin/bundled/notifications/create.js"],"names":["define","defineComponent","withFormHelpers","withDataRequest","F","template","CreateNotification","defaultAttrs","buttonSelector","inputSelector","after","self","notification","attr","on","checkValid","onCreate","externalUrl","actionPayload","url","startDate","date","dateTimeString","endDate","Date","$node","html","buttonText","id","severity","_","map","split","name","i","checked","n","getNotification","valid","title","message","select","prop","tap","$","trim","find","val","newNotification","notificationId","timezone","dateTimeStringServer","event","require","dataRequest","then","trigger","section","eq","showSuccess","catch","showError"],"mappings":"AAAAA,OAAO,CACH,sBADG,CAEH,2CAFG,CAGH,sBAHG,CAIH,iBAJG,CAKH,0CALG,CAAP,CAMG,SACCC,eADD,CAECC,eAFD,CAGCC,eAHD,CAICC,CAJD,CAKCC,QALD,CAKW,CACV,aAEA,MAAOJ,iBAAgBK,kBAAhB,CAAoCH,eAApC,CAAqDD,eAArD,CAAP,CAEA,QAASI,mBAAT,EAA8B,CAE1B,KAAKC,YAAL,CAAkB,CACdC,eAAgB,cADF,CAEdC,cAAe,gBAFD,CAAlB,EAKA,KAAKC,KAAL,CAAW,YAAX,CAAyB,UAAW,CAChC,GAAIC,MAAO,IAAX,CACIC,aAAe,KAAKC,IAAL,CAAUD,YAD7B,CAGA,KAAKE,EAAL,CAAQ,oBAAR,CAA8B,CAC1BL,cAAe,KAAKM,UADM,CAA9B,EAIA,KAAKD,EAAL,CAAQ,OAAR,CAAiB,CACbN,eAAgB,KAAKQ,QADR,CAAjB,EAIA,GAAIJ,YAAJ,CAAkB,CACdA,aAAaK,WAAb,CAA2BL,aAAaM,aAAb,EACvBN,aAAaM,aAAb,CAA2BC,GAD/B,CAEAP,aAAaQ,SAAb,CAAyBhB,EAAEiB,IAAF,CAAOC,cAAP,CAAsBV,aAAaQ,SAAnC,CAAzB,CACA,GAAIR,aAAaW,OAAjB,CAA0B,CACtBX,aAAaW,OAAb,CAAuBnB,EAAEiB,IAAF,CAAOC,cAAP,CAAsBV,aAAaW,OAAnC,CAAvB,CACH,CACJ,CAPD,IAOO,CACHX,aAAe,CACXQ,UAAWhB,EAAEiB,IAAF,CAAOC,cAAP,CAAsB,GAAIE,KAAJ,EAAtB,CADA,CAAf,CAGH,CAED,KAAKC,KAAL,CACKC,IADL,CACUrB,SAAS,CACXsB,WAAYf,aAAagB,EAAb,CAAkB,QAAlB,CAA6B,QAD9B,CAEXC,SAAUC,EAAEC,GAAF,CAAM,iCAAiCC,KAAjC,CAAuC,GAAvC,CAAN,CAAmD,SAASC,IAAT,CAAeC,CAAf,CAAkB,CAC3E,MAAO,CACHD,KAAMA,IADH,CAEHE,QAASvB,aAAaiB,QAAb,GAA0BI,IAA1B,EAAkCC,IAAM,CAF9C,CAAP,CAIH,CALS,CAFC,CAQXtB,aAAcA,YARH,CAAT,CADV,EAYA,KAAKG,UAAL,GACH,CAtCD,EAwCA,KAAKA,UAAL,CAAkB,UAAW,CACzB,GAAIqB,GAAI,KAAKC,eAAL,EAAR,CACIC,MACIF,EAAEG,KAAF,EACAH,EAAEI,OADF,EAEAJ,EAAEP,QAFF,EAGAO,EAAEhB,SALV,CAQA,KAAKqB,MAAL,CAAY,gBAAZ,EAA8BC,IAA9B,CAAmC,UAAnC,CAA+C,CAACJ,KAAhD,EACH,CAVD,CAYA,KAAKD,eAAL,CAAuB,UAAW,CAC9B,GAAI1B,MAAO,IAAX,CAEA,MAAOmB,GAAEa,GAAF,CAAM,CACTJ,MAAOK,EAAEC,IAAF,CAAO,KAAKpB,KAAL,CAAWqB,IAAX,CAAgB,QAAhB,EAA0BC,GAA1B,EAAP,CADE,CAETP,QAASI,EAAEC,IAAF,CAAO,KAAKpB,KAAL,CAAWqB,IAAX,CAAgB,UAAhB,EAA4BC,GAA5B,EAAP,CAFA,CAGTlB,SAAU,KAAKJ,KAAL,CAAWqB,IAAX,CAAgB,0BAAhB,EAA4CC,GAA5C,EAHD,CAIT3B,UAAWwB,EAAEC,IAAF,CAAO,KAAKpB,KAAL,CAAWqB,IAAX,CAAgB,YAAhB,EAA8BC,GAA9B,EAAP,CAJF,CAKTxB,QAAS,KAAKE,KAAL,CAAWqB,IAAX,CAAgB,UAAhB,EAA4BC,GAA5B,EALA,CAMT9B,YAAa,KAAKQ,KAAL,CAAWqB,IAAX,CAAgB,cAAhB,EAAgCC,GAAhC,EANJ,CAAN,CAOJ,SAASC,eAAT,CAA0B,CACzB,GAAIrC,KAAKE,IAAL,CAAUD,YAAd,CAA4B,CACxBoC,gBAAgBC,cAAhB,CAAiCtC,KAAKE,IAAL,CAAUD,YAAV,CAAuBgB,EAAxD,CACH,CACD,GAAIoB,gBAAgB5B,SAApB,CAA+B,CAC3B4B,gBAAgB5B,SAAhB,CAA4BhB,EAAE8C,QAAF,CAAWC,oBAAX,CAAgCH,gBAAgB5B,SAAhD,CAA5B,CACH,CACD,GAAI4B,gBAAgBzB,OAApB,CAA6B,CACzByB,gBAAgBzB,OAAhB,CAA0BnB,EAAE8C,QAAF,CAAWC,oBAAX,CAAgCH,gBAAgBzB,OAAhD,CAA1B,CACH,CACJ,CAjBM,CAAP,CAkBH,CArBD,CAuBA,KAAKP,QAAL,CAAgB,SAASoC,KAAT,CAAgB,CAC5B,GAAIzC,MAAO,IAAX,CACA0C,QAAQ,CAAC,iBAAD,CAAR,CAA6B,SAASjD,CAAT,CAAY,CACrCO,KAAK2C,WAAL,CAAiB,OAAjB,CAA0B,0BAA1B,CAAsD3C,KAAK0B,eAAL,EAAtD,EACKkB,IADL,CACU,UAAW,CACb,GAAI5C,KAAKE,IAAL,CAAUD,YAAd,CAA4B,CACxBD,KAAK6C,OAAL,CAAa,iBAAb,CAAgC,CAC5BC,QAAS,sBADmB,CAE5BxB,KAAM,MAFsB,CAAhC,EAIH,CALD,IAKO,CACHtB,KAAKc,KAAL,CAAWqB,IAAX,CAAgB,0BAAhB,EAA4CJ,IAA5C,CAAiD,SAAjD,CAA4D,KAA5D,EACA/B,KAAKc,KAAL,CAAWqB,IAAX,CAAgB,kBAAhB,EAAoCY,EAApC,CAAuC,CAAvC,EAA0ChB,IAA1C,CAA+C,SAA/C,CAA0D,IAA1D,EACA/B,KAAKc,KAAL,CAAWqB,IAAX,CAAgB,kDAAhB,EAAoEC,GAApE,CAAwE,EAAxE,EACApC,KAAKc,KAAL,CAAWqB,IAAX,CAAgB,YAAhB,EAA8BC,GAA9B,CAAkC3C,EAAEiB,IAAF,CAAOC,cAAP,CAAsB,GAAIE,KAAJ,EAAtB,CAAlC,EACAb,KAAKI,UAAL,GACAJ,KAAKgD,WAAL,CAAiB,oBAAjB,EACH,CACJ,CAfL,EAgBKC,KAhBL,CAgBW,UAAW,CACdjD,KAAKkD,SAAL,GACH,CAlBL,EAmBH,CApBD,EAqBH,CAvBD,CAwBH,CACJ,CA3HD","file":"create.js","sourcesContent":["define([\n    'flight/lib/component',\n    'configuration/admin/utils/withFormHelpers',\n    'util/withDataRequest',\n    'util/formatters',\n    'admin/bundled/notifications/template.hbs'\n], function(\n    defineComponent,\n    withFormHelpers,\n    withDataRequest,\n    F,\n    template) {\n    'use strict';\n\n    return defineComponent(CreateNotification, withDataRequest, withFormHelpers);\n\n    function CreateNotification() {\n\n        this.defaultAttrs({\n            buttonSelector: '.btn-primary',\n            inputSelector: 'input,textarea'\n        })\n\n        this.after('initialize', function() {\n            var self = this,\n                notification = this.attr.notification;\n\n            this.on('change keyup paste', {\n                inputSelector: this.checkValid\n            });\n\n            this.on('click', {\n                buttonSelector: this.onCreate\n            });\n\n            if (notification) {\n                notification.externalUrl = notification.actionPayload &&\n                    notification.actionPayload.url;\n                notification.startDate = F.date.dateTimeString(notification.startDate)\n                if (notification.endDate) {\n                    notification.endDate = F.date.dateTimeString(notification.endDate)\n                }\n            } else {\n                notification = {\n                    startDate: F.date.dateTimeString(new Date())\n                }\n            }\n\n            this.$node\n                .html(template({\n                    buttonText: notification.id ? 'Update' : 'Create',\n                    severity: _.map('INFORMATIONAL WARNING CRITICAL'.split(' '), function(name, i) {\n                        return {\n                            name: name,\n                            checked: notification.severity === name || i === 0\n                        }\n                    }),\n                    notification: notification\n                }))\n\n            this.checkValid();\n        });\n\n        this.checkValid = function() {\n            var n = this.getNotification(),\n                valid = (\n                    n.title &&\n                    n.message &&\n                    n.severity &&\n                    n.startDate\n                );\n\n            this.select('buttonSelector').prop('disabled', !valid);\n        }\n\n        this.getNotification = function() {\n            var self = this;\n\n            return _.tap({\n                title: $.trim(this.$node.find('.title').val()),\n                message: $.trim(this.$node.find('.message').val()),\n                severity: this.$node.find('*[name=severity]:checked').val(),\n                startDate: $.trim(this.$node.find('.startDate').val()),\n                endDate: this.$node.find('.endDate').val(),\n                externalUrl: this.$node.find('.externalUrl').val()\n            }, function(newNotification) {\n                if (self.attr.notification) {\n                    newNotification.notificationId = self.attr.notification.id;\n                }\n                if (newNotification.startDate) {\n                    newNotification.startDate = F.timezone.dateTimeStringServer(newNotification.startDate)\n                }\n                if (newNotification.endDate) {\n                    newNotification.endDate = F.timezone.dateTimeStringServer(newNotification.endDate)\n                }\n            });\n        }\n\n        this.onCreate = function(event) {\n            var self = this;\n            require(['util/formatters'], function(F) {\n                self.dataRequest('admin', 'systemNotificationCreate', self.getNotification())\n                    .then(function() {\n                        if (self.attr.notification) {\n                            self.trigger('showAdminPlugin', {\n                                section: 'System Notifications',\n                                name: 'List'\n                            });\n                        } else {\n                            self.$node.find('*[name=severity]:checked').prop('checked', false);\n                            self.$node.find('*[name=severity]').eq(0).prop('checked', true)\n                            self.$node.find('.title,.externalUrl,.message,.startDate,.endDate').val('');\n                            self.$node.find('.startDate').val(F.date.dateTimeString(new Date()));\n                            self.checkValid();\n                            self.showSuccess('Saved Notification');\n                        }\n                    })\n                    .catch(function() {\n                        self.showError();\n                    })\n            })\n        }\n    }\n});\n"]}