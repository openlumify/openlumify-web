define(['create-react-class','prop-types'],function(createReactClass,PropTypes){'use strict';var DetailKeys='fileName className projectVersion builtBy builtOn gitRevision'.split(' ');var TypeDateKeys='builtOn'.split(' ');var PluginItem=function PluginItem(_ref){var item=_ref.item,api=_ref.api;var details=DetailKeys.map(function(key){if(_.contains(TypeDateKeys,key)&&key in item){item[key]=api.formatters.date.dateTimeString(item[key]);}return{display:formatKeyForDisplay(key),value:item[key]};}).filter(function(item){return!!item.value;});return React.createElement('li',null,React.createElement('h1',{className:'name'},item.name),React.createElement('h2',{className:'description'},item.description),React.createElement('dl',null,details.map(function(_ref2){var display=_ref2.display,value=_ref2.value;return[React.createElement('dt',{key:'dt'},display),React.createElement('dd',{key:'dd',title:value},value)];})));};var PluginSection=createReactClass({displayName:'PluginSection',getInitialState:function getInitialState(){return{expanded:false};},toggleCollapsed:function toggleCollapsed(event){this.setState({expanded:!this.state.expanded});},render:function render(){var api=this.props.api,pluginItems=this.props.items.map(function(item){var key=item.className||item.fileName||item.name;return React.createElement(PluginItem,{api:api,key:key,item:item});}),sectionClassName='collapsible has-badge-number',name=formatKeyForDisplay(this.props.name);if(this.props.items.length===0){sectionClassName+=' disabled';}if(this.state.expanded){sectionClassName+=' expanded';}return React.createElement('section',{onClick:this.toggleCollapsed,className:sectionClassName},React.createElement('h1',{className:'collapsible-header'},React.createElement('span',{className:'badge'},this.props.items.length),React.createElement('strong',{title:name},name)),React.createElement('div',null,React.createElement('ol',{className:'inner-list'},pluginItems)));},propTypes:{name:PropTypes.string.isRequired,items:PropTypes.array.isRequired}});var PluginList=createReactClass({displayName:'PluginList',getInitialState:function getInitialState(){return{loading:true,plugins:[]};},componentWillUnmount:function componentWillUnmount(){this.request.cancel();},componentDidMount:function componentDidMount(){var self=this;this.request=this.props.openlumifyApi.v1.dataRequest('admin','plugins').then(function(plugins){self.setState({loading:false,plugins:plugins});}).catch(function(error){self.setState({loading:false,error:error.statusText||error.message});});},render:function render(){var state=this.state,api=this.props.openlumifyApi.v1;if(state.loading){return React.createElement('ul',{className:'nav nav-list'},React.createElement('li',{className:'nav-header'},'Plugins',React.createElement('span',{className:'badge loading'})));}else if(state.error){return React.createElement('ul',{className:'nav nav-list'},React.createElement('li',{className:'nav-header'},state.error));}var pluginSections=_.sortBy(Object.keys(state.plugins),function(name){return name.toLowerCase();}).map(function(plugin){return React.createElement(PluginSection,{api:api,key:plugin,name:plugin,items:state.plugins[plugin]});});return React.createElement('div',{className:'admin-plugin-list'},pluginSections);}});return PluginList;function formatKeyForDisplay(key){if(key.length>1){return key.substring(0,1).toUpperCase()+key.substring(1).replace(/[A-Z]/g,function(cap){return' '+cap;});}return key;}});
//# sourceMappingURL=PluginList.js.map
