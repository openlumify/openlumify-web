{"version":3,"sources":["../../../js/util/jquery/typeAheadUtil.js"],"names":["define","allowEmptyLookup","items","query","$element","val","length","options","minLength","shown","hide","$","isFunction","source","proxy","process","adjustDropdownPosition","inputElement","pos","extend","offset","height","offsetHeight","siblings","css","position","top","left","clearIfNoMatch","selectionDataKey","inputValueFromSelection","_","selection","isString","data","value","cleared","removeData","lastMatches","map","next","children","item","indexOf"],"mappings":"AAAAA,OAAO,EAAP,CACG,UAAW,CACV,aAEA,MAAO,CAQHC,iBAAkB,2BAAW,CACzB,GAAIC,MAAJ,CACA,KAAKC,KAAL,CAAa,KAAKC,QAAL,CAAcC,GAAd,EAAb,CAGA,GAAI,KAAKF,KAAL,CAAWG,MAAX,CAAoB,KAAKC,OAAL,CAAaC,SAArC,CAAgD,CAC5C,MAAO,MAAKC,KAAL,CAAa,KAAKC,IAAL,EAAb,CAA2B,IAAlC,CACH,CAEDR,MAAQS,EAAEC,UAAF,CAAa,KAAKC,MAAlB,EAA4B,KAAKA,MAAL,CAAY,KAAKV,KAAjB,CAAwBQ,EAAEG,KAAF,CAAQ,KAAKC,OAAb,CAAsB,IAAtB,CAAxB,CAA5B,CAAmF,KAAKF,MAAhG,CAEA,MAAOX,OAAQ,KAAKa,OAAL,CAAab,KAAb,CAAR,CAA8B,IAArC,CACH,CApBE,CAoCHc,uBAAwB,gCAASC,YAAT,CAAuB,CAE3C,GAAIb,UAAWO,EAAEM,YAAF,CAAf,CACIC,IAAMP,EAAEQ,MAAF,CAAS,EAAT,CAAaf,SAASgB,MAAT,EAAb,CAAgC,CAAEC,OAAQjB,SAAS,CAAT,EAAYkB,YAAtB,CAAhC,CADV,CAGAlB,SAASmB,QAAT,CAAkB,cAAlB,EAAkCC,GAAlC,CAAsC,CAClCC,SAAU,UADwB,CAElCC,IAAK,CAF6B,CAGlCC,KAAM,CAH4B,CAAtC,EAIGP,MAJH,CAIU,CACNM,IAAKR,IAAIQ,GAAJ,CAAUR,IAAIG,MADb,CAENM,KAAMT,IAAIS,IAFJ,CAJV,EAQH,CAjDE,CAoEHC,eAAgB,wBAASX,YAAT,CAAuBY,gBAAvB,CAAyCC,uBAAzC,CAAkE,CAC9EA,wBAA0BC,EAAEnB,UAAF,CAAakB,uBAAb,EACpBA,uBADoB,CAEpB,SAASE,SAAT,CAAoB,CAAE,MAAOA,UAAP,CAAmB,CAF/C,CAIA,GAAI5B,UAAWO,EAAEM,YAAF,CAAf,CACIe,UAAYD,EAAEE,QAAF,CAAWJ,gBAAX,EAA+BzB,SAAS8B,IAAT,CAAcL,gBAAd,CAA/B,CAAiE,IADjF,CAEIM,MAAQ/B,SAASC,GAAT,EAFZ,CAGI+B,QAAU,KAHd,CAKA,GAAIJ,WAAaF,wBAAwBE,SAAxB,IAAuCG,KAAxD,CAA+D,CAC3D/B,SAASiC,UAAT,CAAoBR,gBAApB,EACAzB,SAASC,GAAT,CAAa,EAAb,EACA+B,QAAU,IAAV,CACH,CAJD,IAIO,CACH,GAAIE,aAAcP,EAAEQ,GAAF,CAAMnC,SAASoC,IAAT,CAAc,cAAd,EAA8BC,QAA9B,CAAuC,IAAvC,CAAN,CAAoD,SAASC,IAAT,CAAe,CACjF,MAAO/B,GAAE+B,IAAF,EAAQR,IAAR,CAAa,OAAb,CAAP,CACH,CAFiB,CAAlB,CAGA,GAAII,YAAYhC,MAAZ,CAAqB,CAArB,EAA2BgC,YAAYK,OAAZ,CAAoBR,KAApB,EAA6B,CAAxD,EAA8DG,YAAYK,OAAZ,CAAoBX,SAApB,EAAiC,CAAnG,CAAsG,CAClG5B,SAASC,GAAT,CAAa,EAAb,EACA+B,QAAU,IAAV,CACH,CACJ,CACD,MAAOA,QAAP,CACH,CA5FE,CAAP,CA8FH,CAlGD","file":"typeAheadUtil.js","sourcesContent":["define([\n], function() {\n    'use strict';\n\n    return {\n        //\n        // This function is meant to be applied to the Bootstrap typeahead component, in order to override its 'lookup'\n        // function.\n        //\n        // Example:\n        //     $(inputElement).typeahead({...}).data(('typeahead').lookup = TypeaheadUtil.allowEmptyLookup;\n        //\n        allowEmptyLookup: function() {\n            var items;\n            this.query = this.$element.val();\n\n            // Remove !this.query check to allow empty values to open dropdown\n            if (this.query.length < this.options.minLength) {\n                return this.shown ? this.hide() : this;\n            }\n\n            items = $.isFunction(this.source) ? this.source(this.query, $.proxy(this.process, this)) : this.source;\n\n            return items ? this.process(items) : this;\n        },\n\n        //\n        // This function should be called on the input element to which the typeahead component is attached whenever\n        // it's necessary to fix the position of the dropdown list, typically when the menu is invoked after scrolling\n        // or resizing.\n        //\n        // Arguments:\n        //    inputElement: the HTML input element on which the typeahead is attached\n        //\n        // Example:\n        //     $(inputElement).typeahead({...}).on('click', function() {\n        //         ...\n        //         TypeaheadUtil.adjustDropdownPosition(inputElement);\n        //     });\n        //\n        adjustDropdownPosition: function(inputElement) {\n            // work-around a typeahead bug - https://github.com/twbs/bootstrap/issues/3529\n            var $element = $(inputElement),\n                pos = $.extend({}, $element.offset(), { height: $element[0].offsetHeight });\n\n            $element.siblings('ul.typeahead').css({\n                position: 'absolute',\n                top: 0,\n                left: 0\n            }).offset({\n                top: pos.top + pos.height,\n                left: pos.left\n            });\n        },\n\n        //\n        // Call this function to clear an invalid value from the typeahead input element. The 'blur' event is an\n        // appropriate time to call this.\n        //\n        // Arguments:\n        //    inputElement: the HTML input element on which the typeahead is attached\n        //    selectionDataKey: (optional) the data key on inputElement where the raw selection value is stored\n        //    inputValueFromSelection: (optional) the function which converts the raw selection value to the\n        //                             displayed inputElement value\n        // Returns:\n        //    true if the value was cleared, false otherwise\n        //\n        // Example:\n        //    $(inputElement).typeahead({...}).on('blur', function() {\n        //         TypeaheadUtil.clearIfNoMatch(inputElement, 'selection', displayValue);\n        //     });\n        //\n        clearIfNoMatch: function(inputElement, selectionDataKey, inputValueFromSelection) {\n            inputValueFromSelection = _.isFunction(inputValueFromSelection)\n                ? inputValueFromSelection\n                : function(selection) { return selection; };\n\n            var $element = $(inputElement),\n                selection = _.isString(selectionDataKey) ? $element.data(selectionDataKey) : null,\n                value = $element.val(),\n                cleared = false;\n\n            if (selection && inputValueFromSelection(selection) !== value) {\n                $element.removeData(selectionDataKey);\n                $element.val('');\n                cleared = true;\n            } else {\n                var lastMatches = _.map($element.next('ul.typeahead').children('li'), function(item) {\n                    return $(item).data('value');\n                });\n                if (lastMatches.length > 0 && (lastMatches.indexOf(value) < 0) && lastMatches.indexOf(selection) < 0) {\n                    $element.val('');\n                    cleared = true;\n                }\n            }\n            return cleared;\n        }\n    };\n});\n"]}