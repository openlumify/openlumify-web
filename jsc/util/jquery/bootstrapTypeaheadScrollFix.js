var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};define([],function(){'use strict';return function(){$.fn.typeahead.Constructor.prototype=_extends({},$.fn.typeahead.Constructor.prototype,{listen:function listen(){this.$element.on('focus',$.proxy(this.focus,this)).on('blur',$.proxy(this.blur,this)).on('keypress',$.proxy(this.keypress,this)).on('keyup',$.proxy(this.keyup,this));if(this.eventSupported('keydown')){this.$element.on('keydown',$.proxy(this.keydown,this));}this.$menu.on('click',$.proxy(this.click,this)).on('mouseenter','li',$.proxy(this.mouseenter,this)).on('mouseleave','li',$.proxy(this.mouseleave,this)).on('mouseenter',$.proxy(this.mouseenterMenu,this)).on('mouseleave',$.proxy(this.mouseleaveMenu,this));},blur:function blur(e){var self=this;if(this.shown&&this.mousedover){e.preventDefault();e.stopImmediatePropagation();_.defer(function(){self.$element.focus();});}else{this.focused=false;if(!this.mousedover&&this.shown)this.hide();}},mouseenter:function mouseenter(e){this.$menu.find('.active').removeClass('active');$(e.currentTarget).addClass('active');},mouseleave:function mouseleave(e){this.$menu.find('.active').removeClass('active');$(e.currentTarget).addClass('active');},mouseenterMenu:function mouseenterMenu(){this.mousedover=true;},mouseleaveMenu:function mouseleaveMenu(){this.mousedover=false;}});};});
//# sourceMappingURL=bootstrapTypeaheadScrollFix.js.map
