{"version":3,"sources":["../../../js/util/element/withPreview.js"],"names":["define","deferredImage","VideoScrubber","F","WithPreview","after","$node","addClass","on","onLoadPreview","before","removeClass","event","previewLoaded","self","preview","find","activePreview","vertex","image","videoPreview","imageFrames","nonConceptClsName","onVideoPreviewActivated","onVideoPreviewDeactivated","css","div","length","$","appendTo","attachTo","posterFrameUrl","videoPreviewImageUrl","remove","concept","activeImage","selectedImage","indexOf","always","done","imageIsFromConcept","glyphIconHref","toggleClass","_","delay","moveScrubber","source","dest","scrubber"],"mappings":"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","file":"withPreview.js","sourcesContent":["define([\n    'util/deferredImage',\n    'util/video/scrubber',\n    'util/vertex/formatters'\n], function(\n    deferredImage,\n    VideoScrubber,\n    F) {\n    'use strict';\n\n    return WithPreview;\n\n    function WithPreview() {\n\n        this.after('initialize', function() {\n            this.$node.addClass('has-preview');\n\n            this.on('loadPreview', this.onLoadPreview);\n        });\n\n        this.before('teardown', function() {\n            this.$node.removeClass('has-preview non_concept_preview video_preview loading');\n        });\n\n        this.onLoadPreview = function(event) {\n            if (!this.previewLoaded) {\n                this.previewLoaded = true;\n\n                var self = this,\n                    preview = this.preview = this.$node.find('.preview'),\n                    activePreview = this.activePreview = this.$node.find('.active-preview'),\n                    vertex = this.vertex,\n                    image = vertex && F.vertex.image(vertex, null, 80),\n                    videoPreview = vertex && F.vertex.imageFrames(vertex),\n                    nonConceptClsName = 'non_concept_preview';\n\n                if (videoPreview) {\n                    this.on('itemActivated', this.onVideoPreviewActivated);\n                    this.on('itemDeactivated', this.onVideoPreviewDeactivated);\n                    this.$node.addClass('video_preview ' + nonConceptClsName);\n                    preview.css('display', 'block');\n\n                    var div = preview.find('div');\n                    if (!div.length) {\n                        div = $('<div>').appendTo(preview);\n                    }\n\n                    VideoScrubber.attachTo(div, {\n                        posterFrameUrl: image,\n                        videoPreviewImageUrl: videoPreview\n                    });\n                } else {\n                    preview.find('div').remove();\n                    var concept = F.vertex.concept(vertex),\n                        activeImage = F.vertex.selectedImage(vertex, null, 80) || image;\n\n                    if ((preview.css('background-image') || '').indexOf(image) >= 0) {\n                        return;\n                    }\n\n                    this.$node.removeClass(nonConceptClsName).addClass('loading');\n\n                    deferredImage(image)\n                    .always(function() {\n                        preview.css('background-image', `url('${image}')`)\n                        activePreview.css('background-image', `url('${activeImage}')`)\n                    })\n                    .done(function() {\n                        let imageIsFromConcept = !vertex || F.vertex.imageIsFromConcept(vertex);\n                        if (!image || concept.glyphIconHref === image) {\n                            self.$node.toggleClass(nonConceptClsName, !imageIsFromConcept)\n                            .removeClass('loading');\n                        } else {\n                            _.delay(function() {\n                                deferredImage(image).always(function() {\n                                    preview.css('background-image', 'url(' + image + ')');\n                                    activePreview.css('background-image', 'url(' + image + ')');\n                                    self.$node.toggleClass(nonConceptClsName, !imageIsFromConcept)\n                                    .removeClass('loading');\n                                })\n                            }, 500);\n                        }\n                    });\n                }\n            }\n        };\n\n        this.onVideoPreviewActivated = function() {\n            moveScrubber(this.preview, this.activePreview);\n        };\n\n        this.onVideoPreviewDeactivated = function() {\n            moveScrubber(this.activePreview, this.preview);\n        }\n    }\n\n    function moveScrubber(source, dest) {\n            var scrubber = source.find('.org-openlumify-video-scrubber');\n            if (scrubber) {\n                scrubber.appendTo(dest);\n                dest.css('display', 'block');\n                source.css('display', 'none');\n            }\n    }\n});\n"]}