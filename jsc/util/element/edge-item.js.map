{"version":3,"sources":["../../../js/util/element/edge-item.js"],"names":["define","defineComponent","template","ontology","JustificationViewer","withDataRequest","F","EdgeItem","after","edge","attr","item","ontologyRelation","relationships","byTitle","label","title","titleFormula","displayName","subtitle","subtitleFormula","timeSubtitle","timeFormula","time","$node","data","id","Promise","all","dataRequest","vertexIds","inVertexId","outVertexId","spread","vertices","properties","inVertex","_","findWhere","outVertex","addClass","html","getData","usageContext","renderJustification","vertex","i18n","image","custom","imageIsFromConcept","titleSpan","children","justification","name","sourceInfo","empty","attachTo","justificationMetadata","value","sourceMetadata","before","removeData","removeClass"],"mappings":"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","file":"edge-item.js","sourcesContent":["define([\n    'flight/lib/component',\n    './edge-item.hbs',\n    'util/requirejs/promise!util/service/ontologyPromise',\n    'util/vertex/justification/viewer',\n    'util/withDataRequest',\n    'util/vertex/formatters'\n], function (defineComponent,\n             template,\n             ontology,\n             JustificationViewer,\n             withDataRequest,\n             F) {\n    'use strict';\n\n    return defineComponent(EdgeItem, withDataRequest);\n\n    function EdgeItem() {\n\n        this.after('initialize', function () {\n            const edge = this.attr.item,\n                ontologyRelation = ontology.relationships.byTitle[edge.label],\n                title = ontologyRelation.titleFormula ? F.edge.title(edge) : ontologyRelation.displayName,\n                subtitle = ontologyRelation.subtitleFormula ? F.edge.subtitle(edge) : null,\n                timeSubtitle = ontologyRelation.timeFormula ? F.edge.time(edge) : null;\n\n            this.$node.data('edgeId', edge.id);\n\n            Promise.all([\n                this.dataRequest('vertex', 'store', {vertexIds: [edge.inVertexId, edge.outVertexId]}),\n                this.dataRequest('config', 'properties')\n            ])\n                .spread((vertices, properties) => {\n                    const inVertex = _.findWhere(vertices, {id: edge.inVertexId});\n                    const outVertex = _.findWhere(vertices, {id: edge.outVertexId});\n                    this.$node\n                        .addClass('default')\n                        .addClass('edge-item')\n                        .addClass(timeSubtitle ? 'has-timeSubtitle' : '')\n                        .addClass(subtitle ? 'has-subtitle' : '')\n                        .html(template({\n                            title: title,\n                            timeSubtitle: timeSubtitle,\n                            subtitle: subtitle,\n                            inVertex: this.getData(inVertex),\n                            outVertex: this.getData(outVertex),\n                        }));\n\n                    if (properties['field.justification.validation'] !== 'NONE' &&\n                        this.attr.usageContext === 'detail/multiple') {\n                        this.renderJustification();\n                    }\n                });\n        });\n\n        this.getData = function (vertex) {\n            if (!vertex) {\n                return {\n                    title: i18n('element.unauthorized'),\n                    image: 'img/glyphicons/glyphicons_194_circle_question_mark@2x.png',\n                    custom: false\n                }\n            }\n            return {\n                title: F.vertex.title(vertex),\n                image: F.vertex.image(vertex, null, 80),\n                custom: !F.vertex.imageIsFromConcept(vertex)\n            };\n        };\n\n        this.renderJustification = function () {\n            const edge = this.attr.item,\n                titleSpan = this.$node.children('span.title'),\n                justification = _.findWhere(edge.properties, {name: 'http://openlumify.org#justification'}),\n                sourceInfo = _.findWhere(edge.properties, {name: '_sourceMetadata'});\n\n            if (justification || sourceInfo) {\n                titleSpan.empty();\n                JustificationViewer.attachTo(titleSpan, {\n                    justificationMetadata: justification && justification.value,\n                    sourceMetadata: sourceInfo && sourceInfo.value\n                });\n            }\n        };\n\n        this.before('teardown', function () {\n            this.$node.removeData('edgeId');\n            this.$node.removeClass('edge-item has-timeSubtitle has-subtitle');\n            this.$node.empty();\n        });\n    }\n});\n"]}