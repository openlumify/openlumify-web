{"version":3,"sources":["../../../js/util/video/scrubber.js"],"names":["define","defineComponent","template","videoTemplate","withDataRequest","NUMBER_FRAMES","POSTER","FRAMES","MAX_DIMENSIONS","videojs","VideoScrubber","toPixels","str","showing","currentFrame","defaultAttrs","allowPlayback","backgroundPosterSelector","backgroundScrubberSelector","scrubbingLineSelector","videoSelector","after","$node","addClass","toggleClass","setVideoPreviewBackgroundImage","_","once","bind","Promise","all","dataRequest","loadPosterFrame","then","results","properties","shift","posterDimensions","parseInt","setupVideo","catch","e","on","onSeekToTime","getVideoDimensions","dim","attr","videoDimensions","isNaN","updateCss","applyTemplate","videoStarted","posterFrameDimensions","maxHeight","dimContainer","Math","min","width","ratioImage","ratioContainer","scaled","map","v","floor","scaledDimensions","videoPreviewImageUrl","css","html","sizeCss","height","left","top","marginLeft","marginTop","position","videoPreviewMarginLeft","select","extend","backgroundRepeat","backgroundPosition","backgroundSize","join","backgroundImage","posterFrameUrl","onGraphPaddingUpdated","d","type","previousDetailPadding","padding","r","showPoster","frame","showFrames","self","require","_videojs","options","flash","swf","throttledFrameUpdate","throttle","document","off","onClick","loadVideoPreview","previewDimensions","videoPreviewImageDimensions","videoPreviewFrameImageDimensions","stopPropagation","$target","$","target","is","pageX","offset","percent","index","round","scrubPercent","setup","loadImageUrl","url","f","i","Image","onload","onerror","src","reject","Error","$preview","show","hide","trigger","numberOfFrames","event","length","preventDefault","userClickedPlayButton","startVideo","percentSeek","opts","$video","videoPlayer","autoPlay","undefined","readyState","currentTime","max","duration","seek","play","pause","players","video","tap","attrs","rawUrl","indexOf","Object","keys","forEach","player","dispose","defer","controls","autoplay","preload","$videoel","durationchange","timeupdate","setTimeout","data","resolve","seekTo"],"mappings":"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","file":"scrubber.js","sourcesContent":["\ndefine([\n    'flight/lib/component',\n    './scrubber.hbs',\n    './video.hbs',\n    'util/withDataRequest'\n], function(defineComponent, template, videoTemplate, withDataRequest) {\n    'use strict';\n\n    var NUMBER_FRAMES = 0, // Populated by config\n        POSTER = 1,\n        FRAMES = 2,\n        MAX_DIMENSIONS = [450, 300],\n        videojs;\n\n    return defineComponent(VideoScrubber, withDataRequest);\n\n    function toPixels(str) {\n        return str + 'px';\n    }\n\n    function VideoScrubber() {\n\n        this.showing = 0;\n        this.currentFrame = -1;\n\n        this.defaultAttrs({\n            allowPlayback: false,\n            backgroundPosterSelector: '.background-poster',\n            backgroundScrubberSelector: '.background-scrubber',\n            scrubbingLineSelector: '.scrubbing-line',\n            videoSelector: 'video'\n        });\n\n        this.after('initialize', function() {\n            this.$node\n                .addClass('org-openlumify-video-scrubber')\n                .toggleClass('disableScrubbing', true)\n                .toggleClass('allowPlayback', false);\n\n            this.setVideoPreviewBackgroundImage = _.once(this.setVideoPreviewBackgroundImage.bind(this));\n\n            Promise.all([\n                this.dataRequest('config', 'properties'),\n                this.loadPosterFrame()\n            ])\n                .then(function(results) {\n                    var properties = results.shift(),\n                        posterDimensions = results.shift();\n\n                    NUMBER_FRAMES = parseInt(properties['video.preview.frames.count'], 10);\n                    return posterDimensions;\n                })\n                .then(this.setupVideo.bind(this))\n                .catch(function(e) {\n                    throw e;\n                })\n\n            this.on('seekToTime', this.onSeekToTime);\n        });\n\n        this.getVideoDimensions = function() {\n            var dim = this.attr.videoDimensions;\n            if (!dim || isNaN(dim[0]) || isNaN(dim[1])) {\n                this.attr.videoDimensions = dim = [MAX_DIMENSIONS[0], MAX_DIMENSIONS[1]]\n            }\n            return dim;\n        };\n\n        this.updateCss = function(applyTemplate) {\n            if (this.videoStarted) return;\n\n            var dim = this.posterFrameDimensions,\n                maxHeight = dim[1] > dim[0] ? MAX_DIMENSIONS[0] : MAX_DIMENSIONS[1],\n                dimContainer = [Math.min(this.$node.width(), 360), Math.min(dim[1], maxHeight)],\n                ratioImage = dim[0] / dim[1],\n                ratioContainer = dimContainer[0] / dimContainer[1],\n                scaled = (\n                    ratioContainer > ratioImage ?\n                    [dim[0] * (dimContainer[1] / dim[1]), dimContainer[1]] :\n                    [dimContainer[0], dim[1] * (dimContainer[0] / dim[0])]\n                ).map(function(v) {\n                    return Math.floor(v);\n                });\n\n            this.scaledDimensions = scaled;\n\n            this.$node\n                .toggleClass('disableScrubbing', !this.attr.videoPreviewImageUrl)\n                .toggleClass('allowPlayback', this.attr.allowPlayback)\n                .css('height', scaled[1]);\n\n            if (applyTemplate) {\n                this.$node.html(template({}));\n            }\n\n            var sizeCss = {\n                width: scaled[0] + 'px',\n                height: scaled[1] + 'px',\n                left: '50%',\n                top: '50%',\n                marginLeft: '-' + scaled[0] / 2 + 'px',\n                marginTop: '-' + scaled[1] / 2 + 'px',\n                position: 'absolute'\n            };\n            this.videoPreviewMarginLeft = scaled[0] / 2;\n            this.select('backgroundScrubberSelector').css(sizeCss);\n            this.select('backgroundPosterSelector').css(_.extend({}, sizeCss, {\n                backgroundRepeat: 'no-repeat',\n                backgroundPosition: 'center',\n                backgroundSize: scaled.map(toPixels).join(' '),\n                backgroundImage: 'url(' + this.attr.posterFrameUrl + ')'\n            }));\n        };\n\n        this.onGraphPaddingUpdated = function(e, d) {\n            if (e.type === 'graphPaddingUpdated') {\n                if (this.previousDetailPadding && d.padding.r === this.previousDetailPadding) return;\n                this.previousDetailPadding = d.padding.r;\n            }\n\n            this.updateCss();\n\n            if (this.showing === POSTER) {\n                this.showPoster();\n            } else {\n                var frame = this.currentFrame;\n                this.currentFrame = null;\n                this.showFrames(frame);\n            }\n        };\n\n        this.setupVideo = function(dim) {\n            var self = this;\n            require(['videojs'], _videojs => {\n                videojs = _videojs;\n                videojs.options.flash.swf = '../libs/video.js/dist/video-js.swf';\n\n                this.posterFrameDimensions = dim;\n\n                this.updateCss(true);\n                this.showPoster();\n\n                var throttledFrameUpdate = _.throttle(this.onGraphPaddingUpdated.bind(this), 100);\n                this.on(document, 'graphPaddingUpdated', throttledFrameUpdate);\n                this.on(document, 'windowResize', throttledFrameUpdate);\n                this.on('videoPlayerInitialized', function(e) {\n                    this.off('mousemove');\n                    this.off('mouseleave');\n                    this.off('click');\n                });\n                this.on('click', this.onClick);\n\n                this.loadVideoPreview()\n                    .then(function(previewDimensions) {\n                        self.videoPreviewImageDimensions = previewDimensions;\n                        self.videoPreviewFrameImageDimensions = [previewDimensions[0] / NUMBER_FRAMES, previewDimensions[1]];\n\n                        self.on('mousemove', {\n                            scrubbingLineSelector: function(e) {\n                                e.stopPropagation();\n                            }\n                        });\n                        self.$node\n                            .on('mouseenter mousemove', function(e) {\n                                var $target = $(e.target);\n                                if ($target.is('.scrubbing-play-button') || $target.is(this)) {\n                                    e.stopPropagation();\n                                    self.showPoster();\n                                } else {\n                                    var left = e.pageX - $target.offset().left,\n                                        percent = left / $target.width();\n\n                                    if (percent <= 1.0 && percent >= 0.0) {\n                                        var index = Math.round(percent * NUMBER_FRAMES);\n                                        self.scrubPercent = index / NUMBER_FRAMES;\n                                        self.showFrames(index);\n                                    } else {\n                                        self.showPoster();\n                                    }\n                                }\n                            })\n                            .on('mouseleave', function(e) {\n                                self.showPoster();\n                            })\n                    })\n                    .catch(function() { })\n                    .then(function() {\n                        self.setup = true;\n                    })\n            })\n        };\n\n        this.loadPosterFrame = function() {\n            return this.loadImageUrl(this.attr.posterFrameUrl);\n        };\n\n        this.loadVideoPreview = function() {\n            return this.loadImageUrl(this.attr.videoPreviewImageUrl);\n        };\n\n        this.loadImageUrl = function(url) {\n            if (url) {\n                return new Promise(function(f, r) {\n                    var i = new Image();\n                    i.onload = function() {\n                        f([i.width, i.height]);\n                    }\n                    i.onerror = r;\n                    i.src = url;\n                });\n            }\n\n            return Promise.reject(new Error('Expected url to be defined.'));\n        }\n\n        this.setVideoPreviewBackgroundImage = function() {\n            this.select('backgroundScrubberSelector').css({\n                backgroundImage: 'url(' + this.attr.videoPreviewImageUrl + ')'\n            });\n        };\n\n        this.showFrames = function(index) {\n            if (index === this.currentFrame || !this.attr.videoPreviewImageUrl || this.videoStarted) {\n                return;\n            }\n\n            var css = {\n                backgroundRepeat: 'repeat-x',\n                backgroundSize: 'auto 100%',\n                backgroundPosition: [\n                    this.videoPreviewFrameImageDimensions[0] *\n                    this.scaledDimensions[1] / this.videoPreviewFrameImageDimensions[1] *\n                    (index || 0) * -1,\n                    '0'\n                ].map(toPixels).join(' ')\n            };\n\n            this.setVideoPreviewBackgroundImage();\n\n            var $preview = this.select('backgroundScrubberSelector').css(css).show();\n            this.select('backgroundPosterSelector').hide();\n            this.showing = FRAMES;\n            this.currentFrame = index;\n\n            this.select('scrubbingLineSelector').css({\n                left: $preview.position().left -\n                    this.videoPreviewMarginLeft +\n                    (index / NUMBER_FRAMES) * $preview.width()\n            }).show();\n\n            this.trigger('scrubberFrameChange', {\n               index: index,\n               numberOfFrames: NUMBER_FRAMES\n            });\n        };\n\n        this.showPoster = function() {\n            if (this.videoStarted) return;\n            this.select('scrubbingLineSelector').hide();\n            this.select('backgroundScrubberSelector').hide();\n            this.select('backgroundPosterSelector').show();\n\n            this.showing = POSTER;\n            this.currentFrame = -1;\n\n            this.trigger('scrubberFrameChange', {\n               index: 0,\n               numberOfFrames: NUMBER_FRAMES\n            });\n        };\n\n        this.onClick = function(event) {\n            if (this.attr.allowPlayback !== true || this.select('videoSelector').length) {\n                return;\n            }\n            event.preventDefault();\n\n            var userClickedPlayButton = $(event.target).is('.scrubbing-play-button');\n\n            if (userClickedPlayButton) {\n                this.startVideo();\n            } else {\n                this.startVideo({\n                    percentSeek: this.scrubPercent\n                })\n            }\n        };\n\n        this.startVideo = function(opts) {\n            var self = this,\n                options = opts || {},\n                $video = this.select('videoSelector'),\n                videoPlayer = $video.length && $video[0],\n                autoPlay = opts ? opts.autoPlay === undefined || opts.autoPlay : true;\n\n            this.videoStarted = true;\n            this.$node.css('height', 'auto');\n\n            if (videoPlayer && videoPlayer.readyState === 4) {\n                videoPlayer.currentTime = Math.max(0.0,\n                       (options.percentSeek ?\n                            options.percentSeek * videoPlayer.duration :\n                            options.seek ? options.seek : 0.0\n                       ) - 1.0\n                );\n                if (autoPlay) {\n                    videoPlayer.play();\n                } else {\n                    videoPlayer.pause();\n                }\n            } else {\n                var players = videojs.players,\n                    video = $(videoTemplate(\n                        _.tap(this.attr, function(attrs) {\n                            var url = attrs.rawUrl;\n                            if (~url.indexOf('?')) {\n                                url += '&';\n                            } else {\n                                url += '?';\n                            }\n                            url += 'playback=true';\n                            attrs.url = url;\n                        })\n                    ));\n\n                this.$node.html(video);\n                Object.keys(players).forEach(function(player) {\n                    if (players[player]) {\n                        players[player].dispose();\n                        delete players[player];\n                    }\n                });\n\n                this.trigger('videoPlayerInitialized');\n\n                _.defer(function() {\n                    videojs(video[0], {\n                        controls: true,\n                        autoplay: true,\n                        preload: 'auto'\n                    }, function() {\n                        /*eslint consistent-this:0*/\n                        var $videoel = this;\n\n                        if (options.seek || options.percentSeek) {\n                            $videoel.on('durationchange', durationchange);\n                            $videoel.on('loadedmetadata', durationchange);\n                        }\n                        $videoel.on('timeupdate', timeupdate);\n\n                        function timeupdate(event) {\n                            self.trigger('playerTimeUpdate', {\n                                currentTime: $videoel.currentTime(),\n                                duration: $videoel.duration()\n                            });\n                        }\n\n                        function durationchange(event) {\n                            var duration = $videoel.duration();\n                            if (duration > 0.0) {\n                                $videoel.off('durationchange', durationchange);\n                                $videoel.off('loadedmetadata', durationchange);\n                                $videoel.currentTime(\n                                    Math.max(0.0,\n                                        (options.percentSeek ?\n                                            duration * self.scrubPercent :\n                                            options.seek) - 1.0\n                                    )\n                                );\n                            }\n                        }\n                    });\n\n                    if (!autoPlay) {\n                        setTimeout(function() {video[0].pause(); }, 100);\n                    }\n                });\n            }\n        };\n\n        this.onSeekToTime = function(event, data) {\n            Promise.resolve(this.setup ? Promise.resolve() : this.setupVideo())\n                .then(() => {\n                    this.startVideo({\n                        seek: data.seekTo / 1000,\n                        autoPlay: data.autoPlay\n                    });\n                })\n        };\n\n    }\n});\n"]}