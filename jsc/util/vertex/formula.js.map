{"version":3,"sources":["../../../js/util/vertex/formula.js"],"names":["define","formulaFunction","formula","vertex","F","V","optionalKey","optionalOpts","_","extend","ignoreDisplayFormula","prop","name","propRaw","longestProp","optionalName","props","indexOf","scope","additionalScope","dependentProp","isEdge","edge","keys","values","each","value","key","push","Function","join","apply","e","console","warn"],"mappings":"AAAAA,OAAO,EAAP,CAAW,UAAW,CAClB,aAEA,MAAOC,gBAAP,CAEA,QAASA,gBAAT,CAAyBC,OAAzB,CAAkCC,MAAlC,CAA0CC,CAA1C,CAA6CC,CAA7C,CAAgDC,WAAhD,CAA6DC,YAA7D,CAA2E,CACvE,GAAI,CAACA,YAAL,CAAmB,CACfA,aAAe,EAAf,CACH,CACDA,aAAeC,EAAEC,MAAF,CAAS,EAAT,CAAaF,YAAb,CAA2B,CAAEG,qBAAsB,IAAxB,CAA3B,CAAf,CAEA,GAAIC,MAAO,QAAPA,KAAO,CAASC,IAAT,CAAe,CAAE,MAAOP,GAAEM,IAAF,CAAOR,MAAP,CAAeS,IAAf,CAAqBN,WAArB,CAAkCC,YAAlC,CAAP,CAAyD,CAArF,CACIM,QAAU,QAAVA,QAAU,CAASD,IAAT,CAAe,CAAE,MAAOP,GAAEQ,OAAF,CAAUV,MAAV,CAAkBS,IAAlB,CAAwBN,WAAxB,CAAqCC,YAArC,CAAP,CAA4D,CAD3F,CAEIO,YAAc,QAAdA,YAAc,CAASC,YAAT,CAAuB,CAAE,MAAOV,GAAES,WAAF,CAAcX,MAAd,CAAsBY,YAAtB,CAAP,CAA6C,CAFxF,CAGIC,MAAQ,QAARA,MAAQ,CAAUJ,IAAV,CAAgB,CAAE,MAAOP,GAAEW,KAAF,CAAQb,MAAR,CAAgBS,IAAhB,CAAsBN,WAAtB,CAAP,CAA6C,CAH3E,CAKA,GAAI,CAGA,GAAIJ,QAAQe,OAAR,CAAgB,QAAhB,IAA8B,CAAC,CAAnC,CAAsC,CAClCf,QAAU,WAAaA,OAAb,CAAuB,GAAjC,CACH,CAED,GAAIgB,OAAQV,EAAEC,MAAF,CAAS,EAAT,CAAaF,aAAaY,eAAb,EAAgC,EAA7C,CAAiD,CACzDf,EAAGA,CADsD,CAEzDO,KAAMA,IAFmD,CAGzDS,cAAeT,IAH0C,CAIzDE,QAASA,OAJgD,CAKzDC,YAAaA,WAL4C,CAMzDE,MAAOA,KANkD,CAAjD,CAAZ,CASA,GAAIX,EAAEgB,MAAF,CAASlB,MAAT,CAAJ,CAAsB,CAClBe,MAAMI,IAAN,CAAanB,MAAb,CACH,CAFD,IAEO,CACHe,MAAMf,MAAN,CAAeA,MAAf,CACH,CAED,GAAIoB,MAAO,EAAX,CACIC,OAAS,EADb,CAGAhB,EAAEiB,IAAF,CAAOP,KAAP,CAAc,SAASQ,KAAT,CAAgBC,GAAhB,CAAqB,CAC/BH,OAAOI,IAAP,CAAYF,KAAZ,EACAH,KAAKK,IAAL,CAAUD,GAAV,EACH,CAHD,EAMA,MAAQ,IAAIE,SAAJ,CAAaN,KAAKO,IAAL,CAAU,GAAV,CAAb,CAA6B5B,OAA7B,CAAD,CAAwC6B,KAAxC,CAA8C,IAA9C,CAAoDP,MAApD,CAAP,CACH,CAAC,MAAMQ,CAAN,CAAS,CACPC,QAAQC,IAAR,CAAa,8BAAgChC,OAAhC,CAA0C,WAAvD,CAAoE8B,CAApE,EACH,CACJ,CACJ,CApDD","file":"formula.js","sourcesContent":["define([], function() {\n    'use strict';\n\n    return formulaFunction;\n\n    function formulaFunction(formula, vertex, F, V, optionalKey, optionalOpts) {\n        if (!optionalOpts) {\n            optionalOpts = {};\n        }\n        optionalOpts = _.extend({}, optionalOpts, { ignoreDisplayFormula: true });\n\n        var prop = function(name) { return V.prop(vertex, name, optionalKey, optionalOpts); },\n            propRaw = function(name) { return V.propRaw(vertex, name, optionalKey, optionalOpts); },\n            longestProp = function(optionalName) { return V.longestProp(vertex, optionalName); },\n            props = function (name) { return V.props(vertex, name, optionalKey ); }\n\n        try {\n\n            // If the formula is an expression wrap and return it\n            if (formula.indexOf('return') === -1) {\n                formula = 'return (' + formula + ')';\n            }\n\n            var scope = _.extend({}, optionalOpts.additionalScope || {}, {\n                F: F,\n                prop: prop,\n                dependentProp: prop,\n                propRaw: propRaw,\n                longestProp: longestProp,\n                props: props\n            });\n\n            if (V.isEdge(vertex)) {\n                scope.edge = vertex;\n            } else {\n                scope.vertex = vertex;\n            }\n\n            var keys = [],\n                values = [];\n\n            _.each(scope, function(value, key) {\n                values.push(value);\n                keys.push(key);\n            });\n\n            /*eslint no-new-func:0*/\n            return (new Function(keys.join(','), formula)).apply(null, values);\n        } catch(e) {\n            console.warn('Unable to execute formula: ' + formula + ' Reason: ', e);\n        }\n    }\n});\n"]}