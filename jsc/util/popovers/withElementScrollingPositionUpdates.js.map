{"version":3,"sources":["../../../js/util/popovers/withElementScrollingPositionUpdates.js"],"names":["define","withElementScrollingPositionUpdates","before","removePositionUpdating","after","on","onRegisterForPositionChanges","onUnregisterForPositionChanges","event","data","stopPropagation","range","anchorTo","cloneRange","self","$target","$","target","scroller","scrollSelector","closest","scrollParent","sendPositionChange","position","width","height","rects","getClientRects","box","length","_","sortBy","r","top","getBoundingClientRect","left","document","scrollTop","outerWidth","outerHeight","offset","isFunction","getBBox","eventData","x","y","xMin","xMax","yMin","yMax","anchor","trigger","positionChangeScroller","off"],"mappings":"AACAA,OAAO,EAAP,CAAW,UAAW,CAClB,aAEA,MAAOC,oCAAP,CAEA,QAASA,oCAAT,EAA+C,CAE3C,KAAKC,MAAL,CAAY,UAAZ,CAAwB,UAAW,CAC/B,KAAKC,sBAAL,GACH,CAFD,EAIA,KAAKC,KAAL,CAAW,YAAX,CAAyB,UAAW,CAChC,KAAKC,EAAL,CAAQ,4BAAR,CAAsC,KAAKC,4BAA3C,EACA,KAAKD,EAAL,CAAQ,8BAAR,CAAwC,KAAKE,8BAA7C,EACH,CAHD,EAKA,KAAKD,4BAAL,CAAoC,SAASE,KAAT,CAAgBC,IAAhB,CAAsB,CAEtDD,MAAME,eAAN,GAEA,GAAIC,OAAQF,KAAKG,QAAL,EAAiBH,KAAKG,QAAL,CAAcD,KAA3C,CACA,GAAIA,KAAJ,CAAW,CACPA,MAAQA,MAAME,UAAN,EAAR,CACH,CAED,GAAIC,MAAO,IAAX,CACIC,QAAUC,EAAER,MAAMS,MAAR,CADd,CAEIC,SAAWT,MAAQA,KAAKU,cAAb,CACPJ,QAAQK,OAAR,CAAgBX,KAAKU,cAArB,CADO,CAEPJ,QAAQM,YAAR,EAJR,CAKIC,mBAAqB,QAArBA,mBAAqB,EAAW,CAC5B,GAAIC,gBAAJ,CAAcC,YAAd,CAAqBC,aAArB,CACA,GAAId,KAAJ,CAAW,CACP,GAAMe,OAAQf,MAAMgB,cAAN,EAAd,CACA,GAAIC,YAAJ,CACA,GAAIF,MAAMG,MAAV,CAAkB,CACdD,KAAME,EAAEC,MAAF,CAASL,KAAT,CAAgB,SAASM,CAAT,CAAY,CAC9B,MAAOA,GAAEC,GAAF,CAAQ,CAAC,CAAhB,CACH,CAFK,EAEH,CAFG,CAAN,CAGH,CAJD,IAIO,CACHL,KAAMjB,MAAMuB,qBAAN,EAAN,CACH,CAEDV,MAAQI,KAAIJ,KAAZ,CACAC,OAASG,KAAIH,MAAb,CAZO,UAaeG,IAbf,CAaCO,IAbD,OAaCA,IAbD,CAaOF,GAbP,OAaOA,GAbP,CAcPV,SAAW,CAAEY,SAAF,CAAQF,OAAR,CAAX,CAEA,GAAIf,SAAS,CAAT,IAAgBkB,QAApB,CAA8B,CAC1Bb,SAASU,GAAT,EAAgBf,SAASmB,SAAT,EAAhB,CACH,CACJ,CAnBD,IAmBO,CACHb,MAAQT,QAAQuB,UAAR,EAAR,CACAb,OAASV,QAAQwB,WAAR,EAAT,CACAhB,SAAWR,QAAQyB,MAAR,EAAX,CACA,GAAI,CAAChB,QAAU,CAAV,EAAeC,SAAW,CAA3B,GAAiCK,EAAEW,UAAF,CAAajC,MAAMS,MAAN,CAAayB,OAA1B,CAArC,CAAyE,CACrE,GAAId,KAAMpB,MAAMS,MAAN,CAAayB,OAAb,EAAV,CACAlB,MAAQI,IAAIJ,KAAZ,CACAC,OAASG,IAAIH,MAAb,CACH,CACJ,CAED,GAAMkB,WAAY,CACdpB,SAAU,CACNqB,EAAGrB,SAASY,IAAT,CAAgBX,MAAQ,CADrB,CAENqB,EAAGtB,SAASU,GAAT,CAAeR,OAAS,CAFrB,CAGNqB,KAAMvB,SAASY,IAHT,CAINY,KAAMxB,SAASY,IAAT,CAAgBX,KAJhB,CAKNwB,KAAMzB,SAASU,GALT,CAMNgB,KAAM1B,SAASU,GAAT,CAAeR,MANf,CADI,CAAlB,CAUA,GAAIhB,MAAQA,KAAKG,QAAjB,CAA2B,CACvB+B,UAAUO,MAAV,CAAmBzC,KAAKG,QAAxB,CACH,CACDE,KAAKqC,OAAL,CAAa3C,MAAMS,MAAnB,CAA2B,iBAA3B,CAA8C0B,SAA9C,EACH,CAnDL,CAqDA,KAAKS,sBAAL,CAA8BlC,QAA9B,CACA,KAAKI,kBAAL,CAA0BA,kBAA1B,CAEA,KAAKjB,EAAL,CAAQ+B,QAAR,CAAkB,qBAAlB,CAAyCd,kBAAzC,EACAJ,SAASb,EAAT,CAAY,uBAAZ,CAAqCiB,kBAArC,EACAA,qBACH,CApED,CAsEA,KAAKf,8BAAL,CAAsC,SAASC,KAAT,CAAgBC,IAAhB,CAAsB,CACxD,KAAKN,sBAAL,GACH,CAFD,CAIA,KAAKA,sBAAL,CAA8B,UAAW,CACrC,GAAI,KAAKiD,sBAAT,CAAiC,CAC7B,KAAKA,sBAAL,CAA4BC,GAA5B,CAAgC,iBAAhC,EACH,CACD,GAAI,KAAK/B,kBAAT,CAA6B,CACzB,KAAK+B,GAAL,CAASjB,QAAT,CAAmB,qBAAnB,CAA0C,KAAKd,kBAA/C,EACH,CACJ,CAPD,CAQH,CACJ,CAnGD","file":"withElementScrollingPositionUpdates.js","sourcesContent":["\ndefine([], function() {\n    'use strict';\n\n    return withElementScrollingPositionUpdates;\n\n    function withElementScrollingPositionUpdates() {\n\n        this.before('teardown', function() {\n            this.removePositionUpdating();\n        });\n\n        this.after('initialize', function() {\n            this.on('registerForPositionChanges', this.onRegisterForPositionChanges);\n            this.on('unregisterForPositionChanges', this.onUnregisterForPositionChanges);\n        });\n\n        this.onRegisterForPositionChanges = function(event, data) {\n\n            event.stopPropagation();\n\n            let range = data.anchorTo && data.anchorTo.range;\n            if (range) {\n                range = range.cloneRange()\n            }\n\n            var self = this,\n                $target = $(event.target),\n                scroller = data && data.scrollSelector ?\n                    $target.closest(data.scrollSelector) :\n                    $target.scrollParent(),\n                sendPositionChange = function() {\n                    let position, width, height;\n                    if (range) {\n                        const rects = range.getClientRects();\n                        let box;\n                        if (rects.length) {\n                            box = _.sortBy(rects, function(r) {\n                                return r.top * -1;\n                            })[0];\n                        } else {\n                            box = range.getBoundingClientRect();\n                        }\n\n                        width = box.width;\n                        height = box.height;\n                        const { left, top } = box;\n                        position = { left, top };\n\n                        if (scroller[0] === document) {\n                            position.top += scroller.scrollTop();\n                        }\n                    } else {\n                        width = $target.outerWidth();\n                        height = $target.outerHeight();\n                        position = $target.offset();\n                        if ((width === 0 || height === 0) && _.isFunction(event.target.getBBox)) {\n                            var box = event.target.getBBox();\n                            width = box.width;\n                            height = box.height;\n                        }\n                    }\n\n                    const eventData = {\n                        position: {\n                            x: position.left + width / 2,\n                            y: position.top + height / 2,\n                            xMin: position.left,\n                            xMax: position.left + width,\n                            yMin: position.top,\n                            yMax: position.top + height\n                        }\n                    };\n                    if (data && data.anchorTo) {\n                        eventData.anchor = data.anchorTo;\n                    }\n                    self.trigger(event.target, 'positionChanged', eventData);\n                };\n\n            this.positionChangeScroller = scroller;\n            this.sendPositionChange = sendPositionChange;\n\n            this.on(document, 'graphPaddingUpdated', sendPositionChange);\n            scroller.on('scroll.positionchange', sendPositionChange);\n            sendPositionChange();\n        };\n\n        this.onUnregisterForPositionChanges = function(event, data) {\n            this.removePositionUpdating();\n        };\n\n        this.removePositionUpdating = function() {\n            if (this.positionChangeScroller) {\n                this.positionChangeScroller.off('.positionchange');\n            }\n            if (this.sendPositionChange) {\n                this.off(document, 'graphPaddingUpdated', this.sendPositionChange);\n            }\n        }\n    }\n})\n"]}