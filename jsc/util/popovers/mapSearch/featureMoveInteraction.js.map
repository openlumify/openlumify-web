{"version":3,"sources":["../../../../js/util/popovers/mapSearch/featureMoveInteraction.js"],"names":["define","ol","SPHERE","Sphere","ANIMATION_DURATION","RESIZE_RADIUS","createCircle","center","radius","centerLonLat","proj","toLonLat","geom","Polygon","circular","transform","FeatureMoveInteraction","options","interaction","Pointer","call","handleEvent","handle","bind","circleCenter","circleRadius","shouldFit","fit","condition_","condition","events","primaryAction","inherits","prototype","map","getMap","view","getView","circleFeature","getGeometry","getExtent","setMap","removeLayer","layer","apply","arguments","extent","calculateExtent","getSize","getWidth","circleGeometry","resizeGeometry","Point","calculateResizePoint","Feature","resizeFeature","setId","vectorSource","source","Vector","features","circleLayer","style","feature","fill","Fill","color","stroke","Stroke","width","getId","Style","image","Circle","getColor","addLayer","getRegion","geometry","circleRings","getCoordinates","length","coordinates","Math","trunc","updateGeometry","point","setGeometry","resize","setCoordinates","e","handled","type","pointerdown","event","createEmpty","mapDistance","getResolution","createOrUpdateFromCoordinate","coordinate","buffer","getSource","getFeaturesInExtent","startCoordinate","state","pointermove","delta","subtractCoordinates","newCenter","addCoordinates","centerChange","Event","dispatchEvent","newRadius","LineString","getLength","radiusChange","pointerup","c1","c2","c","i"],"mappings":"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","file":"featureMoveInteraction.js","sourcesContent":["define(['openlayers'], function(ol) {\n    'use strict';\n\n    const SPHERE = new ol.Sphere(6378137);\n    const ANIMATION_DURATION = 200;\n    const RESIZE_RADIUS = 6;\n    const createCircle = (center, radius) => {\n        const centerLonLat = ol.proj.toLonLat(center);\n        return ol.geom.Polygon.circular(SPHERE, centerLonLat, radius, 64)\n            .transform('EPSG:4326', 'EPSG:3857');\n    }\n\n    function FeatureMoveInteraction(options = {}) {\n        ol.interaction.Pointer.call(this, {\n            handleEvent: this.handle.bind(this)\n        });\n        this.circleCenter = options.center;\n        this.circleRadius = options.radius;\n        this.shouldFit = options.fit !== false;\n        this.condition_ = options.condition ?\n            options.condition : ol.events.condition.primaryAction;\n    }\n    ol.inherits(FeatureMoveInteraction, ol.interaction.Pointer);\n\n    FeatureMoveInteraction.prototype.fit = function() {\n        const map = this.getMap();\n        const view = map.getView();\n\n        view.fit(this.circleFeature.getGeometry().getExtent())\n    }\n\n    FeatureMoveInteraction.prototype.setMap = function(map) {\n        if (!map) {\n            this.getMap().removeLayer(this.layer)\n        }\n\n        ol.interaction.Pointer.prototype.setMap.apply(this, arguments);\n\n        if (!map) return;\n\n        var center = this.circleCenter,\n            extent = map.getView().calculateExtent(map.getSize()),\n            circleRadius = this.circleRadius || ol.extent.getWidth(extent) * 0.1 / 2;\n\n        if (!this.circleRadius) {\n            this.circleRadius = circleRadius;\n        }\n\n        var circleGeometry = createCircle(center, circleRadius),\n            resizeGeometry = new ol.geom.Point(this.calculateResizePoint(circleGeometry)),\n            circleFeature = new ol.Feature(circleGeometry),\n            resizeFeature = new ol.Feature(resizeGeometry);\n\n        circleFeature.setId('circle');\n        resizeFeature.setId('resize');\n\n        this.circleFeature = circleFeature;\n        this.resizeFeature = resizeFeature;\n\n        var vectorSource = new ol.source.Vector({\n                features: [circleFeature, resizeFeature],\n            }),\n            circleLayer = new ol.layer.Vector({\n                source: vectorSource,\n                style: function(feature) {\n                    var fill = new ol.style.Fill({ color: 'rgba(255,255,255,0.4)' });\n                    var stroke = new ol.style.Stroke({ color: '#3399CC', width: 1.25 });\n                    if (feature.getId() === 'resize') {\n                        return [new ol.style.Style({\n                            image: new ol.style.Circle({\n                                radius: RESIZE_RADIUS,\n                                stroke: new ol.style.Stroke({\n                                    color: stroke.getColor(),\n                                    width: 2\n                                }),\n                                fill: new ol.style.Fill({\n                                    color: 'white'\n                                })\n                            })\n                        })]\n                    } else {\n                        return [new ol.style.Style({\n                            image: new ol.style.Circle({\n                                fill: fill,\n                                stroke: stroke,\n                                radius: 5\n                            }),\n                            fill: fill,\n                            stroke: stroke\n                        })]\n                    }\n                }\n            });\n\n        this.layer = circleLayer;\n        map.addLayer(circleLayer);\n\n        if (this.shouldFit) {\n            this.fit();\n        }\n    }\n\n    FeatureMoveInteraction.prototype.getRegion = function() {\n        return { center: this.circleCenter, radius: this.circleRadius / 1000 };\n    }\n\n    FeatureMoveInteraction.prototype.calculateResizePoint = function(geometry) {\n        const circleRings = geometry.getCoordinates();\n        if (circleRings && circleRings.length === 1) {\n            const coordinates = circleRings[0];\n            return coordinates[Math.trunc(coordinates.length / 3)]\n        }\n    }\n\n    FeatureMoveInteraction.prototype.updateGeometry = function(center, radius) {\n        const geometry = createCircle(center, radius);\n        const point = this.calculateResizePoint(geometry);\n\n        this.circleFeature.setGeometry(geometry)\n\n        if (point) {\n            this.resize.setCoordinates(point);\n        }\n    }\n\n    FeatureMoveInteraction.prototype.handle = function(e) {\n        var handled = false;\n        if (this[e.type]) {\n            handled = this[e.type].apply(this, arguments);\n        }\n        return ol.interaction.Pointer.handleEvent.call(this, e) && !handled;\n    }\n\n    FeatureMoveInteraction.prototype.pointerdown = function(event) {\n        var extent = ol.extent.createEmpty(),\n            mapDistance = RESIZE_RADIUS * this.getMap().getView().getResolution();\n\n        ol.extent.createOrUpdateFromCoordinate(event.coordinate, extent);\n        ol.extent.buffer(extent, mapDistance, extent);\n\n        var features = this.layer.getSource().getFeaturesInExtent(extent);\n        if (features.length) {\n            this.startCoordinate = event.coordinate;\n            this.resize = this.resizeFeature.getGeometry()\n\n            if (features.length === 1 && features[0].getId() === 'circle') {\n                this.center = this.circleCenter;\n                this.state = 'down'\n            } else {\n                this.center = [...this.resize.getCoordinates()];\n                this.state = 'resize'\n            }\n            return true;\n        }\n    }\n\n    FeatureMoveInteraction.prototype.pointermove = function(event) {\n        if (!this.state) return;\n\n        const delta = subtractCoordinates(event.coordinate, this.startCoordinate);\n        const newCenter = addCoordinates(this.center, delta);\n\n        if (this.state === 'down') {\n            this.circleCenter = newCenter;\n            this.updateGeometry(this.circleCenter, this.circleRadius)\n            var centerChange = new ol.events.Event('centerChanged');\n            centerChange.newCenter = newCenter;\n            this.dispatchEvent(centerChange);\n            return true;\n        } else if (this.state === 'resize') {\n            const newRadius = new ol.geom.LineString([newCenter, this.circleCenter]).getLength();\n            this.circleRadius = newRadius\n            this.updateGeometry(this.circleCenter, this.circleRadius)\n            var radiusChange = new ol.events.Event('radiusChanged');\n            radiusChange.newRadius = newRadius / 1000;\n            this.dispatchEvent(radiusChange);\n            return true;\n        }\n    }\n\n    FeatureMoveInteraction.prototype.pointerup = function(event) {\n        this.state = null;\n    }\n\n    return FeatureMoveInteraction;\n\n    function subtractCoordinates(c1, c2) {\n        return c1.map((c, i) => c - c2[i]);\n    }\n\n    function addCoordinates(c1, c2) {\n        return c1.map((c, i) => c + c2[i])\n    }\n});\n"]}