{"version":3,"sources":["../../js/util/withDocumentUnloadHandlers.js"],"names":["define","withDocumentUnloadHandlers","registeredHandlers","uniqueId","_","before","$","document","on","onRegisterBeforeUnloadHandler","onUnregisterBeforeUnloadHandler","window","onDocumentUnload","getUnloadHandlers","clearUnloadHandlers","evt","self","confirmationMessage","each","index","handler","fn","call","scope","isString","event","returnValue","data","isFunction","priority","isNumber","Number","MAX_VALUE","push","chain","uniq","property","sortBy","value","existingHandler","find","without"],"mappings":"AAAAA,OAAO,EAAP,CAAW,UAAW,CAClB,aAEA,MAAOC,2BAAP,CASA,QAASA,2BAAT,EAAsC,CAClC,GAAIC,oBAAqB,EAAzB,CACIC,SAAWC,EAAED,QAAF,EADf,CAGA,KAAKE,MAAL,CAAY,YAAZ,CAA0B,UAAW,CACjCC,EAAEC,QAAF,EAAYC,EAAZ,CAAe,6BAAf,CAA8C,KAAKC,6BAAnD,EACAH,EAAEC,QAAF,EAAYC,EAAZ,CAAe,+BAAf,CAAgD,KAAKE,+BAArD,EACAJ,EAAEK,MAAF,EAAUH,EAAV,CAAa,gBAAkBL,QAA/B,CAAyC,KAAKS,gBAA9C,EACH,CAJD,EAMA,KAAKC,iBAAL,CAAyB,UAAW,CAChC,MAAOX,mBAAP,CACH,CAFD,CAIA,KAAKY,mBAAL,CAA2B,UAAW,CAClCZ,mBAAqB,EAArB,CACH,CAFD,CAIA,KAAKU,gBAAL,CAAwB,SAASG,GAAT,CAAc,CAClC,GAAIC,MAAO,IAAX,CACIC,mBADJ,CAGAX,EAAEY,IAAF,CAAOhB,kBAAP,CAA2B,SAASiB,KAAT,CAAgBC,OAAhB,CAAyB,CAChDH,oBAAsBG,QAAQC,EAAR,CAAWC,IAAX,CAAgBF,QAAQG,KAAR,EAAiBP,IAAjC,CAAuCD,GAAvC,CAAtB,CACA,MAAO,CAACX,EAAEoB,QAAF,CAAWP,mBAAX,CAAR,CACH,CAHD,EAKA,GAAIb,EAAEoB,QAAF,CAAWP,mBAAX,CAAJ,CAAqC,CACjC,CAACF,KAAOJ,OAAOc,KAAf,EAAsBC,WAAtB,CAAoCT,mBAApC,CACA,MAAOA,oBAAP,CACH,CACJ,CAbD,CAeA,KAAKR,6BAAL,CAAqC,SAASgB,KAAT,CAAgBE,IAAhB,CAAsB,CACvD,GAAIrB,EAAEsB,UAAF,CAAaD,IAAb,CAAJ,CAAwB,CACpBA,KAAO,CAAEN,GAAIM,IAAN,CAAP,CACH,CAED,GAAIA,IAAJ,CAAU,CACNA,KAAKE,QAAL,CAAgBzB,EAAE0B,QAAF,CAAWH,KAAKE,QAAhB,EAA4BF,KAAKE,QAAjC,CAA4CE,OAAOC,SAAnE,CAEA9B,mBAAmB+B,IAAnB,CAAwBN,IAAxB,EACAzB,mBAAqBE,EAAE8B,KAAF,CAAQhC,kBAAR,EACQiC,IADR,CACa,KADb,CACoB/B,EAAEgC,QAAF,CAAW,IAAX,CADpB,EAEQC,MAFR,CAEe,UAFf,EAGQC,KAHR,EAArB,CAIH,CACJ,CAdD,CAgBA,KAAK5B,+BAAL,CAAuC,SAASe,KAAT,CAAgBE,IAAhB,CAAsB,CACzD,GAAIA,MAAQ,CAACrB,EAAEsB,UAAF,CAAaD,IAAb,CAAb,CAAiC,CAC7BA,KAAOA,KAAKN,EAAZ,CACH,CAED,GAAIM,IAAJ,CAAU,CACN,GAAIY,iBAAkBnC,EAAEoC,IAAF,CAAOtC,kBAAP,CAA2B,SAASkB,OAAT,CAAkB,CAC/D,MAAOA,SAAQC,EAAR,GAAeM,IAAtB,CACH,CAFqB,CAAtB,CAIA,GAAIY,eAAJ,CAAqB,CACjBrC,mBAAqBE,EAAEqC,OAAF,CAAUvC,kBAAV,CAA8BqC,eAA9B,CAArB,CACH,CACJ,CACJ,CAdD,CAeH,CACJ,CA7ED","file":"withDocumentUnloadHandlers.js","sourcesContent":["define([], function() {\n    'use strict';\n\n    return withDocumentUnloadHandlers;\n\n    /**\n     * Mixin that provides a window unload listener and manages\n     * a priority sorted queue of callbacks to be applied.\n     * If any of the callbacks return a String, the remaining\n     * callbacks will not be executed and the user will be\n     * propmted with that String.\n     */\n    function withDocumentUnloadHandlers() {\n        var registeredHandlers = [],\n            uniqueId = _.uniqueId();\n\n        this.before('initialize', function() {\n            $(document).on('registerBeforeUnloadHandler', this.onRegisterBeforeUnloadHandler);\n            $(document).on('unregisterBeforeUnloadHandler', this.onUnregisterBeforeUnloadHandler);\n            $(window).on('beforeunload.' + uniqueId, this.onDocumentUnload);\n        });\n\n        this.getUnloadHandlers = function() {\n            return registeredHandlers;\n        };\n\n        this.clearUnloadHandlers = function() {\n            registeredHandlers = [];\n        };\n\n        this.onDocumentUnload = function(evt) {\n            var self = this,\n                confirmationMessage;\n\n            $.each(registeredHandlers, function(index, handler) {\n                confirmationMessage = handler.fn.call(handler.scope || self, evt);\n                return !_.isString(confirmationMessage);\n            });\n\n            if (_.isString(confirmationMessage)) {\n                (evt || window.event).returnValue = confirmationMessage;   //Gecko + IE\n                return confirmationMessage;                                //Webkit, Safari, Chrome etc.\n            }\n        };\n\n        this.onRegisterBeforeUnloadHandler = function(event, data) {\n            if ($.isFunction(data)) {\n                data = { fn: data };\n            }\n\n            if (data) {\n                data.priority = _.isNumber(data.priority) ? data.priority : Number.MAX_VALUE;\n\n                registeredHandlers.push(data);\n                registeredHandlers = _.chain(registeredHandlers)\n                                            .uniq(false, _.property('fn'))\n                                            .sortBy('priority')\n                                            .value();\n            }\n        };\n\n        this.onUnregisterBeforeUnloadHandler = function(event, data) {\n            if (data && !$.isFunction(data)) {\n                data = data.fn;\n            }\n\n            if (data) {\n                var existingHandler = _.find(registeredHandlers, function(handler) {\n                    return handler.fn === data;\n                });\n\n                if (existingHandler) {\n                    registeredHandlers = _.without(registeredHandlers, existingHandler);\n                }\n            }\n        };\n    }\n});\n"]}