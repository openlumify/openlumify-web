{"version":3,"sources":["../../../js/util/component/env-proptypes.js"],"names":["define","openlumifyEnvironment","dev","PropTypes","PropTypeShims","getPropTypeShims","shimPropTypesSameAsReal","realKeys","Object","keys","shimKeys","missing","_","difference","join","extra","length","console","warn","shims","real","intersection","shim","isRequired","getShim","any","array","arrayOf","bool","checkPropTypes","element","exact","func","instanceOf","node","number","object","objectOf","oneOf","oneOfType","shape","string","symbol"],"mappings":"AAIAA,OAAOC,sBAAsBC,GAAtB,CAA4B,CAAC,qBAAD,CAA5B,CAAsD,EAA7D,CAAiE,SAASC,SAAT,CAAoB,CACjF,GAAMC,eAAgBC,kBAAtB,CAEA,GAAIF,SAAJ,CAAe,CACX,GAAI,CAACG,wBAAwBF,aAAxB,CAAuCD,SAAvC,CAAL,CAAwD,CAGpD,GAAMI,UAAWC,OAAOC,IAAP,CAAYN,SAAZ,CAAjB,CACA,GAAMO,UAAWF,OAAOC,IAAP,CAAYL,aAAZ,CAAjB,CACA,GAAMO,SAAUC,EAAEC,UAAF,CAAaN,QAAb,CAAuBG,QAAvB,EAAiCI,IAAjC,CAAsC,IAAtC,CAAhB,CACA,GAAMC,OAAQH,EAAEC,UAAF,CAAaH,QAAb,CAAuBH,QAAvB,EAAiCO,IAAjC,CAAsC,IAAtC,CAAd,CACA,GAAIH,QAAQK,MAAZ,CAAoBC,QAAQC,IAAR,CAAa,4BAAb,CAA2CP,OAA3C,EACpB,GAAII,MAAMC,MAAV,CAAkBC,QAAQC,IAAR,CAAa,4BAAb,CAA2CH,KAA3C,EAErB,CACD,MAAOZ,UAAP,CACH,CAED,MAAOC,cAAP,CAEA,QAASE,wBAAT,CAAiCa,KAAjC,CAAwCC,IAAxC,CAA8C,CAC1C,GAAMV,UAAWF,OAAOC,IAAP,CAAYU,KAAZ,CAAjB,CACA,GAAMZ,UAAWC,OAAOC,IAAP,CAAYW,IAAZ,CAAjB,CACA,MAAOV,UAASM,MAAT,GAAoBT,SAASS,MAA7B,EACHJ,EAAES,YAAF,CAAeX,QAAf,CAAyBH,QAAzB,EAAmCS,MAAnC,GAA8CN,SAASM,MAD3D,CAEH,CAED,QAASX,iBAAT,EAA4B,CACxB,GAAMiB,MAAO,QAAPA,KAAO,EAAW,CAAE,CAA1B,CACAA,KAAKC,UAAL,CAAkBD,IAAlB,CACA,GAAME,SAAU,QAAVA,QAAU,EAAW,CAAE,MAAOF,KAAP,CAAc,CAA3C,CACA,GAAMlB,eAAgB,CAClBqB,IAAKH,IADa,CAElBI,MAAOJ,IAFW,CAGlBK,QAASH,OAHS,CAIlBI,KAAMN,IAJY,CAKlBO,eAAgBP,IALE,CAMlBQ,QAASR,IANS,CAOlBS,MAAOP,OAPW,CAQlBQ,KAAMV,IARY,CASlBW,WAAYT,OATM,CAUlBU,KAAMZ,IAVY,CAWlBa,OAAQb,IAXU,CAYlBc,OAAQd,IAZU,CAalBe,SAAUb,OAbQ,CAclBc,MAAOd,OAdW,CAelBe,UAAWf,OAfO,CAgBlBgB,MAAOhB,OAhBW,CAiBlBiB,OAAQnB,IAjBU,CAkBlBoB,OAAQpB,IAlBU,CAAtB,CAoBAlB,cAAcD,SAAd,CAA0BC,aAA1B,CACA,MAAOA,cAAP,CACH,CACJ,CAtDD","file":"env-proptypes.js","sourcesContent":["/*\n * Replaces prop-types library with no-check shims in production,\n * Normally webpack would handle this for us, but not using that yet...\n */\ndefine(openlumifyEnvironment.dev ? ['react-proptypes-dev'] : [], function(PropTypes) {\n    const PropTypeShims = getPropTypeShims();\n\n    if (PropTypes) {\n        if (!shimPropTypesSameAsReal(PropTypeShims, PropTypes)) {\n            // We shim the PropTypes in production for performance, but in dev\n            // also make sure our shims match what react provides.\n            const realKeys = Object.keys(PropTypes)\n            const shimKeys = Object.keys(PropTypeShims)\n            const missing = _.difference(realKeys, shimKeys).join(', ');\n            const extra = _.difference(shimKeys, realKeys).join(', ');\n            if (missing.length) console.warn('PropTypes shim is missing:', missing);\n            if (extra.length) console.warn('PropTypes shim has extras:', extra);\n            // throw new Error('PropTypes that are defined for production differ from those in react');\n        }\n        return PropTypes;\n    }\n\n    return PropTypeShims;\n\n    function shimPropTypesSameAsReal(shims, real) {\n        const shimKeys = Object.keys(shims);\n        const realKeys = Object.keys(real);\n        return shimKeys.length === realKeys.length &&\n            _.intersection(shimKeys, realKeys).length === shimKeys.length;\n    }\n\n    function getPropTypeShims() {\n        const shim = function() {};\n        shim.isRequired = shim;\n        const getShim = function() { return shim; }\n        const PropTypeShims = {\n            any: shim,\n            array: shim,\n            arrayOf: getShim,\n            bool: shim,\n            checkPropTypes: shim,\n            element: shim,\n            exact: getShim,\n            func: shim,\n            instanceOf: getShim,\n            node: shim,\n            number: shim,\n            object: shim,\n            objectOf: getShim,\n            oneOf: getShim,\n            oneOfType: getShim,\n            shape: getShim,\n            string: shim,\n            symbol: shim\n        };\n        PropTypeShims.PropTypes = PropTypeShims;\n        return PropTypeShims;\n    }\n})\n"]}