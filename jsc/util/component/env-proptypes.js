define(openlumifyEnvironment.dev?['react-proptypes-dev']:[],function(PropTypes){var PropTypeShims=getPropTypeShims();if(PropTypes){if(!shimPropTypesSameAsReal(PropTypeShims,PropTypes)){var realKeys=Object.keys(PropTypes);var shimKeys=Object.keys(PropTypeShims);var missing=_.difference(realKeys,shimKeys).join(', ');var extra=_.difference(shimKeys,realKeys).join(', ');if(missing.length)console.warn('PropTypes shim is missing:',missing);if(extra.length)console.warn('PropTypes shim has extras:',extra);}return PropTypes;}return PropTypeShims;function shimPropTypesSameAsReal(shims,real){var shimKeys=Object.keys(shims);var realKeys=Object.keys(real);return shimKeys.length===realKeys.length&&_.intersection(shimKeys,realKeys).length===shimKeys.length;}function getPropTypeShims(){var shim=function shim(){};shim.isRequired=shim;var getShim=function getShim(){return shim;};var PropTypeShims={any:shim,array:shim,arrayOf:getShim,bool:shim,checkPropTypes:shim,element:shim,exact:getShim,func:shim,instanceOf:getShim,node:shim,number:shim,object:shim,objectOf:getShim,oneOf:getShim,oneOfType:getShim,shape:getShim,string:shim,symbol:shim};PropTypeShims.PropTypes=PropTypeShims;return PropTypeShims;}});
//# sourceMappingURL=env-proptypes.js.map
