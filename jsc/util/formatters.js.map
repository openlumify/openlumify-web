{"version":3,"sources":["../../js/util/formatters.js"],"names":["define","sf","chrono","jstz","Duration","i18n","configProperties","P","moment","language","languagePref","localStorage","getItem","langerror","locale","BITS_FOR_INDEX","BITS_FOR_OFFSET","SERVER_DATE","SERVER_TIME","MOMENT_FORMAT","MOMENT_FORMAT_TZ","dateFormat","timeFormat","showTz","datepickerFormat","classNameIndex","toClassNameMap","fromClassNameMap","isMac","checkIfMac","isFirefox","navigator","userAgent","indexOf","keyboardMappings","metaIcons","shift","meta","ctrl","alt","charIcons","esc","escape","backspace","up","down","left","right","convertToDatePickerFormat","replace","v","length","checkDateTimeFormat","format","type","output","Error","test","e","console","error","codeForCharacter","character","special","tab","clear","enter","space","del","home","end","pageup","pagedown","delete","toLowerCase","toUpperCase","charCodeAt","decimalAdjust","value","exp","parseFloat","Math","isNaN","NaN","toString","split","FORMATTERS","number","pretty","_","isString","isNumber","reverse","join","prettyApproximate","isNegative","abs","result","percent","round","offsetValues","offsetMask","index","offset","compactOffsetValues","heading","isUndefined","inRange","duration","$","trim","floor","boolean","bool","isEmpty","bytes","precision","k","m","g","t","toFixed","className","from","original","to","string","directoryEntity","prettyType","displayName","requestPretty","id","Promise","resolve","require","then","dr","dataRequest","geoLocation","parse","str","match","latitude","longitude","geo","withholdDescription","parsed","latlon","description","object","shortcut","key","normalized","forLookup","parts","forEventLookup","keyCode","warn","normalizeAccents","metaKeys","metaKey","ctrlKey","altKey","shiftKey","plural","count","singular","truncate","words","maxChars","wordsArray","truncated","slice","ellipsis","replacePunctuation","substring","phoneNumber","compact","ssn","uppercase","lowercase","prettyPrint","txt","charAt","substr","date","resetToDefaultDateFormat","setDateFormat","setTimeFormat","_showTz","Boolean","looslyParseDate","parseDate","fixYear","year","parseInt","local","tz","timezone","currentTimezone","numberOrString","Number","dateInLocale","isDate","Date","name","toDate","getTime","utc","millisInMinutes","millisFromLocaleToUTC","getTimezoneOffset","dateInUTC","dateString","millisStr","dateTimeString","overrideTzInfo","timezoneAbbreviation","tzInfo","tzAbbr","dateStringServer","timeStringServer","dateStringUtc","dateTimeStringUtc","timeString","timeStringUtc","relativeToNow","relativeToDate","now","fromDate","span","TimeSpan","time","years","months","days","hours","minutes","addDaysToDate","numDays","newDate","valueOf","setDate","getDate","dateToDateString","toISOString","addDaysToDateString","dateTimeStringToTimezone","dateStr","srcTimezone","destTimezone","dateTz","dateTimeStringToUtc","dateTimeStringServer","dateInServerFormat","offsetDisplay","offsetMinutes","negative","offsetMinutesAbs","list","chain","olson","timezones","map","components","dst","lookupTimezone","withOffsetForDate","momentZone","zone","utcOffset","tzOffset","abbr","tzOffsetDisplay","extend","_currentTimezone","prefs","getPreferences","detect","determine","timeZone","setCurrentTimezone","openlumifyData","currentUser","uiPreferences","JSON","palantirPrettyPrint"],"mappings":"AAQAA,OAAO,CACH,IADG,CAEH,QAFG,CAGH,MAHG,CAIH,aAJG,CAKH,eALG,CAMH,uDANG,CAOH,cAPG,CAQH,QARG,CASH,iBATG,CAUH,QAVG,CAWH,YAXG,CAAP,CAYG,SAASC,EAAT,CAAaC,MAAb,CAAqBC,IAArB,CAA2BC,QAA3B,CAAqCC,IAArC,CAA2CC,gBAA3C,CAA6DC,CAA7D,CAAgEC,MAAhE,CAAwE,CACvE,aAEA,GAAIC,UAAW,IAAf,CACA,GAAI,CACA,GAAIC,cAAeC,aAAaC,OAAb,CAAqB,UAArB,CAAnB,CACA,GAAIF,YAAJ,CAAkB,CACdD,SAAWC,YAAX,CACH,CACJ,CAAC,MAAMG,SAAN,CAAiB,CAA0B,CAC7CL,OAAOM,MAAP,CAAcL,QAAd,EAEA,GAAIM,gBAAiB,EAArB,CACIC,gBAAkB,GAAKD,cAD3B,CAEIE,YAAc,YAFlB,CAGIC,YAAc,OAHlB,CAIIC,cAAmBF,WAAnB,KAAkCC,WAJtC,CAKIE,iBAAsBD,aAAtB,KALJ,CAMIE,UANJ,CAOIC,UAPJ,CAQIC,MARJ,CASIC,iBATJ,CAUIC,eAAiB,CAVrB,CAWIC,eAAiB,EAXrB,CAYIC,iBAAmB,EAZvB,CAaIC,MAAQC,YAbZ,CAcIC,UAAY,CAACC,UAAUC,SAAV,CAAoBC,OAApB,CAA4B,SAA5B,CAdjB,CAeIC,iBAAmB,CACfC,UAAW,CACPC,MAAOR,MAAQ,GAAR,CAAcvB,KAAK,gBAAL,CADd,CAEPgC,KAAMT,MAAQ,GAAR,CAAcvB,KAAK,eAAL,CAFb,CAGPiC,KAAMV,MAAQ,GAAR,CAAcvB,KAAK,eAAL,CAHb,CAIPkC,IAAKX,MAAQ,GAAR,CAAcvB,KAAK,cAAL,CAJZ,CADI,CAOfmC,UAAW,CACPC,IAAKb,MAAQ,GAAR,CAAc,IADZ,CAEPc,OAAQd,MAAQ,GAAR,CAAcvB,KAAK,iBAAL,CAFf,CAGP,SAAUuB,MAAQ,GAAR,CAAc,IAHjB,CAIPe,UAAWf,MAAQ,GAAR,CAAc,IAJlB,CAKPgB,GAAI,GALG,CAMPC,KAAM,GANC,CAOPC,KAAM,GAPC,CAQPC,MAAO,GARA,CAPI,CAfvB,CAkCA,QAASlB,WAAT,EAAsB,CAClB,MAAO,CAACE,UAAUC,SAAV,CAAoBC,OAApB,CAA4B,UAA5B,CAAR,CACH,CAED,QAASe,0BAAT,EAAqC,CAIjC,MAAO3B,YACF4B,OADE,CACM,KADN,CACa,SAASC,CAAT,CAAY,CACxB,MAAO,CAAC,GAAD,CAAM,IAAN,CAAY,GAAZ,CAAiB,IAAjB,EAAuBA,EAAEC,MAAF,CAAW,CAAlC,CAAP,CACH,CAHE,EAIFF,OAJE,CAIM,KAJN,CAIa,SAASC,CAAT,CAAY,CACxB,MAAO,CAAC,GAAD,CAAM,IAAN,EAAYA,EAAEC,MAAF,CAAW,CAAvB,CAAP,CACH,CANE,EAOFF,OAPE,CAOM,SAPN,CAOiB,SAASC,CAAT,CAAY,CAC5B,MAAO,CAAC,GAAD,CAAM,IAAN,EAAYA,EAAEC,MAAF,CAAW,CAAvB,CAAP,CACH,CATE,EAUFF,OAVE,CAUM,QAVN,CAUgB,SAASC,CAAT,CAAY,CAC3B,MAAOA,GAAEC,MAAF,GAAa,CAAb,CAAiB,IAAjB,CAAwB,MAA/B,CACH,CAZE,CAAP,CAaH,CAED,QAASC,oBAAT,CAA6BC,MAA7B,CAAqCC,IAArC,CAA2C,CACvC,GAAI,CACA,GAAIC,QAAS/C,SAAS6C,MAAT,CAAgBA,MAAhB,CAAb,CACA,GAAI,CAACE,MAAD,EAAW,CAACA,OAAOJ,MAAnB,EAA6BI,SAAWF,MAA5C,CAAoD,CAChD,KAAM,IAAIG,MAAJ,CAAU,qBAAV,CAAN,CACH,CAED,GAAIF,OAAS,MAAT,EAAmB,CAAE,uCAAD,CAA0CG,IAA1C,CAA+CJ,MAA/C,CAAxB,CAAgF,CAC5E,KAAM,IAAIG,MAAJ,CAAU,6CAAV,CAAyDH,MAAzD,CAAN,CACH,CAFD,IAEO,IAAIC,OAAS,MAAT,EAAmB,CAAE,+BAAD,CAAkCG,IAAlC,CAAuCJ,MAAvC,CAAxB,CAAwE,CAC3E,KAAM,IAAIG,MAAJ,CAAU,6CAAV,CAAyDH,MAAzD,CAAN,CACH,CACJ,CAAC,MAAMK,CAAN,CAAS,CACPC,QAAQC,KAAR,CAAc,2BAA6BP,MAA7B,CACV,sDADU,CAC+CC,IAD/C,CACsD,SADpE,EAEA,MAAO,MAAP,CACH,CACD,MAAO,KAAP,CACH,CAED,QAASO,iBAAT,CAA0BC,SAA1B,CAAqC,CACjC,GAAIC,SAAU,CACZpB,UAAW,CADC,CACEqB,IAAK,CADP,CACUC,MAAO,EADjB,CAEZC,MAAO,EAFK,CAED,SAAU,EAFT,CAGZzB,IAAK,EAHO,CAGHC,OAAQ,EAHL,CAGSyB,MAAO,EAHhB,CAIZrB,KAAM,EAJM,CAIFF,GAAI,EAJF,CAKZG,MAAO,EALK,CAKDF,KAAM,EALL,CAMZuB,IAAK,EANO,CAMH,SAAU,EANP,CAOZC,KAAM,EAPM,CAOFC,IAAK,EAPH,CAQZC,OAAQ,EARI,CAQAC,SAAU,EARV,CASZ,IAAK,GATO,CASF,IAAK,GATH,CASQ,IAAK,GATb,CAUZ,IAAK,GAVO,CAUF,IAAK,GAVH,CAUQ,IAAK,GAVb,CAWZ,IAAK,GAXO,CAWF,KAAM,GAXJ,CAYZ,IAAK,GAZO,CAYF,IAAK,GAZH,CAYQ,KAAM,GAZd,CAAd,CAgBA,GAAI5C,KAAJ,CAAW,CACPmC,QAAQK,GAAR,CAAcL,QAAQU,MAAR,CAAiBV,QAAQpB,SAAvC,CACH,CAED,MAAOoB,SAAQD,UAAUY,WAAV,EAAR,GAAoCZ,UAAUa,WAAV,GAAwBC,UAAxB,CAAmC,CAAnC,CAA3C,CACH,CAED,QAASC,cAAT,CAAuBvB,IAAvB,CAA6BwB,KAA7B,CAAoCC,GAApC,CAAyC,CAE3C,GAAI,MAAOA,IAAP,GAAe,WAAf,EAA8BC,WAAWD,GAAX,IAAoB,CAAtD,CAAyD,CACxD,MAAOE,MAAK3B,IAAL,EAAWwB,KAAX,CAAP,CACA,CACDA,MAAQE,WAAWF,KAAX,CAAR,CACAC,IAAMC,WAAWD,GAAX,CAAN,CAEA,GAAIG,MAAMJ,KAAN,GAAgB,EAAE,MAAOC,IAAP,GAAe,QAAf,EAA2BA,IAAM,CAAN,GAAY,CAAzC,CAApB,CAAiE,CAChE,MAAOI,IAAP,CACA,CAEDL,MAAQA,MAAMM,QAAN,GAAiBC,KAAjB,CAAuB,GAAvB,CAAR,CACAP,MAAQG,KAAK3B,IAAL,EAAW0B,WAAWF,MAAM,CAAN,EAAW,GAAX,EAAkBA,MAAM,CAAN,EAAYE,WAAWF,MAAM,CAAN,CAAX,EAAuBC,GAAnC,CAA0C,CAACA,GAA7D,CAAX,CAAX,CAAR,CAEAD,MAAQA,MAAMM,QAAN,GAAiBC,KAAjB,CAAuB,GAAvB,CAAR,CACA,MAAOL,YAAWF,MAAM,CAAN,EAAW,GAAX,EAAkBA,MAAM,CAAN,EAAYE,WAAWF,MAAM,CAAN,CAAX,EAAuBC,GAAnC,CAA0CA,GAA5D,CAAX,CAAP,CACA,CAKE,GAAIO,YAAa,CAObC,OAAQ,CASJC,OAAQ,gBAASD,MAAT,CAAiB,CACrB,GAAIE,EAAEC,QAAF,CAAWH,MAAX,CAAJ,CAAwB,CACpBA,OAASP,WAAWO,MAAX,CAAT,CACH,CACD,GAAIE,EAAEE,QAAF,CAAWJ,MAAX,CAAJ,CAAwB,CACpB,MAAOtF,IAAG,UAAH,CAAesF,MAAf,EACFF,KADE,CACI,EADJ,EACQO,OADR,GACkBC,IADlB,CACuB,EADvB,EAEF5C,OAFE,CAEM,gBAFN,CAEwB,KAFxB,EAGFoC,KAHE,CAGI,EAHJ,EAGQO,OAHR,GAGkBC,IAHlB,CAGuB,EAHvB,CAAP,CAIH,CAED,MAAO,EAAP,CACH,CArBG,CAiCJC,kBAAmB,2BAASP,MAAT,CAAiB,CAChC,GAAIQ,YAAaR,OAAS,GAA1B,CACIS,IAAMf,KAAKe,GAAL,CAAST,MAAT,CADV,CAEIU,MAFJ,CAIA,GAAID,KAAO,aAAX,CAA0B,CACtBC,OAAUpB,cAAc,OAAd,CAAuBmB,IAAM,aAA7B,CAA4C,CAAC,CAA7C,EAAkD3F,KAAK,yBAAL,CAA5D,CACH,CAFD,IAEO,IAAI2F,KAAO,UAAX,CAAuB,CAC1BC,OAAUpB,cAAc,OAAd,CAAuBmB,IAAM,UAA7B,CAAyC,CAAC,CAA1C,EAA+C3F,KAAK,wBAAL,CAAzD,CACH,CAFM,IAEA,IAAI2F,KAAO,OAAX,CAAoB,CACvBC,OAAUpB,cAAc,OAAd,CAAuBmB,IAAM,OAA7B,CAAsC,CAAC,CAAvC,EAA4C3F,KAAK,wBAAL,CAAtD,CACH,CAFM,IAEA,IAAI2F,KAAO,IAAX,CAAiB,CACpBC,OAAUpB,cAAc,OAAd,CAAuBmB,IAAM,IAA7B,CAAmC,CAAC,CAApC,EAAyC3F,KAAK,yBAAL,CAAnD,CACH,CAFM,IAEA4F,QAASX,WAAWC,MAAX,CAAkBC,MAAlB,CAAyBQ,GAAzB,CAAT,CAEP,MAAO,CAACD,WAAa,GAAb,CAAmB,EAApB,EAA0BE,MAAjC,CACH,CAjDG,CAyDJC,QAAS,iBAASX,MAAT,CAAiB,CACtB,GAAIE,EAAEC,QAAF,CAAWH,MAAX,CAAJ,CAAwB,CACpBA,OAASP,WAAWO,MAAX,CAAT,CACH,CACD,MAAON,MAAKkB,KAAL,CAAWZ,OAAS,GAApB,EAA2B,GAAlC,CACH,CA9DG,CAmEJa,aAAc,sBAAStB,KAAT,CAAgB,CAC1B,GAAIuB,YAAa,CAAC,GAAKtF,cAAN,EAAwB,CAAzC,CAEA,MAAO,CACHuF,MAAOxB,OAAS9D,eADb,CAEHuF,OAAQzB,MAAQuB,UAFb,CAAP,CAIH,CA1EG,CA+EJG,oBAAqB,6BAASF,KAAT,CAAgBC,MAAhB,CAAwB,CACzC,MAAQD,QAAStF,eAAV,CAA6BuF,MAApC,CACH,CAjFG,CA2FJE,QAAS,iBAAS3B,KAAT,CAAgB,CACrB,GAAIW,EAAEiB,WAAF,CAAc5B,KAAd,CAAJ,CAA0B,CACtB,OACH,CAED,GAAI6B,SAAU7B,MAAQ,GAAtB,CACA,MAAOzE,MAAK,iBAAmB,CAC3B,OAD2B,CAE3B,WAF2B,CAG3B,MAH2B,CAI3B,WAJ2B,CAK3B,OAL2B,CAM3B,WAN2B,CAO3B,MAP2B,CAQ3B,WAR2B,EAS7B4E,KAAKkB,KAAL,CAAWQ,QAAU,EAArB,EAA2B,CATE,CAAxB,EAS4B,GAT5B,CASkCrB,WAAWC,MAAX,CAAkBC,MAAlB,CAAyBmB,OAAzB,CATlC,CASsE,GAT7E,CAUH,CA3GG,CAoHJC,SAAU,kBAAS9B,KAAT,CAAgB,CACtB,GAAI,CAACW,EAAEE,QAAF,CAAWb,KAAX,CAAD,EAAsB,CAAC+B,EAAEC,IAAF,CAAOhC,KAAP,EAAc3B,MAAzC,CAAiD,CAC7C,MAAO,EAAP,CACH,CAFD,IAEO,IAAI2B,QAAU,CAAd,CAAiB,CACpB,MAAO,IAAP,CACH,CAFM,IAEA,CACH,GAAIW,EAAEE,QAAF,CAAWb,KAAX,CAAJ,CAAuB,CACnBA,MAAQG,KAAK8B,KAAL,CAAWjC,KAAX,CAAR,CACH,CACD,MAAO,IAAI1E,SAAJ,CAAa0E,MAAQ,GAArB,EAA0BM,QAA1B,GAAqCnC,OAArC,CAA6C,eAA7C,CAA8D,KAA9D,EAAqE6D,IAArE,EAAP,CACH,CACJ,CA/HG,CAPK,CA4IbE,QAAS,CAQLxB,OAAQ,gBAASyB,IAAT,CAAe,CACnB,GAAIxB,EAAEiB,WAAF,CAAcO,IAAd,GAAwBxB,EAAEC,QAAF,CAAWuB,IAAX,GAAoBxB,EAAEyB,OAAF,CAAUD,IAAV,CAAhD,CAAkE,MAAO,EAAP,CAClE,GAAIA,OAAS,GAAb,CAAkBA,KAAO,IAAP,CAClB,GAAIA,OAAS,GAAb,CAAkBA,KAAO,KAAP,CAClB,MAAOA,OAAQA,OAAS,OAAjB,CACH5G,KAAK,cAAL,CADG,CAEHA,KAAK,eAAL,CAFJ,CAGH,CAfI,CA5II,CAiKb8G,MAAO,CAYH3B,OAAQ,gBAAS2B,KAAT,CAAgBC,SAAhB,CAA2B,CAC/B,GAAIC,GAAI,IAAR,CACIC,EAAID,EAAI,IADZ,CAEIE,EAAID,EAAI,IAFZ,CAGIE,EAAID,EAAI,IAHZ,CAKAH,UAAY3B,EAAEiB,WAAF,CAAcU,SAAd,EAA2B,CAA3B,CAA+BA,SAA3C,CAEA,GAAKD,OAAS,CAAV,EAAiBA,MAAQE,CAA7B,CAAiC,CAC7B,MAAOF,OAAQ,GAAR,CAAc9G,KAAK,cAAL,CAArB,CAEH,CAHD,IAGO,IAAK8G,OAASE,CAAV,EAAiBF,MAAQG,CAA7B,CAAiC,CACpC,MAAO,CAACH,MAAQE,CAAT,EAAYI,OAAZ,CAAoBL,SAApB,EAAiC,GAAjC,CAAuC/G,KAAK,YAAL,CAA9C,CAEH,CAHM,IAGA,IAAK8G,OAASG,CAAV,EAAiBH,MAAQI,CAA7B,CAAiC,CACpC,MAAO,CAACJ,MAAQG,CAAT,EAAYG,OAAZ,CAAoBL,SAApB,EAAiC,GAAjC,CAAuC/G,KAAK,YAAL,CAA9C,CAEH,CAHM,IAGA,IAAK8G,OAASI,CAAV,EAAiBJ,MAAQK,CAA7B,CAAiC,CACpC,MAAO,CAACL,MAAQI,CAAT,EAAYE,OAAZ,CAAoBL,SAApB,EAAiC,GAAjC,CAAuC/G,KAAK,YAAL,CAA9C,CAEH,CAHM,IAGA,IAAI8G,OAASK,CAAb,CAAgB,CACnB,MAAO,CAACL,MAAQK,CAAT,EAAYC,OAAZ,CAAoBL,SAApB,EAAiC,GAAjC,CAAuC/G,KAAK,YAAL,CAA9C,CAEH,CAHM,IAGA,CACH,MAAO8G,OAAQ,GAAR,CAAc9G,KAAK,cAAL,CAArB,CACH,CACJ,CAtCE,CAjKM,CA0MbqH,UAAW,CACPC,KAAM,cAASD,SAAT,CAAoB,CACtB,GAAIE,UAAWjG,iBAAiB+F,SAAjB,CAAf,CACA,GAAI,CAACE,QAAL,CAAe,CACXjE,QAAQC,KAAR,CAAc,4BAAd,CAA4CgE,QAA5C,EACH,CACD,MAAOA,SAAP,CACH,CAPM,CAQPC,GAAI,YAASC,MAAT,CAAiB,CACjB,GAAIJ,WAAYhG,eAAeoG,MAAf,CAAhB,CACA,GAAI,CAACJ,SAAL,CAAgB,CACZA,UAAYhG,eAAeoG,MAAf,EAAyB,KAAQrG,gBAA7C,CACH,CACDE,iBAAiB+F,SAAjB,EAA8BI,MAA9B,CACA,MAAOJ,UAAP,CACH,CAfM,CA1ME,CA4NbK,gBAAiB,CACbvC,OAAQ,gBAASuC,eAAT,CAA0B,CAC9B,GAAIA,iBAAmBA,gBAAgBzE,IAAvC,CAA6C,CACzC,GAAI0E,YAAaD,gBAAgBzE,IAAhB,GAAyB,OAAzB,CAAmCjD,KAAK,uBAAL,CAAnC,CAAmEA,KAAK,wBAAL,CAApF,CACA,MAAO0H,iBAAgBE,WAAhB,CAA8B,IAA9B,CAAqCD,UAArC,CAAkD,GAAzD,CACH,CAHD,IAGO,CACH,MAAO,EAAP,CACH,CACJ,CARY,CASbE,cAAe,uBAASC,EAAT,CAAa,CACxB,GAAI,CAACA,EAAL,CAAS,CACL,MAAOC,SAAQC,OAAR,CAAgB,IAAhB,CAAP,CACH,CACD,MAAOD,SAAQE,OAAR,CAAgB,sBAAhB,EACAC,IADA,CACK,SAASC,EAAT,CAAa,CACf,MAAOA,IAAGC,WAAH,CAAe,WAAf,CAA4B,SAA5B,CAAuCN,EAAvC,CAAP,CACH,CAHA,EAIAI,IAJA,CAIK,SAASzD,KAAT,CAAgB,CAClB,MAAOQ,YAAWyC,eAAX,CAA2BvC,MAA3B,CAAkCV,KAAlC,CAAP,CACH,CANA,CAAP,CAOH,CApBY,CA5NJ,CAsPb4D,YAAa,CACTC,MAAO,eAASC,GAAT,CAAc,CACjB,GAAItB,GAAIsB,KAAOA,IAAIC,KAAJ,CAAU,2CAAV,CAAf,CACA,GAAIvB,CAAJ,CAAO,CACH,GAAIwB,UAAWxB,EAAE,CAAF,CAAf,CAAqByB,UAAYzB,EAAE,CAAF,CAAjC,CACA,MAAO,CACHwB,SAAUA,QADP,CAEHC,UAAWA,SAFR,CAAP,CAIH,CACJ,CAVQ,CAyBTvD,OAAQ,gBAASwD,GAAT,CAAcC,mBAAd,CAAmC,CAEvC,GAAIxD,EAAEC,QAAF,CAAWsD,GAAX,CAAJ,CAAqB,CAEjB,GAAIE,QAAS5D,WAAWoD,WAAX,CAAuBC,KAAvB,CAA6BK,GAA7B,CAAb,CACA,GAAIE,MAAJ,CAAY,CACR,MAAO5D,YAAWoD,WAAX,CAAuBlD,MAAvB,CAA8B0D,MAA9B,CAAP,CACH,CAFD,IAEO,CACH,MAAOF,IAAP,CACH,CACJ,CAED,GAAIA,KAAQ,YAAcA,IAAtB,EAA+B,aAAeA,IAAlD,CAAwD,CACpD,GAAIG,QAAS,CACL1D,EAAEE,QAAF,CAAWqD,IAAIF,QAAf,EAA2BE,IAAIF,QAA/B,CAA0C9D,WAAWgE,IAAIF,QAAf,CADrC,EAEPrB,OAFO,CAEC,CAFD,EAEM,IAFN,CAGT,CACIhC,EAAEE,QAAF,CAAWqD,IAAID,SAAf,EAA4BC,IAAID,SAAhC,CAA4C/D,WAAWgE,IAAID,SAAf,CADhD,EAEEtB,OAFF,CAEU,CAFV,CAHJ,CAOA,GAAIwB,sBAAwB,IAAxB,EAAgCD,IAAII,WAAxC,CAAqD,CACjD,MAAOJ,KAAII,WAAJ,CAAkB,GAAlB,CAAwBD,MAA/B,CACH,CAED,MAAOA,OAAP,CACH,CACJ,CAnDQ,CAtPA,CA4SbE,OAAQ,CACJC,SAAU,kBAASC,GAAT,CAAc,CACpB,GAAIC,YAAaD,IAAItG,OAAJ,CAAY,KAAZ,CAAmB,GAAnB,EAAwB0B,WAAxB,EAAjB,CACA,GAAI6E,aAAe,MAAnB,CAA2B,CACvBA,WAAa,QAAb,CACH,CAFD,IAEO,IAAIA,aAAe,MAAnB,CAA2B,CAC9BA,WAAa5H,MAAQ,cAAR,CAAyB,QAAtC,CACH,CACD,GAAM6H,WAAYD,UAAlB,CACA,GAAME,OAAQF,aAAe,GAAf,CAAqBA,WAAWnE,KAAX,CAAiB,GAAjB,CAArB,CAA6C,CAAC,GAAD,CAA3D,CACA,GAAMiE,UAAW,CACbE,WAAYA,UADC,CAEbG,eAAgBH,UAFH,CAAjB,CAKA,GAAIE,MAAMvG,MAAN,GAAiB,CAArB,CAAwB,CACpBmG,SAASM,OAAT,CAAmB/F,iBAAiB6F,MAAM,CAAN,CAAjB,CAAnB,CACAJ,SAASxF,SAAT,CAAqB4F,MAAM,CAAN,CAArB,CACAJ,SAASK,cAAT,CAA0BL,SAASM,OAAnC,CACH,CAJD,IAIO,IAAIF,MAAMvG,MAAN,GAAiB,CAArB,CAAwB,CAC3BmG,SAASM,OAAT,CAAmB/F,iBAAiB6F,MAAM,CAAN,CAAjB,CAAnB,CACAJ,SAASxF,SAAT,CAAqB4F,MAAM,CAAN,CAArB,CACAJ,SAASI,MAAM,CAAN,EAAShF,WAAT,GAAyB,KAAlC,EAA2C,IAA3C,CACA4E,SAASK,cAAT,CAA0BD,MAAM,CAAN,EAAW,GAAX,CAAiBJ,SAASM,OAApD,CACH,CALM,IAKA,IAAIF,MAAMvG,MAAN,GAAiB,CAArB,CAAwB,CAC3BmG,SAASM,OAAT,CAAmB/F,iBAAiB6F,MAAM,CAAN,CAAjB,CAAnB,CACAJ,SAASxF,SAAT,CAAqB4F,MAAM,CAAN,CAArB,CACAJ,SAASI,MAAM,CAAN,EAAShF,WAAT,GAAyB,KAAlC,EAA2C,IAA3C,CACA4E,SAASI,MAAM,CAAN,EAAShF,WAAT,GAAyB,KAAlC,EAA2C,IAA3C,CACA4E,SAASK,cAAT,CAA0BD,MAAM,CAAN,EAAW,GAAX,CAAiBA,MAAM,CAAN,CAAjB,CAA4B,GAA5B,CAAkCJ,SAASM,OAArE,CACH,CANM,IAMA,OAAOjG,SAAQkG,IAAR,CAAa,yBAAb,CAAwCN,GAAxC,CAAP,CAEP,MAAOD,SAAP,CACH,CAjCG,CA5SK,CAmVbxB,OAAQ,CACJgC,iBAAkB,0BAASlB,GAAT,CAAc,CAC5B,MAAOA,KACF3F,OADE,CACM,WADN,CACmB,GADnB,EAEFA,OAFE,CAEM,UAFN,CAEkB,GAFlB,EAGFA,OAHE,CAGM,UAHN,CAGkB,GAHlB,EAIFA,OAJE,CAIM,WAJN,CAImB,GAJnB,EAKFA,OALE,CAKM,UALN,CAKkB,GALlB,EAMFA,OANE,CAMM,OANN,CAMe,GANf,EAOFA,OAPE,CAOM,OAPN,CAOe,GAPf,CAAP,CAQH,CAVG,CAwBJqG,SAAU,kBAASxF,SAAT,CAAoBiG,QAApB,CAA8B,CACpC,GAAI,CAACA,QAAL,CAAe,CACXA,SAAWzE,WAAW+D,MAAX,CAAkBC,QAAlB,CAA2BxF,SAA3B,CAAX,CACAA,UAAYiG,SAASjG,SAArB,CACH,CAED,GAAImC,QAAS,EAAb,CAEAnC,UAAY5B,iBAAiBM,SAAjB,CAA2BsB,UAAUY,WAAV,EAA3B,IACPZ,UAAUX,MAAV,CAAmB,CAAnB,CAAuBW,UAAUY,WAAV,EAAvB,CAAiDZ,SAD1C,CAAZ,CAGA,GAAIiG,SAASC,OAAb,CAAsB,CAClB/D,QAAU/D,iBAAiBC,SAAjB,CAA2BE,IAA3B,EAAmCT,MAAQ,EAAR,CAAa,GAAhD,CAAV,CACH,CACD,GAAImI,SAASE,OAAb,CAAsB,CAClBhE,QAAU/D,iBAAiBC,SAAjB,CAA2BG,IAA3B,EAAmCV,MAAQ,EAAR,CAAa,GAAhD,CAAV,CACH,CACD,GAAImI,SAASG,MAAb,CAAqB,CACjBjE,QAAU/D,iBAAiBC,SAAjB,CAA2BI,GAA3B,EAAkCX,MAAQ,EAAR,CAAa,GAA/C,CAAV,CACH,CACD,GAAImI,SAASI,QAAb,CAAuB,CACnBlE,QAAU/D,iBAAiBC,SAAjB,CAA2BC,KAA3B,EAAoCR,MAAQ,EAAR,CAAa,GAAjD,CAAV,CACH,CAEDqE,QAAUnC,SAAV,CAEA,MAAOmC,OAAP,CACH,CAnDG,CA+DJmE,OAAQ,gBAASC,KAAT,CAAgBC,QAAhB,CAA0BF,OAA1B,CAAkC,CACtCA,QAASA,SAAWE,SAAW,GAA/B,CAEA,OAAQD,KAAR,EACI,IAAK,EAAL,CAAQ,MAAO,MAAQD,OAAf,CACR,IAAK,EAAL,CAAQ,MAAO,KAAOE,QAAd,CACR,QAAS,MAAOhF,YAAWC,MAAX,CAAkBC,MAAlB,CAAyB6E,KAAzB,EAAkC,GAAlC,CAAwCD,OAA/C,CAHb,CAKH,CAvEG,CAiFJG,SAAU,kBAAS3B,GAAT,CAAc4B,KAAd,CAAqB,CAC3B,GAAIC,UAAW,EAAID,KAAnB,CACI1C,OAASjB,EAAEC,IAAF,CAAO8B,GAAP,CADb,CAEI8B,WAAa5C,OAAOzC,KAAP,CAAa,KAAb,CAFjB,CAGIsF,UAAYD,WAAWE,KAAX,CAAiB,CAAjB,CAAoBJ,KAApB,EAA2B3E,IAA3B,CAAgC,GAAhC,CAHhB,CAIIgF,SAAW,GAJf,CAKIC,mBAAqB,QAArBA,mBAAqB,YAAOlC,KAAI3F,OAAJ,CAAY,YAAZ,CAA0B,EAA1B,CAAP,EALzB,CAOA,GAAI0H,UAAUxH,MAAV,CAAmBsH,QAAvB,CAAiC,CAE7BE,UAAYG,mBAAmBhD,OAAOiD,SAAP,CAAiB,CAAjB,CAAoBN,QAApB,CAAnB,EAAoDI,QAAhE,CACH,CAHD,IAGO,IAAIF,YAAc7C,OAAO7E,OAAP,CAAe,MAAf,CAAuB,GAAvB,CAAlB,CAA+C,CAClD0H,UAAYG,mBAAmBH,SAAnB,EAAgCE,QAA5C,CACH,CAED,MAAOF,UAAP,CACH,CAjGG,CA6GJK,YAAa,qBAASpC,GAAT,CAAc,CACvBA,IAAM,CAACnD,EAAEE,QAAF,CAAWiD,GAAX,EAAmB,GAAKA,GAAxB,CAA+BA,GAAhC,GAAwC,EAA9C,CACA,GAAIC,OAAQD,IAAIC,KAAJ,CAAU,gDAAV,CAAZ,CACA,GAAIA,KAAJ,CAAW,CACPA,MAAMzG,KAAN,GACA,MAAOqD,GAAEwF,OAAF,CAAUpC,KAAV,EAAiBhD,IAAjB,CAAsB,GAAtB,CAAP,CACH,CACD,MAAO+C,IAAP,CACH,CArHG,CAqIJsC,IAAK,aAAStC,GAAT,CAAc,CACfA,IAAM,CAACnD,EAAEE,QAAF,CAAWiD,GAAX,EAAmB,GAAKA,GAAxB,CAA+BA,GAAhC,GAAwC,EAA9C,CACA,GAAIC,OAAQD,IAAIC,KAAJ,CAAU,gDAAV,CAAZ,CAEA,GAAIA,KAAJ,CAAW,CACPA,MAAMzG,KAAN,GACA,MAAOqD,GAAEwF,OAAF,CAAUpC,KAAV,EAAiBhD,IAAjB,CAAsB,GAAtB,CAAP,CACH,CACD,MAAO+C,IAAP,CACH,CA9IG,CAoJJuC,UAAW,mBAASvC,GAAT,CAAc,CACrB,MAAO,CAACA,KAAO,EAAR,EAAYjE,WAAZ,EAAP,CACH,CAtJG,CA4JJyG,UAAW,mBAASxC,GAAT,CAAc,CACrB,MAAO,CAACA,KAAO,EAAR,EAAYlE,WAAZ,EAAP,CACH,CA9JG,CAoKJ2G,YAAa,qBAASzC,GAAT,CAAc,CACvB,MAAO,CAACA,KAAO,EAAR,EAAY3F,OAAZ,CAAoB,YAApB,CAAkC,SAASqI,GAAT,CAAc,CACnD,MAAOA,KAAIC,MAAJ,CAAW,CAAX,EAAc5G,WAAd,GAA8B2G,IAAIE,MAAJ,CAAW,CAAX,EAAc9G,WAAd,EAArC,CACH,CAFM,CAAP,CAGH,CAxKG,CAnVK,CAigBb+G,KAAM,CAEFC,yBAA0B,mCAAW,CACjCrK,WAAaJ,WAAb,CACAO,kBAAmB,IAAnB,CACAF,WAAaJ,WAAb,CACAK,OAAS,IAAT,CACH,CAPC,CASFC,iBAAkB,2BAAW,CACzB,GAAI,CAACA,iBAAL,CAAuB,CACnBA,kBAAmBwB,2BAAnB,CACH,CACD,MAAOxB,kBAAP,CACH,CAdC,CAgBFmK,cAAe,uBAAStI,MAAT,CAAiB,CAC5B,GAAIA,QAAUD,oBAAoBC,MAApB,CAA4B,MAA5B,CAAd,CAAmD,CAC/ChC,WAAagC,MAAb,CACA7B,kBAAmB,IAAnB,CACA,MAAO,KAAP,CACH,CACJ,CAtBC,CAwBFoK,cAAe,uBAASvI,MAAT,CAAiBwI,OAAjB,CAA0B,CACrC,GAAIxI,QAAUD,oBAAoBC,MAApB,CAA4B,MAA5B,CAAd,CAAmD,CAC/C/B,WAAa+B,MAAb,CACA9B,OAASkE,EAAEiB,WAAF,CAAcmF,OAAd,EAAyB,IAAzB,CAAgCC,QAAQD,OAAR,CAAzC,CACA,MAAO,KAAP,CACH,CACJ,CA9BC,CA2CFE,gBAAiB,yBAASnD,GAAT,CAAc,CAC3BA,IAAM/B,EAAEC,IAAF,CAAO8B,GAAP,CAAN,CACA,GAAI6C,MAAOvL,OAAO8L,SAAP,CAAiBpD,GAAjB,CAAX,CACIC,MAAQ,IADZ,CAEIoD,QAAU,QAAVA,QAAU,CAASrD,GAAT,CAAc,CACpB,GAAIA,IAAIzF,MAAJ,GAAe,CAAnB,CAAsB,MAAOyF,IAAP,CACtB,GAAIA,IAAIzF,MAAJ,GAAe,CAAnB,CAAsB,CAClB,GAAI+I,MAAOC,SAASvD,GAAT,CAAc,EAAd,CAAX,CACA,MAAOsD,MAAO,EAAP,CAAY,KAAOA,IAAnB,CAA0B,KAAOA,IAAxC,CACH,CACJ,CARL,CAUA,GAAI,CAACT,IAAL,CAAW,CACP7C,IAAMA,IAAI3F,OAAJ,CAAY,eAAZ,CAA6B,EAA7B,CAAN,CACA2F,IAAMA,IAAI3F,OAAJ,CAAY,eAAZ,CAA6B,EAA7B,CAAN,CACA,GAAI,UAAUQ,IAAV,CAAemF,GAAf,CAAJ,CAAyB,CACrB,MAAO1I,QAAO8L,SAAP,CAAiB,SAAWpD,GAA5B,CAAP,CACH,CAED,GAAI,UAAUnF,IAAV,CAAemF,GAAf,CAAJ,CAAyB,CACrB,MAAO1I,QAAO8L,SAAP,CAAiB,SAAWC,QAAQrD,GAAR,CAA5B,CAAP,CACH,CAGDC,MAAQD,IAAIC,KAAJ,CAAU,wBAAV,CAAR,CACA,GAAIA,KAAJ,CAAW,CACP,GAAIA,MAAM,CAAN,EAAS1F,MAAT,GAAoB,CAAxB,CAA2B,CACvB0F,MAAM,CAAN,EAAWoD,QAAQpD,MAAM,CAAN,CAAR,CAAX,CACH,CACD,MAAO3I,QAAO8L,SAAP,CAAiBnD,MAAM,CAAN,EAAW,KAAX,CAAmBA,MAAM,CAAN,CAApC,CAAP,CACH,CAGDA,MAAQD,IAAIC,KAAJ,CAAU,wBAAV,CAAR,CACA,GAAIA,KAAJ,CAAW,CACP,GAAIA,MAAM,CAAN,EAAS1F,MAAT,GAAoB,CAAxB,CAA2B,CACvB0F,MAAM,CAAN,EAAWoD,QAAQpD,MAAM,CAAN,CAAR,CAAX,CACH,CACD,MAAO3I,QAAO8L,SAAP,CAAiBnD,MAAM,CAAN,EAAW,KAAX,CAAmBA,MAAM,CAAN,CAApC,CAAP,CACH,CACJ,CAED,MAAO4C,KAAP,CACH,CAtFC,CA8FFW,MAAO,eAASxD,GAAT,CAAc,CACjB,GAAInD,EAAEiB,WAAF,CAAckC,GAAd,CAAJ,CAAwB,MAAO,EAAP,CACxB,GAAIyD,IAAK/G,WAAWgH,QAAX,CAAoBC,eAApB,EAAT,CACA,GAAIC,gBAAiB/G,EAAEC,QAAF,CAAWkD,GAAX,GAAmB,CAAC1D,MAAMuH,OAAO7D,GAAP,CAAN,CAApB,CAAyC6D,OAAO7D,GAAP,CAAzC,CAAuDA,GAA5E,CACI8D,YADJ,CAGA,GAAIjH,EAAEkH,MAAF,CAASH,cAAT,CAAJ,CAA8B,CAC1BE,aAAeF,cAAf,CACH,CAFD,IAEO,IAAI/G,EAAEE,QAAF,CAAW6G,cAAX,CAAJ,CAAgC,CACnCE,aAAe,GAAIE,KAAJ,CAASJ,cAAT,CAAf,CACH,CAFM,IAEA,CACH,GAAMtD,QAAS1I,OAAOgM,cAAP,CAAuBpL,gBAAvB,CAAf,CACAsL,aAAexD,OAAOmD,EAAP,CAAUA,GAAGQ,IAAb,EAAmBC,MAAnB,EAAf,CACA,GAAI5H,MAAMwH,aAAaK,OAAb,EAAN,CAAJ,CAAmC,CAC/BpJ,QAAQkG,IAAR,CAAa,yBAA2BjB,GAAxC,EACA,MAAO,EAAP,CACH,CACJ,CAED,MAAO8D,aAAP,CACH,CAlHC,CA0HFM,IAAK,aAASpE,GAAT,CAAc,CACf,GAAInD,EAAEiB,WAAF,CAAckC,GAAd,CAAJ,CAAwB,MAAO,EAAP,CAExB,GAAI8D,cAAepH,WAAWmG,IAAX,CAAgBW,KAAhB,CAAsBxD,GAAtB,CAAnB,CACA,GAAI,CAAC8D,YAAL,CAAmB,MAAO,EAAP,CAEnB,GAAIO,iBAAkB,KAAO,EAA7B,CACIC,sBAAwBR,aAAaS,iBAAb,GAAmCF,eAD/D,CAEIG,UAAY,GAAIR,KAAJ,CAASF,aAAaK,OAAb,GAAyBG,qBAAlC,CAFhB,CAGA,MAAOE,UAAP,CACH,CApIC,CA8IFC,WAAY,oBAASC,SAAT,CAAoB,CAC5B,GAAI7H,EAAEiB,WAAF,CAAc4G,SAAd,CAAJ,CAA8B,MAAO,EAAP,CAC9B,MAAO9M,QAAO8E,WAAWmG,IAAX,CAAgBW,KAAhB,CAAsBkB,SAAtB,CAAP,EAAyCjK,MAAzC,CAAgDhC,UAAhD,CAAP,CACH,CAjJC,CA+JFkM,eAAgB,wBAASD,SAAT,CAAoBE,cAApB,CAAoC,CAChD,GAAI/H,EAAEiB,WAAF,CAAc4G,SAAd,CAAJ,CAA8B,MAAO,EAAP,CAC9B,GAAIG,sBAAuBD,cAA3B,CACA,GAAI,CAACC,oBAAL,CAA2B,CACvB,GAAIC,QAASpI,WAAWgH,QAAX,CAAoBC,eAApB,CAAoCjH,WAAWmG,IAAX,CAAgBW,KAAhB,CAAsBkB,SAAtB,CAApC,CAAb,CACA,GAAII,MAAJ,CAAY,CACRD,qBAAuBC,OAAOC,MAA9B,CACH,CACJ,CACD,MAAOnN,QAAO8E,WAAWmG,IAAX,CAAgBW,KAAhB,CAAsBkB,SAAtB,CAAP,EAAyCjK,MAAzC,CAAgDhC,WAAa,GAAb,CAAmBC,UAAnE,GACHC,QAAUkM,oBAAV,CAAkC,IAAMA,oBAAxC,CAAgE,EAD7D,CAAP,CAGH,CA3KC,CA6KFG,iBAAkB,0BAASN,SAAT,CAAoB,CAClC,GAAI7H,EAAEiB,WAAF,CAAc4G,SAAd,CAAJ,CAA8B,MAAO,EAAP,CAC9B,MAAO9M,QAAO8E,WAAWmG,IAAX,CAAgBuB,GAAhB,CAAoBM,SAApB,CAAP,EAAuCjK,MAAvC,CAA8CpC,WAA9C,CAAP,CACH,CAhLC,CAkLF4M,iBAAkB,0BAASP,SAAT,CAAoB,CAClC,GAAI7H,EAAEiB,WAAF,CAAc4G,SAAd,CAAJ,CAA8B,MAAO,EAAP,CAC9B,MAAO9M,QAAO8E,WAAWmG,IAAX,CAAgBuB,GAAhB,CAAoBM,SAApB,CAAP,EAAuCjK,MAAvC,CAA8CnC,WAA9C,CAAP,CACH,CArLC,CA6LF4M,cAAe,uBAASR,SAAT,CAAoB,CAC/B,GAAI7H,EAAEiB,WAAF,CAAc4G,SAAd,CAAJ,CAA8B,MAAO,EAAP,CAC9B,MAAOhI,YAAWmG,IAAX,CAAgB4B,UAAhB,CAA2B/H,WAAWmG,IAAX,CAAgBuB,GAAhB,CAAoBM,SAApB,CAA3B,CAAP,CACH,CAhMC,CAwMFS,kBAAmB,2BAAST,SAAT,CAAoB,CACnC,GAAI7H,EAAEiB,WAAF,CAAc4G,SAAd,CAAJ,CAA8B,MAAO,EAAP,CAC9B,MAAOhI,YAAWmG,IAAX,CAAgB8B,cAAhB,CAA+BjI,WAAWmG,IAAX,CAAgBuB,GAAhB,CAAoBM,SAApB,CAA/B,CAA+D,KAA/D,CAAP,CACH,CA3MC,CAmNFU,WAAY,oBAASV,SAAT,CAAoB,CAC5B,GAAI7H,EAAEiB,WAAF,CAAc4G,SAAd,CAAJ,CAA8B,MAAO,EAAP,CAC9B,MAAO9M,QAAO8E,WAAWmG,IAAX,CAAgBW,KAAhB,CAAsBkB,SAAtB,CAAP,EAAyCjK,MAAzC,CAAgD/B,UAAhD,CAAP,CACH,CAtNC,CA8NF2M,cAAe,uBAASX,SAAT,CAAoB,CAC/B,GAAI7H,EAAEiB,WAAF,CAAc4G,SAAd,CAAJ,CAA8B,MAAO,EAAP,CAC9B,MAAOhI,YAAWmG,IAAX,CAAgBuC,UAAhB,CAA2B1I,WAAWmG,IAAX,CAAgBuB,GAAhB,CAAoBM,SAApB,CAA3B,CAAP,CACH,CAjOC,CA2OFY,cAAe,uBAASzC,IAAT,CAAe,CAC1B,MAAOnG,YAAWmG,IAAX,CAAgB0C,cAAhB,CAA+B1C,IAA/B,CAAqCnG,WAAWmG,IAAX,CAAgBuB,GAAhB,CAAoBJ,KAAKwB,GAAL,EAApB,CAArC,EAAwE,GAAxE,CAA8E/N,KAAK,UAAL,CAArF,CACH,CA7OC,CAwPF8N,eAAgB,wBAAS1C,IAAT,CAAe4C,QAAf,CAAyB,CACrC,GAAI5I,EAAEiB,WAAF,CAAc+E,IAAd,CAAJ,CAAyB,MAAO,EAAP,CACzB,GAAI6C,MAAO,GAAIrO,IAAGsO,QAAP,CAAgBF,SAAW5C,IAA3B,CAAX,CACI+C,KAAO,EADX,CAGA,GAAIF,KAAKG,KAAL,CAAa,CAAjB,CAAoB,CAChBD,KAAOvO,GAAG,UAAYI,KAAK,YAAL,CAAZ,CAAiC,IAApC,CAA0CiO,IAA1C,CAAP,CACH,CAFD,IAEO,IAAIA,KAAKG,KAAL,GAAe,CAAnB,CAAsB,CACzBD,KAAOnO,KAAK,WAAL,CAAP,CACH,CAFM,IAEA,IAAIiO,KAAKI,MAAL,CAAc,CAAlB,CAAqB,CACxBF,KAAOvO,GAAG,UAAYI,KAAK,aAAL,CAAZ,CAAkC,IAArC,CAA2CiO,IAA3C,CAAP,CACH,CAFM,IAEA,IAAIA,KAAKI,MAAL,GAAgB,CAApB,CAAuB,CAC1BF,KAAOnO,KAAK,YAAL,CAAP,CACH,CAFM,IAEA,IAAIiO,KAAKK,IAAL,CAAY,CAAhB,CAAmB,CACtBH,KAAOvO,GAAG,UAAYI,KAAK,WAAL,CAAZ,CAAgC,IAAnC,CAAyCiO,IAAzC,CAAP,CACH,CAFM,IAEA,IAAIA,KAAKK,IAAL,GAAc,CAAlB,CAAqB,CACxBH,KAAOnO,KAAK,UAAL,CAAP,CACH,CAFM,IAEA,IAAIiO,KAAKM,KAAL,CAAa,CAAjB,CAAoB,CACvBJ,KAAOvO,GAAG,UAAYI,KAAK,YAAL,CAAZ,CAAiC,IAApC,CAA0CiO,IAA1C,CAAP,CACH,CAFM,IAEA,IAAIA,KAAKM,KAAL,GAAe,CAAnB,CAAsB,CACzBJ,KAAOnO,KAAK,WAAL,CAAP,CACH,CAFM,IAEA,IAAIiO,KAAKO,OAAL,CAAe,CAAnB,CAAsB,CACzBL,KAAOvO,GAAG,UAAYI,KAAK,cAAL,CAAZ,CAAmC,IAAtC,CAA4CiO,IAA5C,CAAP,CACH,CAFM,IAEA,IAAIA,KAAKO,OAAL,GAAiB,CAArB,CAAwB,CAC3BL,KAAOnO,KAAK,aAAL,CAAP,CACH,CAFM,IAEA,CACHmO,KAAOnO,KAAK,cAAL,CAAP,CACH,CAED,MAAOmO,KAAP,CACH,CAtRC,CA+RFM,cAAe,uBAASrD,IAAT,CAAesD,OAAf,CAAwB,CACnC,GAAIC,SAAU,GAAIpC,KAAJ,CAASnB,KAAKwD,OAAL,EAAT,CAAd,CACAD,QAAQE,OAAR,CAAgBF,QAAQG,OAAR,GAAoBJ,OAApC,EACA,MAAOC,QAAP,CACH,CAnSC,CAqSFI,iBAAkB,0BAAS3D,IAAT,CAAe,CAC7B,MAAOA,MAAK4D,WAAL,GAAmBpM,OAAnB,CAA2B,MAA3B,CAAmC,EAAnC,CAAP,CACH,CAvSC,CAySFqM,oBAAqB,6BAASjC,UAAT,CAAqB0B,OAArB,CAA8B,CAC/C,MAAOzJ,YAAWmG,IAAX,CAAgB2D,gBAAhB,CAAiC9J,WAAWmG,IAAX,CAAgBqD,aAAhB,CAA8B,GAAIlC,KAAJ,CAASS,UAAT,CAA9B,CAAoD0B,OAApD,CAAjC,CAAP,CACH,CA3SC,CAjgBO,CA+yBbzC,SAAU,CACNiD,yBAA0B,kCAASC,OAAT,CAAkBC,WAAlB,CAA+BC,YAA/B,CAA6C,CACnE,GAAIC,QAASrK,WAAWgH,QAAX,CAAoBb,IAApB,CAAyB+D,OAAzB,CAAkCC,WAAlC,CAAb,CAEA,MAAOE,QAAOtD,EAAP,CAAUqD,YAAV,EAAwBrM,MAAxB,CAA+BhC,WAAa,GAAb,CAAmBC,UAAlD,CAAP,CACH,CALK,CAMNsO,oBAAqB,6BAASJ,OAAT,CAAkBlD,QAAlB,CAA4B,CAC7C,MAAOhH,YAAWgH,QAAX,CAAoBiD,wBAApB,CAA6CC,OAA7C,CAAsDlD,QAAtD,CAAgE,SAAhE,CAAP,CACH,CARK,CASNuD,qBAAsB,8BAASL,OAAT,CAAkBlD,QAAlB,CAA4B,CAC9C,GAAIqD,QAASrK,WAAWgH,QAAX,CAAoBb,IAApB,CAAyB+D,OAAzB,CAAkClD,UAAYhH,WAAWgH,QAAX,CAAoBC,eAApB,GAAsCM,IAApF,CAAb,CACA,MAAO8C,QAAOtD,EAAP,CAAU,SAAV,EAAqBhJ,MAArB,CAA4BpC,YAAc,GAAd,CAAoBC,WAApB,CAAkC,QAA9D,CAAP,CACH,CAZK,CAaN4O,mBAAoB,4BAASN,OAAT,CAAkBlD,QAAlB,CAA4B,CAC5C,GAAI,QAAQ7I,IAAR,CAAa+L,OAAb,CAAJ,CAA2B,CACvB,MAAOA,QAAP,CACH,CAED,GAAItG,cAAJ,CACA,GAAIzD,EAAEE,QAAF,CAAW6J,OAAX,CAAJ,CAAyB,CACrBtG,OAAS1I,OAAO,GAAIoM,KAAJ,CAAS4C,OAAT,CAAP,CAAT,CACH,CAFD,IAEO,CACHtG,OAAS1I,OAAOgP,OAAP,CAAgBrO,aAAhB,CAAT,CACH,CAED,MAAO+H,QAASA,OAAOmD,EAAP,CAAUC,QAAV,CAAT,CAA+BpD,MAAtC,CACH,CA1BK,CA2BNuC,KAAM,cAAS+D,OAAT,CAAkBlD,QAAlB,CAA4B,CAC9B,GAAI,QAAQ7I,IAAR,CAAa+L,OAAb,CAAJ,CAA2B,CACvB,MAAOA,QAAP,CACH,CACD,MAAO/J,GAAEE,QAAF,CAAW6J,OAAX,EACHhP,OAAO6L,EAAP,CAAUmD,OAAV,CAAmBlD,QAAnB,CADG,CAEH9L,OAAO6L,EAAP,CAAUmD,OAAV,CAAmBnO,WAAa,GAAb,CAAmBC,UAAtC,CAAkDgL,QAAlD,CAFJ,CAGH,CAlCK,CAmCNyD,cAAe,uBAASC,aAAT,CAAwB,CACnC,GAAIC,UAAWD,cAAgB,CAA/B,CACIE,iBAAmBjL,KAAKe,GAAL,CAASgK,aAAT,CADvB,CAEIpB,MAAQ3J,KAAK8B,KAAL,CAAWmJ,iBAAmB,EAA9B,CAFZ,CAGIrB,QAAU5J,KAAK8B,KAAL,CAAWmJ,iBAAmB,EAA9B,CAHd,CAKA,GAAI,CAAC,GAAKtB,KAAN,EAAazL,MAAb,GAAwB,CAA5B,CAA+B,CAC3ByL,MAAQ,IAAMA,KAAd,CACH,CACD,GAAI,CAAC,GAAKC,OAAN,EAAe1L,MAAf,GAA0B,CAA9B,CAAiC,CAC7B0L,QAAU,IAAMA,OAAhB,CACH,CAED,MAAO,CAACoB,SAAW,GAAX,CAAiB,GAAlB,EAAyBrB,KAAzB,CAAiC,GAAjC,CAAuCC,OAA9C,CACH,CAjDK,CAkDNsB,KAAM,eAAW,CACb,MAAO1K,GAAE2K,KAAF,CAAQjQ,KAAKkQ,KAAL,CAAWC,SAAnB,EACFC,GADE,CACE,SAAS1D,IAAT,CAAetD,GAAf,CAAoB,CACrB,GAAIiH,YAAajH,IAAIlE,KAAJ,CAAU,GAAV,CAAjB,CACI2K,cAAgB7D,SAASqE,WAAW,CAAX,CAAT,CAAwB,EAAxB,CADpB,CAEIC,IAAMD,WAAWrN,MAAX,CAAoB,CAApB,EAAyBqN,WAAW,CAAX,IAAkB,GAFrD,CAIA,MAAO,CACH3D,IADG,CAEH,CACItG,OAAQyJ,aADZ,CAEID,cAAezK,WAAWgH,QAAX,CAAoByD,aAApB,CAAkCC,aAAlC,CAFnB,CAGInD,KAAMA,IAHV,CAII4D,IAAKA,GAJT,CAFG,CAAP,CASH,CAfE,EAgBFpH,MAhBE,GAiBFvE,KAjBE,EAAP,CAkBH,CArEK,CAuEN4L,eAAgB,wBAAS7D,IAAT,CAAe8D,iBAAf,CAAkC,CAC9C,GAAIR,MAAO7K,WAAWgH,QAAX,CAAoB6D,IAApB,EAAX,CACI9D,GAAK8D,KAAKtD,IAAL,CADT,CAGA,GAAI8D,mBAAqBA,kBAAkB5D,OAA3C,CAAoD,CAChD4D,kBAAoBA,kBAAkB5D,OAAlB,EAApB,CACH,CAED,GAAI,CAAC4D,iBAAD,EAAsBzL,MAAMyL,iBAAN,CAA1B,CAAoD,CAChDA,kBAAoB/D,KAAKwB,GAAL,EAApB,CACH,CAED,GAAIwC,YAAapQ,OAAO6L,EAAP,CAAUwE,IAAV,CAAehE,IAAf,CAAjB,CACA,GAAI,CAAC+D,UAAL,CAAiB,CACb,KAAM,IAAIpN,MAAJ,CAAU,4BAA8BqJ,IAA9B,CAAqC,GAA/C,CAAN,CACH,CACD,GAAItG,QAASqK,WAAWE,SAAX,CAAqBH,iBAArB,EAA0C,CAAC,CAAxD,CACIjD,OAAS,CACLqD,SAAUxK,MADL,CAELoH,OAAQiD,WAAWI,IAAX,CAAgBL,iBAAhB,CAFH,CAGLM,gBAAiB3L,WAAWgH,QAAX,CAAoByD,aAApB,CAAkCxJ,MAAlC,CAHZ,CADb,CAOA,MAAOM,GAAEqK,MAAF,CAAS,EAAT,CAAa7E,EAAb,CAAiBqB,MAAjB,CAAP,CACH,CA/FK,CAiGNnB,gBAAiB,0BAAW,CACxB,GAAI,CAACjH,WAAWgH,QAAX,CAAoB6E,gBAAzB,CAA2C,CACvC,GAAMC,OAAQ9L,WAAWgH,QAAX,CAAoB+E,cAApB,EAAd,CACA,GAAID,MAAME,MAAV,CAAkB,CACdhM,WAAWgH,QAAX,CAAoB6E,gBAApB,CAAuC7L,WAAWgH,QAAX,CAAoBoE,cAApB,CAAmCvQ,KAAKoR,SAAL,GAAiB1E,IAAjB,EAAnC,CAAvC,CACH,CAFD,IAEO,CACHvH,WAAWgH,QAAX,CAAoB6E,gBAApB,CAAuC7L,WAAWgH,QAAX,CAAoBoE,cAApB,CAAmCU,MAAMI,QAAzC,CAAvC,CACH,CACJ,CACD,MAAOlM,YAAWgH,QAAX,CAAoB6E,gBAA3B,CACH,CA3GK,CA6GNM,mBAAoB,4BAASpF,EAAT,CAAa,CAC7B/G,WAAWgH,QAAX,CAAoB6E,gBAApB,CAAuC9E,EAAvC,CACH,CA/GK,CAiHNgF,eAAgB,yBAAY,CACxB,GAAIK,gBACGA,eAAeC,WADlB,EAEGD,eAAeC,WAAf,CAA2BC,aAF9B,EAGG,2BAA6BF,gBAAeC,WAAf,CAA2BC,aAH/D,CAG8E,CAC1E,GAAI,CACA,MAAOC,MAAKlJ,KAAL,CAAW+I,eAAeC,WAAf,CAA2BC,aAA3B,CAAyC,yBAAzC,CAAX,CAAP,CACH,CAAC,MAAMlO,CAAN,CAAS,CACPC,QAAQC,KAAR,CAAc,sCAAd,CAAsDF,CAAtD,EACH,CACJ,CACD,GAAM4N,QAAS,4BAA8BhR,iBAA9B,CAAiDC,EAAE0G,IAAF,CAAO0B,KAAP,CAAarI,iBAAiB,0BAAjB,CAAb,CAAjD,CAA8G,IAA7H,CACA,MAAO,CACHgR,OAAQA,MADL,CAEHE,SAAUF,OAASnR,KAAKoR,SAAL,GAAiB1E,IAAjB,EAAT,CAAoCvM,iBAAiB,4BAAjB,GAAkD,KAF7F,CAAP,CAIH,CAjIK,CA/yBG,CAAjB,CAo7BAgF,WAAWwC,MAAX,CAAkBgK,mBAAlB,CAAwCxM,WAAWwC,MAAX,CAAkBuD,WAA1D,CAEA/F,WAAWmG,IAAX,CAAgBC,wBAAhB,GAEA,MAAOpG,WAAP,CACH,CA5kCD","file":"formatters.js","sourcesContent":["/**\n * These functions assist in formatting different raw datatypes to user\n * displayable strings. These utilities are split into their sections by data\n * type, see the *Namespaces* section below.\n *\n * @classdesc Utility functions for the display of data to users\n * @module formatters\n */\ndefine([\n    'sf',\n    'chrono',\n    'jstz',\n    'duration-js',\n    'util/messages',\n    'util/requirejs/promise!util/service/propertiesPromise',\n    'util/parsers',\n    'moment',\n    'moment-timezone',\n    'jquery',\n    'underscore'\n], function(sf, chrono, jstz, Duration, i18n, configProperties, P, moment) {\n    'use strict';\n\n    var language = 'en';\n    try {\n        var languagePref = localStorage.getItem('language');\n        if (languagePref) {\n            language = languagePref;\n        }\n    } catch(langerror) { /*eslint no-empty:0 */ }\n    moment.locale(language);\n\n    var BITS_FOR_INDEX = 12,\n        BITS_FOR_OFFSET = 32 - BITS_FOR_INDEX,\n        SERVER_DATE = 'YYYY-MM-DD',\n        SERVER_TIME = 'HH:mm',\n        MOMENT_FORMAT = `${SERVER_DATE} ${SERVER_TIME}`,\n        MOMENT_FORMAT_TZ = `${MOMENT_FORMAT} Z`,\n        dateFormat,\n        timeFormat,\n        showTz,\n        datepickerFormat,\n        classNameIndex = 0,\n        toClassNameMap = {},\n        fromClassNameMap = {},\n        isMac = checkIfMac(),\n        isFirefox = ~navigator.userAgent.indexOf('Firefox'),\n        keyboardMappings = {\n            metaIcons: {\n                shift: isMac ? '⇧' : i18n('keyboard.shift'),\n                meta: isMac ? '⌘' : i18n('keyboard.ctrl'),\n                ctrl: isMac ? '⌃' : i18n('keyboard.ctrl'),\n                alt: isMac ? '⌥' : i18n('keyboard.alt')\n            },\n            charIcons: {\n                esc: isMac ? '⎋' : null,\n                escape: isMac ? '⎋' : i18n('keyboard.escape'),\n                'delete': isMac ? '⌫' : null,\n                backspace: isMac ? '⌦' : null,\n                up: '↑',\n                down: '↓',\n                left: '←',\n                right: '→'\n            }\n        };\n\n    function checkIfMac() {\n        return ~navigator.userAgent.indexOf('Mac OS X');\n    }\n\n    function convertToDatePickerFormat() {\n        // converts momentjs formats to bootstrap datepicker\n        // https://momentjs.com/docs/#/displaying/format/\n        // https://bootstrap-datepicker.readthedocs.io/en/stable/options.html#format\n        return dateFormat\n            .replace(/M+/g, function(v) {\n                return ['m', 'mm', 'M', 'MM'][v.length - 1];\n            })\n            .replace(/D+/g, function(v) {\n                return ['d', 'dd'][v.length - 1];\n            })\n            .replace(/d{3,4}/g, function(v) {\n                return ['D', 'DD'][v.length - 3];\n            })\n            .replace(/Y{2,}/g, function(v) {\n                return v.length === 2 ? 'yy' : 'yyyy';\n            })\n    }\n\n    function checkDateTimeFormat(format, type) {\n        try {\n            var output = moment().format(format);\n            if (!output || !output.length || output === format) {\n                throw new Error('Date format invalid');\n            }\n\n            if (type === 'date' && !(/^(M+|D+|d{3,4}|YY|YYYY|[^a-zA-Z\\d])+$/).test(format)) {\n                throw new Error('Date format includes unsupported characters', format);\n            } else if (type === 'time' && !(/^(H+|h+|m+|a|A|[^a-zA-Z\\d])+$/).test(format)) {\n                throw new Error('Time format includes unsupported characters', format);\n            }\n        } catch(e) {\n            console.error('Date Format is invalid: ' + format +\n                '. Check configuration parameter: web.ui.format.date.' + type + 'Display');\n            return false;\n        }\n        return true;\n    }\n\n    function codeForCharacter(character) {\n        var special = {\n          backspace: 8, tab: 9, clear: 12,\n          enter: 13, 'return': 13,\n          esc: 27, escape: 27, space: 32,\n          left: 37, up: 38,\n          right: 39, down: 40,\n          del: 46, 'delete': 46,\n          home: 36, end: 35,\n          pageup: 33, pagedown: 34,\n          ',': 188, '.': 190, '/': 191,\n          '`': 192, '-': 189, '=': 187,\n          ';': 186, '\\'': 222,\n          '[': 219, ']': 221, '\\\\': 220\n        };\n\n        // Set delete to equal backspace on mac\n        if (isMac) {\n            special.del = special.delete = special.backspace;\n        }\n\n        return special[character.toLowerCase()] || character.toUpperCase().charCodeAt(0);\n    }\n\n    function decimalAdjust(type, value, exp) {\n\t\t// If the exp is undefined or zero...\n\t\tif (typeof exp === 'undefined' || parseFloat(exp) === 0) {\n\t\t\treturn Math[type](value);\n\t\t}\n\t\tvalue = parseFloat(value);\n\t\texp = parseFloat(exp);\n\t\t// If the value is not a number or the exp is not an integer...\n\t\tif (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// Shift\n\t\tvalue = value.toString().split('e');\n\t\tvalue = Math[type](parseFloat(value[0] + 'e' + (value[1] ? (parseFloat(value[1]) - exp) : -exp)));\n\t\t// Shift back\n\t\tvalue = value.toString().split('e');\n\t\treturn parseFloat(value[0] + 'e' + (value[1] ? (parseFloat(value[1]) + exp) : exp));\n\t}\n\n    /**\n     * @alias module:formatters\n     */\n    var FORMATTERS = {\n\n        /**\n         * Utilities for transforming numbers\n         *\n         * @namespace\n         */\n        number: {\n\n            /**\n             * Format a number by truncated decimals to 2 digits and adding\n             * thousands separators\n             *\n             * @param {number|string} number\n             * @returns {string} formatted string for empty string if not a valid number\n             */\n            pretty: function(number) {\n                if (_.isString(number)) {\n                    number = parseFloat(number);\n                }\n                if (_.isNumber(number)) {\n                    return sf('{0:#.##}', number)\n                        .split('').reverse().join('')\n                        .replace(/(\\d{3}(?=\\d))/g, '$1,')\n                        .split('').reverse().join('');\n                }\n\n                return '';\n            },\n\n            /**\n             * Format a number to an approximate number.\n             * * 1000 => 1K\n             * * 1000000 => 1M\n             * * 1000000000 => 1B\n             * * 1000000000000 => 1T\n             *\n             * @param {number} number The value to transform\n             * @return Formatted number\n             */\n            prettyApproximate: function(number) {\n                var isNegative = number < 0.0,\n                    abs = Math.abs(number),\n                    result;\n\n                if (abs >= 1000000000000) {\n                    result = (decimalAdjust('round', abs / 1000000000000, -1) + i18n('numbers.trillion_suffix'));\n                } else if (abs >= 1000000000) {\n                    result = (decimalAdjust('round', abs / 1000000000, -1) + i18n('numbers.billion_suffix'));\n                } else if (abs >= 1000000) {\n                    result = (decimalAdjust('round', abs / 1000000, -1) + i18n('numbers.million_suffix'));\n                } else if (abs >= 1000) {\n                    result = (decimalAdjust('round', abs / 1000, -1) + i18n('numbers.thousand_suffix'));\n                } else result = FORMATTERS.number.pretty(abs);\n\n                return (isNegative ? '-' : '') + result;\n            },\n\n            /**\n             * Transform the input decimal (0-1) into a percentage\n             *\n             * @param {number|string} number\n             * @returns {string} rounded number as percentage\n             */\n            percent: function(number) {\n                if (_.isString(number)) {\n                    number = parseFloat(number);\n                }\n                return Math.round(number * 100) + '%';\n            },\n\n            /*\n             * Split 32-bit integers into 12-bit index, 20-bit offset\n             */\n            offsetValues: function(value) {\n                var offsetMask = (1 << BITS_FOR_INDEX) - 1;\n\n                return {\n                    index: value >> BITS_FOR_OFFSET,\n                    offset: value & offsetMask\n                };\n            },\n\n            /*\n             * Combine 12-bit index, 20-bit offset into 32-bit integer\n             */\n            compactOffsetValues: function(index, offset) {\n                return (index << BITS_FOR_OFFSET) | offset;\n            },\n\n            /**\n             * Convert a number in degrees to a heading string.\n             * * 5.2 => North 5º\n             *\n             * @param {number} value\n             * @returns {string} One of eight heading strings followed by\n             * degrees\n             */\n            heading: function(value) {\n                if (_.isUndefined(value)) {\n                    return;\n                }\n\n                var inRange = value % 360;\n                return i18n('field.heading.' + [\n                    'north',\n                    'northeast',\n                    'east',\n                    'southeast',\n                    'south',\n                    'southwest',\n                    'west',\n                    'northwest'\n                ][Math.round(inRange / 45) % 8]) + ' ' + FORMATTERS.number.pretty(inRange) + '°';\n            },\n\n            /**\n             * Format a number of seconds into a readable duration.\n             * * 64 => 1m 4s\n             *\n             * @param {number|string} value Number of seconds to transform\n             * @returns {string} formatted duration string\n             */\n            duration: function(value) {\n                if (!_.isNumber(value) && !$.trim(value).length) {\n                    return '';\n                } else if (value === 0) {\n                    return '0s';\n                } else {\n                    if (_.isNumber(value)) {\n                        value = Math.floor(value);\n                    }\n                    return new Duration(value + 's').toString().replace(/(ms|[wdhms])/g, '$1 ').trim()\n                }\n            }\n        },\n\n        /**\n         * @namespace\n         */\n        boolean: {\n\n            /**\n             * Converts boolean or string with 'T/F/true/false' into string true/false\n             *\n             * @param {boolean|string} bool input\n             * @returns {string} true or false\n             */\n            pretty: function(bool) {\n                if (_.isUndefined(bool) || (_.isString(bool) && _.isEmpty(bool))) return '';\n                if (bool === 'T') bool = true;\n                if (bool === 'F') bool = false;\n                return bool && bool !== 'false' ?\n                    i18n('boolean.true') :\n                    i18n('boolean.false');\n            }\n        },\n\n        /**\n         * @namespace\n         */\n        bytes: {\n\n            /**\n             * Converts bytes to human-readable format\n             * * 1024 => 1K\n             *\n             * Terrabyte is largest unit outputted.\n             *\n             * @param {number} bytes The bytes to format\n             * @param {number} [precision=1] The significant digits to round\n             * @returns Human readable bytes format\n             */\n            pretty: function(bytes, precision) {\n                var k = 1024,\n                    m = k * 1024,\n                    g = m * 1024,\n                    t = g * 1024;\n\n                precision = _.isUndefined(precision) ? 1 : precision;\n\n                if ((bytes >= 0) && (bytes < k)) {\n                    return bytes + ' ' + i18n('bytes.suffix');\n\n                } else if ((bytes >= k) && (bytes < m)) {\n                    return (bytes / k).toFixed(precision) + ' ' + i18n('bytes.kilo');\n\n                } else if ((bytes >= m) && (bytes < g)) {\n                    return (bytes / m).toFixed(precision) + ' ' + i18n('bytes.mega');\n\n                } else if ((bytes >= g) && (bytes < t)) {\n                    return (bytes / g).toFixed(precision) + ' ' + i18n('bytes.giga');\n\n                } else if (bytes >= t) {\n                    return (bytes / t).toFixed(precision) + ' ' + i18n('bytes.tera');\n\n                } else {\n                    return bytes + ' ' + i18n('bytes.suffix');\n                }\n            }\n        },\n\n        className: {\n            from: function(className) {\n                var original = fromClassNameMap[className];\n                if (!original) {\n                    console.error('Never created a class for ', original);\n                }\n                return original;\n            },\n            to: function(string) {\n                var className = toClassNameMap[string];\n                if (!className) {\n                    className = toClassNameMap[string] = 'id' + (classNameIndex++);\n                }\n                fromClassNameMap[className] = string;\n                return className;\n            }\n        },\n\n        directoryEntity: {\n            pretty: function(directoryEntity) {\n                if (directoryEntity && directoryEntity.type) {\n                    var prettyType = directoryEntity.type === 'group' ? i18n('field.directory.group') : i18n('field.directory.person');\n                    return directoryEntity.displayName + ' (' + prettyType + ')';\n                } else {\n                    return '';\n                }\n            },\n            requestPretty: function(id) {\n                if (!id) {\n                    return Promise.resolve(null);\n                }\n                return Promise.require('util/withDataRequest')\n                      .then(function(dr) {\n                          return dr.dataRequest('directory', 'getById', id)\n                      })\n                      .then(function(value) {\n                          return FORMATTERS.directoryEntity.pretty(value);\n                      });\n            }\n        },\n\n        /**\n         * @namespace\n         */\n        geoLocation: {\n            parse: function(str) {\n                var m = str && str.match(/\\s*point(?:\\[|\\()(.*?),(.*?)(?:\\]|\\))\\s*/i);\n                if (m) {\n                    var latitude = m[1], longitude = m[2];\n                    return {\n                        latitude: latitude,\n                        longitude: longitude\n                    };\n                }\n            },\n\n            /**\n             * Format a geolocation object or string in format\n             * `point[lat,lon]` into a geolocation string.\n             *\n             * Will also use description if available\n             *\n             * @param {object|string} geo The geolocation json object or point string\n             * @param {number} [geo.latitude] The latitude in decimal format\n             * @param {number} [geo.longitude] The longitude in decimal format\n             * @param {string} [geo.description] The description of geolocation\n             * @param {boolean} [withholdDescription=false] Try to disable description display\n             * @returns {string} The geolocation display\n             */\n            pretty: function(geo, withholdDescription) {\n\n                if (_.isString(geo)) {\n\n                    var parsed = FORMATTERS.geoLocation.parse(geo);\n                    if (parsed) {\n                        return FORMATTERS.geoLocation.pretty(parsed);\n                    } else {\n                        return geo;\n                    }\n                }\n\n                if (geo && ('latitude' in geo) && ('longitude' in geo)) {\n                    var latlon = (\n                            _.isNumber(geo.latitude) ? geo.latitude : parseFloat(geo.latitude)\n                        ).toFixed(3) + ', ' +\n                        (\n                            _.isNumber(geo.longitude) ? geo.longitude : parseFloat(geo.longitude)\n                        ).toFixed(3);\n\n                    if (withholdDescription !== true && geo.description) {\n                        return geo.description + ' ' + latlon;\n                    }\n\n                    return latlon;\n                }\n            }\n        },\n\n        object: {\n            shortcut: function(key) {\n                let normalized = key.replace(/\\+/g, '-').toUpperCase();\n                if (normalized === 'UNDO') {\n                    normalized = 'META-Z';\n                } else if (normalized === 'REDO') {\n                    normalized = isMac ? 'SHIFT-META-Z' : 'META-Y';\n                }\n                const forLookup = normalized;\n                const parts = normalized !== '-' ? normalized.split('-') : ['-'];\n                const shortcut = {\n                    normalized: normalized,\n                    forEventLookup: normalized\n                };\n\n                if (parts.length === 1) {\n                    shortcut.keyCode = codeForCharacter(parts[0]);\n                    shortcut.character = parts[0];\n                    shortcut.forEventLookup = shortcut.keyCode;\n                } else if (parts.length === 2) {\n                    shortcut.keyCode = codeForCharacter(parts[1]);\n                    shortcut.character = parts[1];\n                    shortcut[parts[0].toLowerCase() + 'Key'] = true;\n                    shortcut.forEventLookup = parts[0] + '-' + shortcut.keyCode;\n                } else if (parts.length === 3) {\n                    shortcut.keyCode = codeForCharacter(parts[2]);\n                    shortcut.character = parts[2];\n                    shortcut[parts[0].toLowerCase() + 'Key'] = true;\n                    shortcut[parts[1].toLowerCase() + 'Key'] = true;\n                    shortcut.forEventLookup = parts[0] + '-' + parts[1] + '-' + shortcut.keyCode;\n                } else return console.warn('Unable to add shortcut ', key);\n\n                return shortcut;\n            }\n        },\n\n        /**\n         * @namespace\n         */\n        string: {\n            normalizeAccents: function(str) {\n                return str\n                    .replace(/[áàãâä]/gi, 'a')\n                    .replace(/[éè¨ê]/gi, 'e')\n                    .replace(/[íìïî]/gi, 'i')\n                    .replace(/[óòöôõ]/gi, 'o')\n                    .replace(/[úùüû]/gi, 'u')\n                    .replace(/[ç]/gi, 'c')\n                    .replace(/[ñ]/gi, 'n');\n            },\n\n            /**\n             * Convert a character and metaKeys to human-readable and\n             * OS-specific keyboard shortcut display.\n             *\n             * @param {string} key The shortcut\n             * @param {object} [metaKeys] The meta keys to include in shortcut\n             * @param {boolean} [metaKeys.metaKey=false]\n             * @param {boolean} [metaKeys.ctrlKey=false]\n             * @param {boolean} [metaKeys.altKey=false]\n             * @param {boolean} [metaKeys.shiftKey=false]\n             * @returns {string} Transformed shortcut with OS-specific glyphs\n             */\n            shortcut: function(character, metaKeys) {\n                if (!metaKeys) {\n                    metaKeys = FORMATTERS.object.shortcut(character);\n                    character = metaKeys.character;\n                }\n\n                var result = '';\n\n                character = keyboardMappings.charIcons[character.toLowerCase()] ||\n                    (character.length > 1 ? character.toLowerCase() : character);\n\n                if (metaKeys.metaKey) {\n                    result += keyboardMappings.metaIcons.meta + (isMac ? '' : '+');\n                }\n                if (metaKeys.ctrlKey) {\n                    result += keyboardMappings.metaIcons.ctrl + (isMac ? '' : '+');\n                }\n                if (metaKeys.altKey) {\n                    result += keyboardMappings.metaIcons.alt + (isMac ? '' : '+');\n                }\n                if (metaKeys.shiftKey) {\n                    result += keyboardMappings.metaIcons.shift + (isMac ? '' : '+');\n                }\n\n                result += character;\n\n                return result;\n            },\n\n            /**\n             * Displays a count of objects with correct plural.\n             * * 0, 'person', 'people' => No people\n             * * 2, 'ball' => 2 balls\n             *\n             * @param {number} count The number of objects\n             * @param {string} singular The singular version of noun\n             * @param {string} [plural=singular+'s'] The plural version of noun\n             * @returns {string} The count of objects with correct noun\n             */\n            plural: function(count, singular, plural) {\n                plural = plural || (singular + 's');\n\n                switch (count) {\n                    case 0: return 'No ' + plural;\n                    case 1: return '1 ' + singular;\n                    default: return FORMATTERS.number.pretty(count) + ' ' + plural;\n                }\n            },\n\n            /**\n             * Truncate the string to given number of words and adds an\n             * ellipsis.\n             *\n             * @param {string} str The input string\n             * @param {number} words The number of words\n             * @returns {string} Truncated string\n             */\n            truncate: function(str, words) {\n                var maxChars = 7 * words,\n                    string = $.trim(str),\n                    wordsArray = string.split(/\\s+/),\n                    truncated = wordsArray.slice(0, words).join(' '),\n                    ellipsis = '…',\n                    replacePunctuation = str => str.replace(/[,;:?.!]+$/, '');\n\n                if (truncated.length > maxChars) {\n                    // Use standard truncation (set amount of characters)\n                    truncated = replacePunctuation(string.substring(0, maxChars)) + ellipsis;\n                } else if (truncated !== string.replace(/\\s+/g, ' ')) {\n                    truncated = replacePunctuation(truncated) + ellipsis;\n                }\n\n                return truncated\n            },\n\n            /**\n             * Formats US phone numbers\n             * * 1234567890 => 123-456-7890\n             * * 123.456.7890 => 123-456-7890\n             *\n             * If it doesn't match the format it returns the input.\n             *\n             * @param {string} str Phone number string to parse\n             * @returns {string} formatted phone number\n             */\n            phoneNumber: function(str) {\n                str = (_.isNumber(str) ? ('' + str) : str) || '';\n                var match = str.match(/^([0-9]{3})?[-. ]?([0-9]{3})?[-. ]?([0-9]{4})$/);\n                if (match) {\n                    match.shift();\n                    return _.compact(match).join('-')\n                }\n                return str;\n            },\n\n            /**\n             * Tries to match strings that look like SSN and format\n             * consistently.\n             * * 123 45 6789 => 123-45-6789\n             * * 123456789 => 123-45-6789\n             * * 123.45.6789 => 123-45-6789\n             * * 123-45-6789 => 123-45-6789\n             *\n             * If input doesn't match SSN-like string, the input is returned as\n             * is.\n             *\n             * @param {string} str Social Security number to parse\n             * @returns {string} The formatted SSN\n             */\n            ssn: function(str) {\n                str = (_.isNumber(str) ? ('' + str) : str) || '';\n                var match = str.match(/^([0-9]{3})?[-. ]?([0-9]{2})?[-. ]?([0-9]{4})$/);\n\n                if (match) {\n                    match.shift();\n                    return _.compact(match).join('-')\n                }\n                return str;\n            },\n\n            /**\n             * @param {string} [str=''] String to uppercase\n             * @returns uppercase string\n             */\n            uppercase: function(str) {\n                return (str || '').toUpperCase();\n            },\n\n            /**\n             * @param {string} [str=''] String to lowercase\n             * @returns lowercase string\n             */\n            lowercase: function(str) {\n                return (str || '').toLowerCase();\n            },\n\n            /**\n             * @param {string} [str=''] String to pretty print\n             * @returns string with first letter of words uppercased\n             */\n            prettyPrint: function(str) {\n                return (str || '').replace(/\\w[^-\\s]*/g, function(txt) {\n                    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                });\n            }\n        },\n\n        /**\n         * @namespace\n         */\n        date: {\n\n            resetToDefaultDateFormat: function() {\n                dateFormat = SERVER_DATE;\n                datepickerFormat = null;\n                timeFormat = SERVER_TIME;\n                showTz = true;\n            },\n\n            datepickerFormat: function() {\n                if (!datepickerFormat) {\n                    datepickerFormat = convertToDatePickerFormat();\n                }\n                return datepickerFormat\n            },\n\n            setDateFormat: function(format) {\n                if (format && checkDateTimeFormat(format, 'date')) {\n                    dateFormat = format;\n                    datepickerFormat = null;\n                    return true;\n                }\n            },\n\n            setTimeFormat: function(format, _showTz) {\n                if (format && checkDateTimeFormat(format, 'time')) {\n                    timeFormat = format;\n                    showTz = _.isUndefined(_showTz) ? true : Boolean(_showTz);\n                    return true;\n                }\n            },\n\n            /**\n             * Try to parse the input as a date.\n             *\n             *  Accepts partial formats like:\n             *  * 2015\n             *  * feb 2015\n             *  * 2015 February\n             *\n             * @param {string} str String with date to parse\n             * @return {date} parsed date\n             */\n            looslyParseDate: function(str) {\n                str = $.trim(str);\n                var date = chrono.parseDate(str),\n                    match = null,\n                    fixYear = function(str) {\n                        if (str.length === 4) return str;\n                        if (str.length === 2) {\n                            var year = parseInt(str, 10);\n                            return year < 59 ? '20' + year : '19' + year;\n                        }\n                    };\n\n                if (!date) {\n                    str = str.replace(/^([^\\d\\w]|_)*/, '');\n                    str = str.replace(/([^\\d\\w]|_)*$/, '');\n                    if (/^\\d{4}$/.test(str)) {\n                        return chrono.parseDate('jan 1 ' + str)\n                    }\n\n                    if (/^\\d{2}$/.test(str)) {\n                        return chrono.parseDate('jan 1 ' + fixYear(str));\n                    }\n\n                    // Month and year \"feb 2015\"\n                    match = str.match(/^([^\\d]+)\\s*(\\d{2,4})$/)\n                    if (match) {\n                        if (match[2].length === 2) {\n                            match[2] = fixYear(match[2]);\n                        }\n                        return chrono.parseDate(match[1] + ' 1 ' + match[2]);\n                    }\n\n                    // Year and month \"2015 january\"\n                    match = str.match(/^(\\d{2,4})\\s*([^\\d]+)$/)\n                    if (match) {\n                        if (match[1].length === 2) {\n                            match[1] = fixYear(match[1]);\n                        }\n                        return chrono.parseDate(match[2] + ' 1 ' + match[1]);\n                    }\n                }\n\n                return date;\n            },\n\n            /**\n             * Convert a date string to date object offset by local time.\n             *\n             * @param {string|number} str Input string to convert\n             * @return {date} Date offset by locale.\n             */\n            local: function(str) {\n                if (_.isUndefined(str)) return '';\n                var tz = FORMATTERS.timezone.currentTimezone();\n                var numberOrString = _.isString(str) && !isNaN(Number(str)) ? Number(str) : str,\n                    dateInLocale;\n\n                if (_.isDate(numberOrString)) {\n                    dateInLocale = numberOrString;\n                } else if (_.isNumber(numberOrString)) {\n                    dateInLocale = new Date(numberOrString)\n                } else {\n                    const parsed = moment(numberOrString, MOMENT_FORMAT_TZ);\n                    dateInLocale = parsed.tz(tz.name).toDate();\n                    if (isNaN(dateInLocale.getTime())) {\n                        console.warn('Unable to parse date: ' + str);\n                        return '';\n                    }\n                }\n\n                return dateInLocale;\n            },\n\n            /**\n             * Convert a date string to date object ignoring local timezone\n             *\n             * @param {string|number} str Input string to convert\n             * @return {date} Date offset in UTC\n             */\n            utc: function(str) {\n                if (_.isUndefined(str)) return '';\n\n                var dateInLocale = FORMATTERS.date.local(str);\n                if (!dateInLocale) return '';\n\n                var millisInMinutes = 1000 * 60,\n                    millisFromLocaleToUTC = dateInLocale.getTimezoneOffset() * millisInMinutes,\n                    dateInUTC = new Date(dateInLocale.getTime() + millisFromLocaleToUTC);\n                return dateInUTC;\n            },\n\n            /**\n             * Convert date to date string (no time) using the configurated\n             * date format specified in configuration parameter:\n             * `web.ui.formats.date.dateDisplay`\n             *\n             * @param {string|number} millisStr milliseconds\n             * @returns {string} Date string (no time) based on milliseconds\n             */\n            dateString: function(millisStr) {\n                if (_.isUndefined(millisStr)) return '';\n                return moment(FORMATTERS.date.local(millisStr)).format(dateFormat);\n            },\n\n            /**\n             * Convert date to date time string, optionally to different\n             * timezone using the configured date and time formats specified\n             * in configuration parameters:\n             * `web.ui.formats.date.dateDisplay`\n             * `web.ui.formats.date.timeDisplay`\n             * `web.ui.formats.date.showTimezone`\n             *\n             * @param {string|number} millisStr milliseconds\n             * @param {string} [overrideTzInfo=Users Timezone] Specify different TZ (UTC, etc.)\n             * @returns {string} Date string (with time)\n             */\n            dateTimeString: function(millisStr, overrideTzInfo) {\n                if (_.isUndefined(millisStr)) return '';\n                var timezoneAbbreviation = overrideTzInfo;\n                if (!timezoneAbbreviation) {\n                    var tzInfo = FORMATTERS.timezone.currentTimezone(FORMATTERS.date.local(millisStr));\n                    if (tzInfo) {\n                        timezoneAbbreviation = tzInfo.tzAbbr;\n                    }\n                }\n                return moment(FORMATTERS.date.local(millisStr)).format(dateFormat + ' ' + timeFormat) + (\n                    showTz && timezoneAbbreviation ? (' ' + timezoneAbbreviation) : ''\n                );\n            },\n\n            dateStringServer: function(millisStr) {\n                if (_.isUndefined(millisStr)) return '';\n                return moment(FORMATTERS.date.utc(millisStr)).format(SERVER_DATE);\n            },\n\n            timeStringServer: function(millisStr) {\n                if (_.isUndefined(millisStr)) return '';\n                return moment(FORMATTERS.date.utc(millisStr)).format(SERVER_TIME);\n            },\n\n            /**\n             * Convert date to utc date string (no time)\n             *\n             * @param {string|number} millisStr milliseconds\n             * @returns {string} Date string (no time) based on milliseconds\n             */\n            dateStringUtc: function(millisStr) {\n                if (_.isUndefined(millisStr)) return '';\n                return FORMATTERS.date.dateString(FORMATTERS.date.utc(millisStr));\n            },\n\n            /**\n             * Convert date to UTC date time string\n             *\n             * @param {string|number} millisStr milliseconds\n             * @returns {string} Date string (with time)\n             */\n            dateTimeStringUtc: function(millisStr) {\n                if (_.isUndefined(millisStr)) return '';\n                return FORMATTERS.date.dateTimeString(FORMATTERS.date.utc(millisStr), 'UTC');\n            },\n\n            /**\n             * Convert date to time string\n             *\n             * @param {string|number} millisStr milliseconds\n             * @returns {string} Time string (hours/minutes)\n             */\n            timeString: function(millisStr) {\n                if (_.isUndefined(millisStr)) return '';\n                return moment(FORMATTERS.date.local(millisStr)).format(timeFormat);\n            },\n\n            /**\n             * Convert date to UTC time string\n             *\n             * @param {string|number} millisStr milliseconds\n             * @returns {string} Time string (hours/minutes)\n             */\n            timeStringUtc: function(millisStr) {\n                if (_.isUndefined(millisStr)) return '';\n                return FORMATTERS.date.timeString(FORMATTERS.date.utc(millisStr));\n            },\n\n            /**\n             * Returns relative time with \"ago\" suffix.\n             * * moments ago\n             * * 5 minutes ago\n             *\n             * @param {number} date in milliseconds\n             * @returns {string} Relative time string from now to input\n             */\n            relativeToNow: function(date) {\n                return FORMATTERS.date.relativeToDate(date, FORMATTERS.date.utc(Date.now())) + ' ' + i18n('time.ago');\n            },\n\n            /**\n             * Returns relative time\n             * * moments\n             * * 5 minutes\n             * * 4 years\n             *\n             * @param {number} date in milliseconds\n             * @returns {string} Relative time string from now to input\n             */\n            relativeToDate: function(date, fromDate) {\n                if (_.isUndefined(date)) return '';\n                var span = new sf.TimeSpan(fromDate - date),\n                    time = '';\n\n                if (span.years > 1) {\n                    time = sf(\"{0:^y '\" + i18n('time.years') + \"'}\", span);\n                } else if (span.years === 1) {\n                    time = i18n('time.year');\n                } else if (span.months > 1) {\n                    time = sf(\"{0:^M '\" + i18n('time.months') + \"'}\", span);\n                } else if (span.months === 1) {\n                    time = i18n('time.month');\n                } else if (span.days > 1) {\n                    time = sf(\"{0:^d '\" + i18n('time.days') + \"'}\", span);\n                } else if (span.days === 1) {\n                    time = i18n('time.day');\n                } else if (span.hours > 1) {\n                    time = sf(\"{0:^h '\" + i18n('time.hours') + \"'}\", span);\n                } else if (span.hours === 1) {\n                    time = i18n('time.hour');\n                } else if (span.minutes > 1) {\n                    time = sf(\"{0:^m '\" + i18n('time.minutes') + \"'}\", span);\n                } else if (span.minutes === 1) {\n                    time = i18n('time.minute');\n                } else {\n                    time = i18n('time.moments');\n                }\n\n                return time;\n            },\n\n            /**\n             * Add / Decrement days from initial date.\n             *\n             * @param {date} date Initial date\n             * @param {number} numDays Increment days by this\n             * @return {date} date offset by numDays\n             */\n            addDaysToDate: function(date, numDays) {\n                var newDate = new Date(date.valueOf());\n                newDate.setDate(newDate.getDate() + numDays);\n                return newDate;\n            },\n\n            dateToDateString: function(date) {\n                return date.toISOString().replace(/T.*$/, '');\n            },\n\n            addDaysToDateString: function(dateString, numDays) {\n                return FORMATTERS.date.dateToDateString(FORMATTERS.date.addDaysToDate(new Date(dateString), numDays));\n            }\n        },\n\n        timezone: {\n            dateTimeStringToTimezone: function(dateStr, srcTimezone, destTimezone) {\n                var dateTz = FORMATTERS.timezone.date(dateStr, srcTimezone);\n\n                return dateTz.tz(destTimezone).format(dateFormat + ' ' + timeFormat);\n            },\n            dateTimeStringToUtc: function(dateStr, timezone) {\n                return FORMATTERS.timezone.dateTimeStringToTimezone(dateStr, timezone, 'Etc/UTC');\n            },\n            dateTimeStringServer: function(dateStr, timezone) {\n                var dateTz = FORMATTERS.timezone.date(dateStr, timezone || FORMATTERS.timezone.currentTimezone().name);\n                return dateTz.tz('Etc/UTC').format(SERVER_DATE + ' ' + SERVER_TIME + ' [UTC]');\n            },\n            dateInServerFormat: function(dateStr, timezone) {\n                if (/^\\s*$/.test(dateStr)) {\n                    return dateStr;\n                }\n\n                let parsed;\n                if (_.isNumber(dateStr)) {\n                    parsed = moment(new Date(dateStr))\n                } else {\n                    parsed = moment(dateStr, MOMENT_FORMAT)\n                }\n\n                return parsed ? parsed.tz(timezone) : parsed\n            },\n            date: function(dateStr, timezone) {\n                if (/^\\s*$/.test(dateStr)) {\n                    return dateStr;\n                }\n                return _.isNumber(dateStr) ?\n                    moment.tz(dateStr, timezone) :\n                    moment.tz(dateStr, dateFormat + ' ' + timeFormat, timezone);\n            },\n            offsetDisplay: function(offsetMinutes) {\n                var negative = offsetMinutes < 0,\n                    offsetMinutesAbs = Math.abs(offsetMinutes),\n                    hours = Math.floor(offsetMinutesAbs / 60),\n                    minutes = Math.floor(offsetMinutesAbs % 60);\n\n                if (('' + hours).length === 1) {\n                    hours = '0' + hours;\n                }\n                if (('' + minutes).length === 1) {\n                    minutes = '0' + minutes;\n                }\n\n                return (negative ? '-' : '+') + hours + ':' + minutes;\n            },\n            list: function() {\n                return _.chain(jstz.olson.timezones)\n                    .map(function(name, key) {\n                        var components = key.split(','),\n                            offsetMinutes = parseInt(components[0], 10),\n                            dst = components.length > 1 && components[1] === '1';\n\n                        return [\n                            name,\n                            {\n                                offset: offsetMinutes,\n                                offsetDisplay: FORMATTERS.timezone.offsetDisplay(offsetMinutes),\n                                name: name,\n                                dst: dst\n                            }\n                        ];\n                    })\n                    .object()\n                    .value();\n            },\n\n            lookupTimezone: function(name, withOffsetForDate) {\n                var list = FORMATTERS.timezone.list(),\n                    tz = list[name];\n\n                if (withOffsetForDate && withOffsetForDate.getTime) {\n                    withOffsetForDate = withOffsetForDate.getTime();\n                }\n\n                if (!withOffsetForDate || isNaN(withOffsetForDate)) {\n                    withOffsetForDate = Date.now();\n                }\n\n                var momentZone = moment.tz.zone(name);\n                if (!momentZone) {\n                    throw new Error('Could not find timezone \"' + name + '\"');\n                }\n                var offset = momentZone.utcOffset(withOffsetForDate) * -1,\n                    tzInfo = {\n                        tzOffset: offset,\n                        tzAbbr: momentZone.abbr(withOffsetForDate),\n                        tzOffsetDisplay: FORMATTERS.timezone.offsetDisplay(offset)\n                    };\n\n                return $.extend({}, tz, tzInfo);\n            },\n\n            currentTimezone: function() {\n                if (!FORMATTERS.timezone._currentTimezone) {\n                    const prefs = FORMATTERS.timezone.getPreferences();\n                    if (prefs.detect) {\n                        FORMATTERS.timezone._currentTimezone = FORMATTERS.timezone.lookupTimezone(jstz.determine().name());\n                    } else {\n                        FORMATTERS.timezone._currentTimezone = FORMATTERS.timezone.lookupTimezone(prefs.timeZone);\n                    }\n                }\n                return FORMATTERS.timezone._currentTimezone;\n            },\n\n            setCurrentTimezone: function(tz) {\n                FORMATTERS.timezone._currentTimezone = tz;\n            },\n\n            getPreferences: function () {\n                if (openlumifyData\n                    && openlumifyData.currentUser\n                    && openlumifyData.currentUser.uiPreferences\n                    && 'org.openlumify.timezone' in openlumifyData.currentUser.uiPreferences) {\n                    try {\n                        return JSON.parse(openlumifyData.currentUser.uiPreferences['org.openlumify.timezone']);\n                    } catch(e) {\n                        console.error('could not parse timezone preferences', e);\n                    }\n                }\n                const detect = 'timezone.defaults.detect' in configProperties ? P.bool.parse(configProperties['timezone.defaults.detect']) : true;\n                return {\n                    detect: detect,\n                    timeZone: detect ? jstz.determine().name() : (configProperties['timezone.defaults.timezone'] || 'UTC')\n                };\n            }\n        }\n    };\n\n    FORMATTERS.string.palantirPrettyPrint = FORMATTERS.string.prettyPrint;\n\n    FORMATTERS.date.resetToDefaultDateFormat();\n\n    return FORMATTERS;\n});\n"]}