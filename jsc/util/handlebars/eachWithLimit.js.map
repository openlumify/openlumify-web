{"version":3,"sources":["../../../js/util/handlebars/eachWithLimit.js"],"names":["define","Handlebars","registerHelper","context","options","fn","inverse","limit","hash","i","ret","data","isNaN","Error","Utils","isFunction","call","createFrame","isArray","j","length","index","first","last","hidden","showButton"],"mappings":"yOAAAA,OAAO,CAAC,YAAD,CAAP,CAAuB,SAASC,UAAT,CAAqB,CACxC,aAIA,MAAOA,YAAWC,cAAX,CAA0B,eAA1B,CAA2C,SAASC,OAAT,CAAkBC,OAAlB,CAA2B,CACzE,GAAIC,IAAKD,QAAQC,EAAjB,CACIC,QAAUF,QAAQE,OADtB,CAEIC,MAAQH,QAAQI,IAAR,CAAaD,KAFzB,CAGIE,EAAI,CAHR,CAIIC,IAAM,EAJV,CAKIC,IALJ,CAOA,GAAIC,MAAML,KAAN,CAAJ,CAAkB,CACd,KAAM,IAAIM,MAAJ,CAAU,0BAAV,CAAN,CACH,CAED,GAAIZ,WAAWa,KAAX,CAAiBC,UAAjB,CAA4BZ,OAA5B,CAAJ,CAA0C,CACtCA,QAAUA,QAAQa,IAAR,CAAa,IAAb,CAAV,CACH,CAEDL,KAAOV,WAAWgB,WAAX,CAAuBb,QAAQO,IAAR,EAAgB,EAAvC,CAAP,CAEA,GAAIR,SAAW,OAAOA,QAAP,mCAAOA,OAAP,KAAmB,QAAlC,CAA4C,CACxC,GAAIF,WAAWa,KAAX,CAAiBI,OAAjB,CAAyBf,OAAzB,CAAJ,CAAuC,CACnC,IAAK,GAAIgB,GAAIhB,QAAQiB,MAArB,CAA6BX,EAAIU,CAAjC,CAAoCV,GAApC,CAAyC,CACrC,GAAIE,IAAJ,CAAU,CACNA,KAAKU,KAAL,CAAaZ,CAAb,CACAE,KAAKW,KAAL,CAAcb,IAAM,CAApB,CACAE,KAAKY,IAAL,CAAad,IAAON,QAAQiB,MAAR,CAAiB,CAArC,CACAT,KAAKa,MAAL,CAAcf,GAAKF,KAAnB,CACAI,KAAKc,UAAL,CAAkBd,KAAKY,IAAL,EAAaZ,KAAKa,MAApC,CACH,CACDd,IAAMA,IAAML,GAAGF,QAAQM,CAAR,CAAH,CAAe,CAAEE,KAAMA,IAAR,CAAf,CAAZ,CACH,CACJ,CAXD,IAWO,CACH,KAAM,IAAIE,MAAJ,CAAU,kCAAV,CAAN,CACH,CACJ,CAED,GAAIJ,IAAM,CAAV,CAAa,CACTC,IAAMJ,QAAQ,IAAR,CAAN,CACH,CAED,MAAOI,IAAP,CACH,CAxCM,CAAP,CA0CH,CA/CD","file":"eachWithLimit.js","sourcesContent":["define(['handlebars'], function(Handlebars) {\n    'use strict';\n\n    // Modified version of handlebars `each`\n\n    return Handlebars.registerHelper('eachWithLimit', function(context, options) {\n        var fn = options.fn,\n            inverse = options.inverse,\n            limit = options.hash.limit,\n            i = 0,\n            ret = '',\n            data;\n\n        if (isNaN(limit)) {\n            throw new Error('limit option is required');\n        }\n\n        if (Handlebars.Utils.isFunction(context)) {\n            context = context.call(this);\n        }\n\n        data = Handlebars.createFrame(options.data || {});\n\n        if (context && typeof context === 'object') {\n            if (Handlebars.Utils.isArray(context)) {\n                for (var j = context.length; i < j; i++) {\n                    if (data) {\n                        data.index = i;\n                        data.first = (i === 0);\n                        data.last = (i === (context.length - 1));\n                        data.hidden = i >= limit;\n                        data.showButton = data.last && data.hidden;\n                    }\n                    ret = ret + fn(context[i], { data: data });\n                }\n            } else {\n                throw new Error('Array required for eachWithLimit');\n            }\n        }\n\n        if (i === 0) {\n            ret = inverse(this);\n        }\n\n        return ret;\n    });\n\n});\n"]}