{"version":3,"sources":["../../js/util/promise.js"],"names":["global","define","P","_","Promise","config","cancellation","longStackTraces","openlumifyEnvironment","dev","warnings","wForgottenReturn","addProgress","addTimeout","addRequire","registerUnhandledRejection","prototype","progress","_progressCallbacks","push","console","warn","OldPromise","callback","reject","that","f","arguments","updateProgress","apply","then","catch","percent","forEach","c","all","map","race","resolve","try","timeout","millis","fulfill","setTimeout","require","deps","Array","slice","call","onCancel","filter","isString","addEventListener","e","preventDefault","detail","reason"],"mappings":"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","file":"promise.js","sourcesContent":["/**\n * Add some promise helpers, done, finally, and progress\n *\n * Example:\n *\n *  var p = new Promise(function(f, r) {\n *      var duration = 4,\n *          startTime = Date.now(),\n *          t = setInterval(function() {\n *              var now = Date.now(),\n *                  dt = (now - startTime) / (duration * 1000);\n\n *              if (dt < 1.0) {\n *                  f.updateProgress(dt);\n *              } else {\n *                  f(true)\n *              }\n *          }, 16);\n *  }).progress(function(percent) {\n *      console.log('Updated', percent);\n *  }).then(function() {\n *      console.log('finished');\n *  }).finally(function() {\n *      console.log('finally')\n *  })\n */\n(function(global) {\n    'use strict';\n\n    define([\n        'bluebird',\n        'underscore'\n    ], function(P, _) {\n\n        var Promise = P || global.Promise;\n\n        if (P) {\n            Promise.config({\n                cancellation: true,\n                longStackTraces: openlumifyEnvironment.dev,\n                warnings: {\n                    wForgottenReturn: false\n                }\n            });\n        }\n\n        addProgress();\n        addTimeout();\n        addRequire();\n        registerUnhandledRejection();\n\n        global.Promise = Promise;\n        return Promise;\n\n        /*eslint no-extend-native:off */\n        function addProgress() {\n            if (typeof Promise.prototype.progress !== 'function') {\n                Promise.prototype.progress = function(progress) {\n                    this._progressCallbacks = this._progressCallbacks || [];\n                    this._progressCallbacks.push(progress);\n                    return this;\n                };\n            } else console.warn('Native implementation of progress');\n\n            // Wrap Promise constructor to add progress support\n            var OldPromise = Promise;\n            Promise = function(callback) {\n\n                var reject,\n                    that = new OldPromise(function() {\n                    // Update progress is a function on fulfill function\n                    var f = arguments[0];\n                    f.updateProgress = updateProgress;\n\n                    callback.apply(null, arguments);\n                });\n\n                that\n                    .then(function() {\n                        updateProgress(1);\n                    })\n                    .catch(function() {});\n\n                return that;\n\n                function updateProgress(percent) {\n                    if (that._progressCallbacks) {\n                        that._progressCallbacks.forEach(function(c) {\n                            c(percent || 0);\n                        })\n                    }\n                }\n            }\n\n            Promise.all = OldPromise.all;\n            Promise.map = OldPromise.map;\n            Promise.race = OldPromise.race;\n            Promise.reject = OldPromise.reject;\n            Promise.resolve = OldPromise.resolve;\n            Promise.try = OldPromise.try;\n            Promise.prototype = OldPromise.prototype;\n        }\n\n        function addTimeout() {\n            if (typeof Promise.timeout !== 'function') {\n                Promise.timeout = function(millis) {\n                    return new Promise(function(fulfill) {\n                        setTimeout(fulfill, millis);\n                    });\n                }\n            } else console.warn('Native implementation of timeout');\n        }\n\n        function addRequire() {\n            if (typeof Promise.prototype.require !== 'function') {\n                Promise.require = function() {\n                    var deps = Array.prototype.slice.call(arguments, 0);\n\n                    return new Promise(function(fulfill, reject, onCancel) {\n                        onCancel(function() {\n                        })\n                        require(_.filter(deps, _.isString), fulfill, reject);\n                    });\n                };\n            } else console.warn('Native implementation of require');\n        }\n\n        function registerUnhandledRejection() {\n            global.addEventListener('unhandledrejection', function(e) {\n                // See Promise.onPossiblyUnhandledRejection for parameter documentation\n                e.preventDefault();\n                // Causes better stack traces (source map support) over console.log\n                if (e && e.detail && e.detail.reason) throw e.detail.reason;\n                else if (e && e.reason) throw e.reason;\n                else throw e;\n            });\n        }\n\n    });\n})(this);\n"]}