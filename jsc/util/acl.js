var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};define(['util/withDataRequest'],function(withDataRequest){'use strict';var ACL_ALLOW_ALL={addable:true,updateable:true,deleteable:true};return{getPropertyAcls:function getPropertyAcls(element){var elements=Array.isArray(element)?element:[element];return Promise.map(elements,function(element){var propertiesPromise=[];if(element.type==='vertex'){propertiesPromise=withDataRequest.dataRequest('ontology','propertiesByConceptId',element.conceptType);}else{propertiesPromise=withDataRequest.dataRequest('ontology','propertiesByRelationship',element.label);}return propertiesPromise;}).then(function(elementsProperties){var ontologyProperties=_.chain(elementsProperties).map(function(properties){return properties.list;}).flatten().uniq(function(p){return p.title;}).value();return mergeElementPropertyAcls(ontologyPropertiesToAclProperties(ontologyProperties));});function ontologyPropertiesToAclProperties(properties){return properties.map(function(property){return{key:null,name:property.title,addable:property.addable,updateable:property.updateable,deleteable:property.deleteable};});}function mergeElementPropertyAcls(propertyAcls){elements.forEach(function(e){e.acl.propertyAcls.forEach(function(elementPropertyAcl){var matchIndex=propertyAcls.findIndex(function(p){var key=elementPropertyAcl.key||null;return p.name===elementPropertyAcl.name&&p.key===key;});if(matchIndex<0){propertyAcls.push(elementPropertyAcl);}else{propertyAcls[matchIndex]=_.extend(propertyAcls[matchIndex],elementPropertyAcl);}});});return propertyAcls;}},findPropertyAcl:function findPropertyAcl(propertiesAcl,propName,propKey){var props=_.where(propertiesAcl,{name:propName,key:propKey});if(props.length===0){var propsByName=_.where(propertiesAcl,{name:propName,key:null});if(propsByName.length===0){propsByName.push(_extends({name:propName,key:propKey},ACL_ALLOW_ALL));}props=propsByName;}if(props.length!==1){throw new Error('more than one ACL property with the same name defined "'+propName+':'+propKey+'" length: '+props.length);}return props[0];}};});
//# sourceMappingURL=acl.js.map
