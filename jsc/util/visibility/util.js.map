{"version":3,"sources":["../../../js/util/visibility/util.js"],"names":["define","registry","documentExtensionPoint","e","_","isString","editorComponentPath","viewerComponentPath","defaultVisibility","point","visibilityExtensions","extensionsForPoint","components","editor","undefined","viewer","setComponent","type","Component","length","registerExtension","console","warn","promises","Promise","require","then","partial","internalAttach","node","attrs","$","teardownComponent","attachTo","attachComponent","promise","resolve","C"],"mappings":"AAAAA,OAAO,CAAC,gCAAD,CAAmC,cAAnC,CAAP,CAA2D,SAASC,QAAT,CAAmB,CAC1E,aAUAA,SAASC,sBAAT,CAAgC,2BAAhC,CACI,+DADJ,CAEI,SAASC,CAAT,CAAY,CACR,MAAOC,GAAEC,QAAF,CAAWF,EAAEG,mBAAb,GACHF,EAAEC,QAAF,CAAWF,EAAEI,mBAAb,CADJ,CAEH,CALL,CAMI,kEANJ,EASA,GAAIC,mBAAoB,CAChBF,oBAAqB,8BADL,CAEhBC,oBAAqB,8BAFL,CAAxB,CAIIE,MAAQ,2BAJZ,CAKIC,qBAAuBT,SAASU,kBAAT,CAA4BF,KAA5B,CAL3B,CAMIG,WAAa,CACTC,OAAQC,SADC,CAETC,OAAQD,SAFC,CANjB,CAUIE,aAAe,QAAfA,aAAe,CAASC,IAAT,CAAeC,SAAf,CAA0B,CACrCN,WAAWK,IAAX,EAAmBC,SAAnB,CACH,CAZL,CAeA,GAAIR,qBAAqBS,MAArB,GAAgC,CAApC,CAAuC,CACnClB,SAASmB,iBAAT,CAA2BX,KAA3B,CAAkCD,iBAAlC,EACAE,qBAAuB,CAACF,iBAAD,CAAvB,CACH,CAED,GAAIE,qBAAqBS,MAArB,CAA8B,CAAlC,CAAqC,CACjCE,QAAQC,IAAR,CAAa,uCAAb,CAAsDZ,oBAAtD,EACH,CAED,GAAIa,UAAW,CACPV,OAAQW,QAAQC,OAAR,CACJf,qBAAqB,CAArB,EAAwBJ,mBAAxB,EAA+CE,kBAAkBF,mBAD7D,EAENoB,IAFM,CAEDtB,EAAEuB,OAAF,CAAUX,YAAV,CAAwB,QAAxB,CAFC,CADD,CAIPD,OAAQS,QAAQC,OAAR,CACJf,qBAAqB,CAArB,EAAwBH,mBAAxB,EAA+CC,kBAAkBD,mBAD7D,EAENmB,IAFM,CAEDtB,EAAEuB,OAAF,CAAUX,YAAV,CAAwB,QAAxB,CAFC,CAJD,CAAf,CAQIY,eAAiB,QAAjBA,eAAiB,CAASV,SAAT,CAAoBW,IAApB,CAA0BC,KAA1B,CAAiC,CAC9CC,EAAEF,IAAF,EAAQG,iBAAR,CAA0Bd,SAA1B,EACAA,UAAUe,QAAV,CAAmBJ,IAAnB,CAAyBC,KAAzB,EACH,CAXL,CAaA,MAAO,CACHI,gBAAiB,yBAASjB,IAAT,CAAeY,IAAf,CAAqBC,KAArB,CAA4B,CACzC,GAAIK,QAAJ,CACA,GAAIvB,WAAWK,IAAX,CAAJ,CAAsB,CAClBW,eAAehB,WAAWK,IAAX,CAAf,CAAiCY,IAAjC,CAAuCC,KAAvC,EACAK,QAAUX,QAAQY,OAAR,EAAV,CACH,CAHD,IAGO,CACHD,QAAUZ,SAASN,IAAT,EAAeS,IAAf,CAAoB,SAASW,CAAT,CAAY,CACtCT,eAAeS,CAAf,CAAkBR,IAAlB,CAAwBC,KAAxB,EACH,CAFS,CAAV,CAGH,CACD,MAAOK,QAAP,CACH,CAZE,CAAP,CAcH,CAvED","file":"util.js","sourcesContent":["define(['configuration/plugins/registry', 'util/promise'], function(registry) {\n    'use strict';\n\n    /**\n     * Plugin to configure the user interface for displaying and editing visibility authorization strings.\n     *\n     * The visibility component requires two FlightJS components registered for viewing and editing:\n     *\n     * @param {string} editorComponentPath The path to {@link org.openlumify.visibility~Editor} component\n     * @param {string} viewerComponentPath The path to {@link org.openlumify.visibility~Viewer} component\n     */\n    registry.documentExtensionPoint('org.openlumify.visibility',\n        'Implement custom interface for visibility display and editing',\n        function(e) {\n            return _.isString(e.editorComponentPath) ||\n                _.isString(e.viewerComponentPath)\n        },\n        'http://docs.openlumify.org/extension-points/front-end/visibility'\n    );\n\n    var defaultVisibility = {\n            editorComponentPath: 'util/visibility/default/edit',\n            viewerComponentPath: 'util/visibility/default/view'\n        },\n        point = 'org.openlumify.visibility',\n        visibilityExtensions = registry.extensionsForPoint(point),\n        components = {\n            editor: undefined,\n            viewer: undefined\n        },\n        setComponent = function(type, Component) {\n            components[type] = Component;\n        };\n\n\n    if (visibilityExtensions.length === 0) {\n        registry.registerExtension(point, defaultVisibility);\n        visibilityExtensions = [defaultVisibility];\n    }\n\n    if (visibilityExtensions.length > 1) {\n        console.warn('Multiple visibility extensions loaded', visibilityExtensions);\n    }\n\n    var promises = {\n            editor: Promise.require(\n                visibilityExtensions[0].editorComponentPath || defaultVisibility.editorComponentPath\n            ).then(_.partial(setComponent, 'editor')),\n            viewer: Promise.require(\n                visibilityExtensions[0].viewerComponentPath || defaultVisibility.viewerComponentPath\n            ).then(_.partial(setComponent, 'viewer'))\n        },\n        internalAttach = function(Component, node, attrs) {\n            $(node).teardownComponent(Component);\n            Component.attachTo(node, attrs);\n        };\n\n    return {\n        attachComponent: function(type, node, attrs) {\n            var promise;\n            if (components[type]) {\n                internalAttach(components[type], node, attrs);\n                promise = Promise.resolve();\n            } else {\n                promise = promises[type].then(function(C) {\n                    internalAttach(C, node, attrs);\n                });\n            }\n            return promise;\n        }\n    };\n});\n"]}