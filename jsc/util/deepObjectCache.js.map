{"version":3,"sources":["../../js/util/deepObjectCache.js"],"names":["define","ValueMap","map","prototype","get","key","set","value","delete","DeepObjectCache","getOrUpdate","clear","window","Error","rootMap","fn","args","_","isFunction","length","createCache","_getOrUpdate","reevaluate","apply","isCache","obj","WeakMap","isObject","isString","cache","keyObjects","nextKey","shift","nextObject"],"mappings":"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","file":"deepObjectCache.js","sourcesContent":["define([], function() {\n\n    // WeakMap API, but for storing value types\n    function ValueMap() {\n        this.map = {};\n    }\n    ValueMap.prototype.get = function(key) {\n        return this.map[key];\n    }\n    ValueMap.prototype.set = function(key, value) {\n        this.map[key] = value;\n    }\n    ValueMap.prototype.delete = function(key) {\n        delete this.map[key];\n    }\n\n    DeepObjectCache.prototype.getOrUpdate = getOrUpdate;\n    DeepObjectCache.prototype.clear = clear;\n\n    return DeepObjectCache;\n\n    /*\n     * Cache that uses weak maps to cache results of functions given object\n     * arguments.\n     *\n     * Useful for caching calls to registry extension functions given arguments.\n     *\n     * Arguments can be objects, or primitives (strings, numbers, booleans.)\n     *\n     * Input objects must be immutable otherwise changes won't be detected /\n     * reevaluated. Comparisons are done using `===`, not `_.isEqual`.\n     *\n     *     var c = new DeepObjectCache();\n     *     c.getOrUpdate(expensiveFn, input1, input2);\n     *     c.clear()\n     *     // Calls expensiveFn(input1, input2) once until inputs or arity changes\n     */\n    function DeepObjectCache() {\n        if (this === window) throw new Error('Must instantiate cache with new')\n    }\n\n    function clear() {\n        if (this.rootMap) {\n            this.rootMap = null;\n        }\n    }\n\n    function getOrUpdate(fn, ...args) {\n        if (!_.isFunction(fn)) throw new Error('fn must be a function');\n        if (!args.length) throw new Error('Must have at least one argument');\n\n        if (!this.rootMap) this.rootMap = createCache(args[0]);\n\n        return _getOrUpdate(this.rootMap, [fn, ...args], reevaluate)\n\n        function reevaluate() {\n            return fn.apply(null, args);\n        }\n    }\n\n    function isCache(obj) {\n        return obj instanceof WeakMap || obj instanceof ValueMap;\n    }\n\n    function createCache(obj) {\n        return _.isObject(obj) && !_.isString(obj) ? new WeakMap() : new ValueMap();\n    }\n\n    function _getOrUpdate(cache, keyObjects, reevaluate) {\n        if (keyObjects.length === 0) {\n            return cache\n        }\n\n        const nextKey = keyObjects.shift();\n        let nextObject = cache.get(nextKey);\n        if (nextObject) {\n            // Check for arity changes and clear\n            if (nextObject instanceof WeakMap && keyObjects.length === 0) {\n                nextObject = reevaluate();\n            } else if (!isCache(nextObject) && keyObjects.length) {\n                cache.delete(nextKey)\n                nextObject = createCache(nextKey);\n            }\n        } else {\n            nextObject = keyObjects.length ? createCache(keyObjects[0]) : reevaluate();\n        }\n\n        cache.set(nextKey, nextObject);\n\n        return _getOrUpdate(nextObject, keyObjects, reevaluate);\n    }\n})\n"]}