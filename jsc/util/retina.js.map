{"version":3,"sources":["../../js/util/retina.js"],"names":["define","Retina","self","properties","split","zoomSvg","getZoomRatio","document","createElementNS","setAttribute","style","position","left","width","height","body","appendChild","currentScale","getRatio","window","devicePixelRatio","updateRatio","newRatio","$","trigger","observeRatioChanges","callback","matchMedia","addListener","onRatioChange","pixelsToPoints","x","y","obj","forEach","propertyName","pointsToPixels","bind"],"mappings":"AACAA,OAAO,EAAP,CAAW,UAAW,CAClB,aAEA,QAASC,OAAT,EAAkB,CAEd,GAAIC,MAAO,IAAX,CACIC,WAAa,YAAYC,KAAZ,CAAkB,GAAlB,CADjB,CAEIC,OAFJ,CAGIC,aAAe,QAAfA,aAAe,EAAW,CACtB,GAAI,CAACD,OAAL,CAAc,CACVA,QAAUE,SAASC,eAAT,CAAyB,4BAAzB,CAAuD,KAAvD,CAAV,CACAH,QAAQI,YAAR,CAAqB,OAArB,CAA8B,4BAA9B,EACAJ,QAAQI,YAAR,CAAqB,SAArB,CAAgC,KAAhC,EACAJ,QAAQK,KAAR,CAAcC,QAAd,CAAyB,UAAzB,CACAN,QAAQK,KAAR,CAAcE,IAAd,CAAqB,SAArB,CACAP,QAAQK,KAAR,CAAcG,KAAd,CAAsB,KAAtB,CACAR,QAAQK,KAAR,CAAcI,MAAd,CAAuB,KAAvB,CACAP,SAASQ,IAAT,CAAcC,WAAd,CAA0BX,OAA1B,EACH,CACD,MAAOA,SAAQY,YAAf,CACH,CAfL,CAgBIC,SAAW,QAAXA,SAAW,EAAW,CAClB,MAAO,CAAC,oBAAsBC,OAAtB,CAA+BC,gBAA/B,CAAkD,CAAnD,EAAwDd,cAA/D,CACH,CAlBL,CAmBIe,YAAc,QAAdA,YAAc,CAASC,QAAT,CAAmB,CAC7BpB,KAAKkB,gBAAL,CAAwBE,QAAxB,CACAC,EAAEhB,QAAF,EAAYiB,OAAZ,CAAoB,yBAApB,CAA+C,CAAEJ,iBAAkBE,QAApB,CAA/C,EACH,CAtBL,CAuBIG,oBAAsB,QAAtBA,oBAAsB,CAASC,QAAT,CAAmB,CACrC,GAAI,cAAgBP,OAApB,CAA4B,CACxBQ,WAAW,gCAAX,EAA6CC,WAA7C,CAAyDF,QAAzD,EACH,CACJ,CA3BL,CA6BA,KAAKN,gBAAL,CAAwBF,UAAxB,CACA,KAAKW,aAAL,CAAqB,UAAW,CAC5BR,YAAYH,UAAZ,EACH,CAFD,CAIA,KAAKY,cAAL,CAAsB,SAASnB,QAAT,CAAmB,CACrC,GAAI,CAACA,QAAL,CAAe,CACX,MAAO,CACHoB,EAAG,CADA,CAEHC,EAAG,CAFA,CAAP,CAIH,CAED,GAAIC,KAAM,EAAV,CACA9B,WAAW+B,OAAX,CAAmB,SAASC,YAAT,CAAuB,CACtC,GAAIA,eAAgBxB,SAApB,CAA8B,CAC1BsB,IAAIE,YAAJ,EAAoBxB,SAASwB,YAAT,EAAyBjC,KAAKkB,gBAAlD,CACH,CACJ,CAJD,EAMA,MAAOa,IAAP,CACH,CAhBD,CAkBA,KAAKG,cAAL,CAAsB,SAASzB,QAAT,CAAmB,CACrC,GAAI,CAACA,QAAL,CAAe,CACX,MAAO,CACHoB,EAAG,CADA,CAEHC,EAAG,CAFA,CAAP,CAIH,CAED,GAAIC,KAAM,EAAV,CACA9B,WAAW+B,OAAX,CAAmB,SAASC,YAAT,CAAuB,CACtC,GAAIA,eAAgBxB,SAApB,CAA8B,CAC1BsB,IAAIE,YAAJ,EAAoBxB,SAASwB,YAAT,EAAyBjC,KAAKkB,gBAAlD,CACH,CACJ,CAJD,EAMA,MAAOa,IAAP,CACH,CAhBD,CAkBAR,oBAAoB,KAAKI,aAAL,CAAmBQ,IAAnB,CAAwB,IAAxB,CAApB,EACH,CAED,MAAO,IAAIpC,OAAJ,EAAP,CACH,CA/ED","file":"retina.js","sourcesContent":["\ndefine([], function() {\n    'use strict';\n\n    function Retina() {\n\n        var self = this,\n            properties = 'x y z w h'.split(' '),\n            zoomSvg,\n            getZoomRatio = function() {\n                if (!zoomSvg) {\n                    zoomSvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n                    zoomSvg.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n                    zoomSvg.setAttribute('version', '1.1');\n                    zoomSvg.style.position = 'absolute';\n                    zoomSvg.style.left = '-9999px';\n                    zoomSvg.style.width = '1px';\n                    zoomSvg.style.height = '1px';\n                    document.body.appendChild(zoomSvg);\n                }\n                return zoomSvg.currentScale;\n            },\n            getRatio = function() {\n                return ('devicePixelRatio' in window ? devicePixelRatio : 1) / getZoomRatio();\n            },\n            updateRatio = function(newRatio) {\n                self.devicePixelRatio = newRatio;\n                $(document).trigger('devicePixelRatioChanged', { devicePixelRatio: newRatio });\n            },\n            observeRatioChanges = function(callback) {\n                if ('matchMedia' in window) {\n                    matchMedia('(-webkit-device-pixel-ratio:1)').addListener(callback);\n                }\n            };\n\n        this.devicePixelRatio = getRatio();\n        this.onRatioChange = function() {\n            updateRatio(getRatio());\n        };\n\n        this.pixelsToPoints = function(position) {\n            if (!position) {\n                return {\n                    x: 0,\n                    y: 0\n                };\n            }\n\n            var obj = {};\n            properties.forEach(function(propertyName) {\n                if (propertyName in position) {\n                    obj[propertyName] = position[propertyName] / self.devicePixelRatio;\n                }\n            })\n\n            return obj;\n        };\n\n        this.pointsToPixels = function(position) {\n            if (!position) {\n                return {\n                    x: 0,\n                    y: 0\n                };\n            }\n\n            var obj = {};\n            properties.forEach(function(propertyName) {\n                if (propertyName in position) {\n                    obj[propertyName] = position[propertyName] * self.devicePixelRatio;\n                }\n            })\n\n            return obj;\n        };\n\n        observeRatioChanges(this.onRatioChange.bind(this));\n    }\n\n    return new Retina();\n});\n"]}