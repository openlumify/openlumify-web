{"version":3,"sources":["../../../js/components/ontology/RelationshipForm.jsx"],"names":["define","createReactClass","PropTypes","classNames","ConceptsSelector","Alert","RelationshipForm","propTypes","transformForSubmit","func","isRequired","transformForInput","onCreate","onCancel","displayName","string","getInitialState","getValue","state","defaultValue","props","_","isString","render","error","value","valueForInput","valid","reason","valueForSubmit","disabled","sourceId","i18n","conceptId","showAncestors","onSourceConceptSelected","onDisplayNameChange","invalid","targetId","onTargetConceptSelected","event","setState","target","concept","id","sourceIris","targetIris"],"mappings":"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","file":"RelationshipForm.js","sourcesContent":["define([\n    'create-react-class',\n    'prop-types',\n    'classnames',\n    './ConceptSelector',\n    '../Alert'\n], function(createReactClass, PropTypes, classNames, ConceptsSelector, Alert) {\n\n    const RelationshipForm = createReactClass({\n        propTypes: {\n            transformForSubmit: PropTypes.func.isRequired,\n            transformForInput: PropTypes.func.isRequired,\n            onCreate: PropTypes.func.isRequired,\n            onCancel: PropTypes.func.isRequired,\n            displayName: PropTypes.string\n        },\n        getInitialState() {\n            return {}\n        },\n        getValue() {\n            const { displayName } = this.state;\n            const { displayName: defaultValue } = this.props;\n            return _.isString(displayName) ? displayName : defaultValue;\n        },\n        render() {\n            const { error, transformForSubmit, transformForInput } = this.props;\n\n            const value = this.getValue();\n            const valueForInput = transformForInput(value);\n            const { valid, reason, value: valueForSubmit } = transformForSubmit(value);\n            const disabled = !valid;\n            return (\n                <div className=\"ontology-form\">\n                    { error ? (<Alert error={error} />) : null }\n                    <ConceptsSelector\n                        value={_.isString(this.state.sourceId) ? this.state.sourceId : this.props.sourceId}\n                        placeholder={i18n('ontology.relationship.concept.from')}\n                        filter={{conceptId: this.props.sourceId, showAncestors: true }}\n                        creatable={false}\n                        clearable={false}\n                        onSelected={this.onSourceConceptSelected} />\n\n                    <input type=\"text\"\n                        placeholder={i18n('ontology.form.displayname.placeholder')}\n                        onChange={this.onDisplayNameChange}\n                        title={reason}\n                        className={classNames({ invalid: !valid })}\n                        value={valueForInput} />\n\n                    <ConceptsSelector\n                        value={_.isString(this.state.targetId) ? this.state.targetId : this.props.targetId}\n                        filter={{conceptId: this.props.targetId, showAncestors: true }}\n                        placeholder={i18n('ontology.relationship.concept.to')}\n                        clearable={false}\n                        creatable={false}\n                        onSelected={this.onTargetConceptSelected} />\n\n                    <div className=\"base-select-form-buttons\">\n                        <button onClick={this.props.onCancel}\n                            className=\"btn btn-link btn-small\">{i18n('ontology.form.cancel.button')}</button>\n                        <button disabled={disabled} onClick={this.onCreate}\n                            className=\"btn btn-small btn-primary\">{\n                                disabled ?\n                                    i18n('ontology.form.create.button') :\n                                    i18n('ontology.form.create.value.button', valueForSubmit)\n                            }</button>\n                    </div>\n                </div>\n            )\n        },\n        onDisplayNameChange(event) {\n            this.setState({ displayName: event.target.value });\n        },\n        onSourceConceptSelected(concept) {\n            this.setState({ sourceId: concept.id })\n        },\n        onTargetConceptSelected(concept) {\n            this.setState({ targetId: concept.id })\n        },\n        onCreate() {\n            this.props.onCreate({\n                sourceIris: [this.state.sourceId || this.props.sourceId],\n                targetIris: [this.state.targetId || this.props.targetId],\n                displayName: this.getValue()\n            })\n        }\n    });\n\n    return RelationshipForm;\n});\n\n"]}