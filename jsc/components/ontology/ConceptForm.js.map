{"version":3,"sources":["../../../js/components/ontology/ConceptForm.jsx"],"names":["define","createReactClass","classNames","PropTypes","ConceptsSelector","GlyphSelector","ColorSelector","Alert","ConceptForm","propTypes","transformForSubmit","func","isRequired","transformForInput","onCreate","onCancel","displayName","string","getInitialState","getValue","state","defaultValue","props","_","isString","render","color","value","valueForInput","valid","reason","valueForSubmit","disabled","error","i18n","onDisplayNameChange","invalid","parentConcept","onConceptSelected","onColorSelected","onIconSelected","setState","imgSrc","option","newState","title","event","target","glyphIconHref"],"mappings":"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","file":"ConceptForm.js","sourcesContent":["define([\n    'create-react-class',\n    'classnames',\n    'prop-types',\n    './ConceptSelector',\n    '../field/GlyphSelector',\n    '../field/ColorSelector',\n    '../Alert'\n], function(createReactClass,\n    classNames,\n    PropTypes,\n    ConceptsSelector,\n    GlyphSelector,\n    ColorSelector,\n    Alert) {\n\n    const ConceptForm = createReactClass({\n        propTypes: {\n            transformForSubmit: PropTypes.func.isRequired,\n            transformForInput: PropTypes.func.isRequired,\n            onCreate: PropTypes.func.isRequired,\n            onCancel: PropTypes.func.isRequired,\n            displayName: PropTypes.string\n        },\n        getInitialState() {\n            return {}\n        },\n        getValue() {\n            const { displayName } = this.state;\n            const { displayName: defaultValue } = this.props;\n            return _.isString(displayName) ? displayName : defaultValue;\n        },\n        render() {\n            const { transformForSubmit, transformForInput } = this.props;\n            const { color } = this.state;\n            const value = this.getValue();\n            const valueForInput = transformForInput(value);\n            const { valid, reason, value: valueForSubmit } = transformForSubmit(value);\n            const disabled = !valid;\n            return (\n                <div className=\"ontology-form\">\n                    { this.props.error ? (<Alert error={this.props.error} />) : null }\n                    <input type=\"text\"\n                        placeholder={i18n('ontology.form.displayname.placeholder')}\n                        onChange={this.onDisplayNameChange}\n                        title={reason}\n                        className={classNames({ invalid: !valid })}\n                        value={valueForInput} />\n\n                    <ConceptsSelector\n                        value={this.state.parentConcept}\n                        placeholder={i18n('ontology.concept.inherit.placeholder')}\n                        creatable={false}\n                        onSelected={this.onConceptSelected} />\n\n                    <ColorSelector value={color} onSelected={this.onColorSelected} />\n                    <GlyphSelector\n                        placeholder={i18n('ontology.concept.icon.placeholder')}\n                        search={value} onSelected={this.onIconSelected} />\n\n                    <div className=\"base-select-form-buttons\">\n                        <button onClick={this.props.onCancel}\n                            className=\"btn btn-link btn-small\">{i18n('ontology.form.cancel.button')}</button>\n                        <button disabled={disabled} onClick={this.onCreate}\n                            className=\"btn btn-small btn-primary\">{\n                                disabled ?\n                                    i18n('ontology.form.create.button') :\n                                    i18n('ontology.form.create.value.button', valueForSubmit)\n                            }</button>\n                    </div>\n                </div>\n            )\n        },\n        onColorSelected(color) {\n            this.setState({ color })\n        },\n        onIconSelected(imgSrc) {\n            this.setState({ imgSrc })\n        },\n        onConceptSelected(option) {\n            const newState = { parentConcept: null, color: null };\n            if (option) {\n                newState.color = option.color;\n                newState.parentConcept = option.title;\n            }\n\n            this.setState(newState);\n        },\n        onDisplayNameChange(event) {\n            this.setState({ displayName: event.target.value })\n        },\n        onCreate() {\n            const { parentConcept, color, imgSrc } = this.state;\n            this.props.onCreate({\n                parentConcept: parentConcept,\n                displayName: this.getValue(),\n                glyphIconHref: imgSrc,\n                color: color || 'rgb(0,0,0)'\n            })\n        }\n    });\n\n    return ConceptForm;\n});\n"]}