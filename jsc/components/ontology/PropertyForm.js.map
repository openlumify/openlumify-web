{"version":3,"sources":["../../../js/components/ontology/PropertyForm.jsx"],"names":["define","createReactClass","PropTypes","classNames","ConceptsSelector","RelationshipSelector","Alert","DataTypes","label","i18n","options","type","displayType","transformOptions","_","isArray","dataTypes","length","filtered","map","group","filter","includes","option","DataTypeSelect","props","rest","groups","combined","compact","join","PropertyForm","propTypes","transformForSubmit","func","isRequired","transformForInput","onCreate","onCancel","displayName","string","domain","dataType","arrayOf","getInitialState","getValue","state","defaultValue","isString","componentDidMount","setState","componentWillReceiveProps","nextProps","render","conceptId","relationshipId","error","value","valueForInput","valid","reason","valueForSubmit","disabled","filterDataTypes","onDisplayNameChange","invalid","showAncestors","onDomainSelected","handleTypeChange","title","event","target","relationshipIris","conceptIris","split"],"mappings":"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","file":"PropertyForm.js","sourcesContent":["define([\n    'create-react-class',\n    'prop-types',\n    'classnames',\n    './ConceptSelector',\n    './RelationshipSelector',\n    '../Alert'\n], function(\n    createReactClass,\n    PropTypes,\n    classNames,\n    ConceptsSelector,\n    RelationshipSelector,\n    Alert) {\n\n    const DataTypes = [\n        {\n            label: i18n('ontology.property.dataformat.text'),\n            options: [\n                { type: 'string', label: i18n('ontology.property.dataformat.text.string') },\n                { type: 'string', displayType: 'link', label: i18n('ontology.property.dataformat.text.link') }\n            ]\n        },\n        {\n            label: i18n('ontology.property.dataformat.number'),\n            options: [\n                { type: 'integer', label: i18n('ontology.property.dataformat.number.integer') },\n                { type: 'double', label: i18n('ontology.property.dataformat.number.double') },\n                { type: 'currency', label: i18n('ontology.property.dataformat.number.currency') },\n                { type: 'double', displayType: 'duration', label: i18n('ontology.property.dataformat.number.duration') },\n                { type: 'integer', displayType: 'bytes', label: i18n('ontology.property.dataformat.number.bytes') }\n            ]\n        },\n        {\n            label: i18n('ontology.property.dataformat.date'),\n            options: [\n                { type: 'date', label: i18n('ontology.property.dataformat.date.date') },\n                { type: 'date', displayType: 'dateOnly', label: i18n('ontology.property.dataformat.date.dateOnly') }\n            ]\n        },\n        {\n            label: i18n('ontology.property.dataformat.location'),\n            options: [\n                { type: 'geoLocation', label: i18n('ontology.property.dataformat.location.geoLocation') }\n            ]\n        }\n    ];\n    const transformOptions = dataTypes => {\n        if (_.isArray(dataTypes) && dataTypes.length) {\n            const filtered = DataTypes.map(group => {\n                return { ...group, options: group.options.filter(option => dataTypes.includes(option.type))}\n            })\n            return filtered.filter(group => group.options.length)\n        }\n        return DataTypes;\n    }\n    const DataTypeSelect = function(props) {\n        const { type, dataTypes, ...rest } = props;\n        const groups = transformOptions(dataTypes)\n\n        return (\n            <select value={type || ''} {...rest}>\n                <option value=\"\">{i18n('ontology.property.dataformat.placeholder')}</option>\n                {\n                    groups.map(group => (\n                        <optgroup key={group.label} label={group.label}>\n                            {\n                                group.options.map(option => {\n                                    const { type, displayType, label } = option;\n                                    const combined = _.compact([type, displayType]).join('|');\n                                    return (\n                                        <option key={combined} value={combined}>{label}</option>\n                                    )\n                                })\n                            }\n                        </optgroup>\n                    ))\n                }\n            </select>\n        )\n    }\n    const PropertyForm = createReactClass({\n        propTypes: {\n            transformForSubmit: PropTypes.func.isRequired,\n            transformForInput: PropTypes.func.isRequired,\n            onCreate: PropTypes.func.isRequired,\n            onCancel: PropTypes.func.isRequired,\n            displayName: PropTypes.string,\n            domain: PropTypes.string,\n            type: PropTypes.string,\n            dataType: PropTypes.string,\n            dataTypes: PropTypes.arrayOf(PropTypes.string)\n        },\n        getInitialState() {\n            return {};\n        },\n        getValue() {\n            const { displayName } = this.state;\n            const { displayName: defaultValue } = this.props;\n            return _.isString(displayName) ? displayName : defaultValue;\n        },\n        componentDidMount() {\n            const { domain, type } = this.props;\n            this.setState({ domain, type })\n        },\n        componentWillReceiveProps(nextProps) {\n            if (nextProps.domain !== this.state.domain) {\n                this.setState({ domain: this.props.domain })\n            }\n            if (nextProps.type !== this.state.type) {\n                this.setState({ type: nextProps.type })\n            }\n        },\n        render() {\n            const { domain, type } = this.state;\n            const { conceptId, relationshipId, dataType, dataTypes, error, transformForSubmit, transformForInput } = this.props;\n            const value = this.getValue();\n            const valueForInput = transformForInput(value);\n            const { valid, reason, value: valueForSubmit } = transformForSubmit(value);\n            const disabled = !valid || !type || !domain;\n            const filterDataTypes = dataTypes ? dataTypes : dataType ? [dataType] : null;\n\n            return (\n                <div className=\"ontology-form\">\n                    { error ? (<Alert error={error} />) : null }\n                    <input type=\"text\"\n                        placeholder={i18n('ontology.form.displayname.placeholder')}\n                        onChange={this.onDisplayNameChange}\n                        title={reason}\n                        className={classNames({ invalid: !valid })}\n                        value={valueForInput} />\n\n                    { relationshipId ?\n                        (<RelationshipSelector\n                            value={domain}\n                            creatable={false}\n                            clearable={false}\n                            filter={{ relationshipId, showAncestors: true }}\n                            onSelected={this.onDomainSelected} />) :\n                        (<ConceptsSelector\n                            value={domain}\n                            creatable={false}\n                            clearable={false}\n                            filter={{ conceptId, showAncestors: true }}\n                            onSelected={this.onDomainSelected} />)\n                    }\n\n                    <DataTypeSelect type={type} dataTypes={filterDataTypes} onChange={this.handleTypeChange} />\n\n                    <div className=\"base-select-form-buttons\">\n                        <button onClick={this.props.onCancel}\n                            className=\"btn btn-link btn-small\">{i18n('ontology.form.cancel.button')}</button>\n                        <button disabled={disabled} onClick={this.onCreate}\n                            className=\"btn btn-small btn-primary\">{\n                                disabled ?\n                                    i18n('ontology.form.create.button') :\n                                    i18n('ontology.form.create.value.button', valueForSubmit)\n                            }</button>\n                    </div>\n                </div>\n            )\n        },\n        onDomainSelected(option) {\n            this.setState({ domain: option ? option.title : null })\n        },\n        onDisplayNameChange(event) {\n            this.setState({ displayName: event.target.value })\n        },\n        handleTypeChange(event) {\n            this.setState({ type: event.target.value });\n        },\n        onCreate() {\n            const domain = {};\n            if (this.props.relationshipId) {\n                domain.relationshipIris = [this.state.domain];\n            } else {\n                domain.conceptIris = [this.state.domain];\n            }\n            const [dataType, displayType] = this.state.type.split('|');\n\n            this.props.onCreate({\n                domain,\n                dataType,\n                displayType,\n                displayName: this.getValue()\n            })\n        }\n    });\n\n    return PropertyForm;\n});\n"]}