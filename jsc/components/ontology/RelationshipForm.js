define(['create-react-class','prop-types','classnames','./ConceptSelector','../Alert'],function(createReactClass,PropTypes,classNames,ConceptsSelector,Alert){var RelationshipForm=createReactClass({displayName:'RelationshipForm',propTypes:{transformForSubmit:PropTypes.func.isRequired,transformForInput:PropTypes.func.isRequired,onCreate:PropTypes.func.isRequired,onCancel:PropTypes.func.isRequired,displayName:PropTypes.string},getInitialState:function getInitialState(){return{};},getValue:function getValue(){var displayName=this.state.displayName;var defaultValue=this.props.displayName;return _.isString(displayName)?displayName:defaultValue;},render:function render(){var _props=this.props,error=_props.error,transformForSubmit=_props.transformForSubmit,transformForInput=_props.transformForInput;var value=this.getValue();var valueForInput=transformForInput(value);var _transformForSubmit=transformForSubmit(value),valid=_transformForSubmit.valid,reason=_transformForSubmit.reason,valueForSubmit=_transformForSubmit.value;var disabled=!valid;return React.createElement('div',{className:'ontology-form'},error?React.createElement(Alert,{error:error}):null,React.createElement(ConceptsSelector,{value:_.isString(this.state.sourceId)?this.state.sourceId:this.props.sourceId,placeholder:i18n('ontology.relationship.concept.from'),filter:{conceptId:this.props.sourceId,showAncestors:true},creatable:false,clearable:false,onSelected:this.onSourceConceptSelected}),React.createElement('input',{type:'text',placeholder:i18n('ontology.form.displayname.placeholder'),onChange:this.onDisplayNameChange,title:reason,className:classNames({invalid:!valid}),value:valueForInput}),React.createElement(ConceptsSelector,{value:_.isString(this.state.targetId)?this.state.targetId:this.props.targetId,filter:{conceptId:this.props.targetId,showAncestors:true},placeholder:i18n('ontology.relationship.concept.to'),clearable:false,creatable:false,onSelected:this.onTargetConceptSelected}),React.createElement('div',{className:'base-select-form-buttons'},React.createElement('button',{onClick:this.props.onCancel,className:'btn btn-link btn-small'},i18n('ontology.form.cancel.button')),React.createElement('button',{disabled:disabled,onClick:this.onCreate,className:'btn btn-small btn-primary'},disabled?i18n('ontology.form.create.button'):i18n('ontology.form.create.value.button',valueForSubmit))));},onDisplayNameChange:function onDisplayNameChange(event){this.setState({displayName:event.target.value});},onSourceConceptSelected:function onSourceConceptSelected(concept){this.setState({sourceId:concept.id});},onTargetConceptSelected:function onTargetConceptSelected(concept){this.setState({targetId:concept.id});},onCreate:function onCreate(){this.props.onCreate({sourceIris:[this.state.sourceId||this.props.sourceId],targetIris:[this.state.targetId||this.props.targetId],displayName:this.getValue()});}});return RelationshipForm;});
//# sourceMappingURL=RelationshipForm.js.map
