var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};define(['create-react-class','configuration/plugins/registry'],function(createReactClass,registry){'use strict';var RegistryInjectorHOC=function RegistryInjectorHOC(WrappedComponent,identifiers){if(!_.isArray(identifiers))throw new Error('identifiers must be an array');var WithRegistry=createReactClass({displayName:'RegistryInjectorHOC('+(WrappedComponent.displayName||'Component')+')',componentDidMount:function componentDidMount(){var _this=this;if(identifiers.length===0){console.warn('RegistryInjectorHOC invoked with no identifiers');}$(document).on('extensionsChanged.registryInjector',function(event,_ref){var extensionPoint=_ref.extensionPoint;if(identifiers.includes(extensionPoint)){_this.forceUpdate();}});},componentWillUnmount:function componentWillUnmount(){$(document).off('extensionsChanged.registryInjector');},render:function render(){return React.createElement(WrappedComponent,_extends({ref:'wrapped'},this.props,{registry:registry.extensionsForPoints(identifiers)}));}});return WithRegistry;};RegistryInjectorHOC.registry=registry;return RegistryInjectorHOC;});
//# sourceMappingURL=RegistryInjectorHOC.js.map
