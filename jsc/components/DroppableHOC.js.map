{"version":3,"sources":["../../js/components/DroppableHOC.jsx"],"names":["define","createReactClass","PropTypes","dnd","Events","split","DroppableHOC","WrappedComponent","cls","displayName","propTypes","mimeTypes","arrayOf","string","isRequired","onDrop","func","style","object","getInitialState","componentDidMount","forEach","event","refs","div","addEventListener","console","error","componentWillUnmount","removeEventListener","dataTransferHasValidMimeType","dataTransfer","props","dragover","preventDefault","stopPropagation","dragleave","_","delay","index","dragstack","indexOf","target","splice","length","toggleClass","dragenter","push","drop","pageX","pageY","box","$","closest","getBoundingClientRect","positionTransform","comp","wrapped","droppableTransformPosition","position","identity","x","left","y","top","toggle","state","setState","render"],"mappings":"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","file":"DroppableHOC.js","sourcesContent":["define(['create-react-class', 'prop-types', 'util/dnd'], function(createReactClass, PropTypes, dnd) {\n\n    const Events = 'dragover dragenter dragleave drop'.split(' ');\n    const DroppableHOC = (WrappedComponent, cls) => createReactClass({\n        displayName: `DroppableHOC(${WrappedComponent.displayName || 'Component'})`,\n        propTypes: {\n            mimeTypes: PropTypes.arrayOf(PropTypes.string).isRequired,\n            onDrop: PropTypes.func.isRequired,\n            style: PropTypes.object\n        },\n        getInitialState() {\n            return { cls: '' }\n        },\n        componentDidMount() {\n            Events.forEach(event => {\n                if (event in this) {\n                    this.refs.div.addEventListener(event, this[event], false)\n                } else console.error('No handler for event: ' + event);\n            })\n        },\n        componentWillUnmount() {\n            Events.forEach(event => {\n                if (event in this) {\n                    this.refs.div.removeEventListener(event, this[event])\n                } else console.error('No handler for event: ' + event);\n            })\n        },\n        dataTransferHasValidMimeType(dataTransfer) {\n            return dnd.dataTransferHasValidMimeType(dataTransfer, this.props.mimeTypes)\n        },\n        dragover(event) {\n            const { dataTransfer } = event;\n            if (this.dataTransferHasValidMimeType(dataTransfer)) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n        },\n        dragleave(event) {\n            _.delay(() => {\n                const index = this.dragstack.indexOf(event.target);\n                if (index >= 0) {\n                    this.dragstack.splice(index, 1);\n                }\n                if (!this.dragstack.length) {\n                    this.toggleClass(false);\n                }\n            }, 1);\n        },\n        dragenter(event) {\n            if (!this.dragstack) this.dragstack = [];\n\n            if (!this.dragstack.length) {\n                if (this.dataTransferHasValidMimeType(event.dataTransfer)) {\n                    this.toggleClass(true);\n                }\n            }\n            this.dragstack.push(event.target);\n        },\n        drop(event) {\n            if (!this.dataTransferHasValidMimeType(event.dataTransfer)) {\n                return;\n            }\n            event.preventDefault();\n            event.stopPropagation();\n            this.toggleClass(false);\n\n            const { pageX, pageY } = event;\n            const box = (cls ? $(event.target).closest(cls)[0] : event.target)\n                .getBoundingClientRect();\n\n            var positionTransform, comp = this.refs.wrapped;\n            while (!positionTransform) {\n                if (!comp) break;\n                if (comp && comp.droppableTransformPosition) {\n                    positionTransform = comp.droppableTransformPosition;\n                    break;\n                }\n                comp = comp.refs.wrapped;\n            }\n            const position = (positionTransform || _.identity)({\n                x: pageX - box.left,\n                y: pageY - box.top\n            });\n\n            this.props.onDrop(event, position);\n        },\n        toggleClass(toggle) {\n            const cls = toggle ? 'accepts-draggable' : '';\n            if (this.state.cls !== cls) {\n                this.setState({ cls });\n            }\n        },\n        render() {\n            const { cls } = this.state;\n            const { onDrop, mimeTypes, style = { position: 'relative' }, ...props} = this.props;\n            return (\n                <div ref=\"div\" style={style} className={cls}><WrappedComponent ref=\"wrapped\" {...props} /></div>\n            )\n        }\n    });\n\n    return DroppableHOC\n});\n"]}