{"version":3,"sources":["../../../js/components/field/GlyphSelector.jsx"],"names":["define","createReactClass","PropTypes","VirtualizedSelect","default","GlyphSelector","propTypes","search","string","onSelected","func","isRequired","getInitialState","isLoading","componentDidMount","Promise","require","then","obj","JSON","parse","json","setState","options","list","checkForMatch","componentWillReceiveProps","nextProps","props","state","value","similar","length","option","_","find","label","toLowerCase","indexOf","render","rest","isString","onChange","GlyphOptionRenderer","GlyphValueRenderer","paddingLeft","position","left","top","backgroundImage","backgroundPosition","backgroundSize","width","height","transform","scale","transformOrigin","margin","focusedOption","focusedOptionIndex","focusOption","key","labelKey","optionIndex","selectValue","style","valueArray","className","push","disabled","header","events","onClick","onMouseOver","px","join"],"mappings":"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","file":"GlyphSelector.js","sourcesContent":["define([\n    'create-react-class',\n    'prop-types',\n    'react-virtualized-select'\n], function(\n    createReactClass,\n    PropTypes,\n    { default: VirtualizedSelect }) {\n\n    const GlyphSelector = createReactClass({\n        propTypes: {\n            search: PropTypes.string,\n            onSelected: PropTypes.func.isRequired\n        },\n        getInitialState() {\n            return { isLoading: true };\n        },\n        componentDidMount() {\n            Promise.require('text!../imgc/sprites/glyphicons.json_array').then(json => {\n                var obj = JSON.parse(json);\n                this.setState({ isLoading: false, options: obj.list });\n                this.checkForMatch();\n            })\n        },\n        componentWillReceiveProps(nextProps) {\n            this.checkForMatch(nextProps)\n        },\n        checkForMatch(props) {\n            const { value, options, similar } = this.state;\n            const { search } = props || this.props;\n\n            if (!value && options && search && search.length > 2) {\n                var option = _.find(options, option => option.label.toLowerCase().indexOf(search.toLowerCase()) >= 0);\n                if (option) {\n                    if (option.value !== similar) {\n                        this.setState({ similar: option.value })\n                        this.props.onSelected(option.value);\n                    }\n                } else if (similar) {\n                    this.setState({ similar: null });\n                    this.props.onSelected();\n                }\n            }\n        },\n        render() {\n            const { value = null, options = [], isLoading, similar } = this.state;\n            const { search, ...rest } = this.props;\n\n            return (\n                <VirtualizedSelect\n                    options={options}\n                    simpleValue\n                    clearable\n                    searchable\n                    value={_.isString(value) ? value : similar}\n                    onChange={this.onChange}\n                    optionRenderer={GlyphOptionRenderer}\n                    optionHeight={28}\n                    isLoading={isLoading}\n                    placeholder=\"Select Icon\"\n                    valueRenderer={GlyphValueRenderer}\n                    {...rest}\n                />\n            )\n        },\n        onChange(value) {\n            this.setState({ value: value ? value : '' })\n\n            if (!value) {\n                this.props.onSelected();\n            } else {\n                this.props.onSelected(value)\n            }\n        }\n    });\n\n    return GlyphSelector;\n\n    function GlyphValueRenderer (option) {\n        return (\n            <div style={{ paddingLeft: '33px' }}\n                title={option.label}>\n            <div className=\"icon\" style={{\n                position: 'absolute',\n                left: '9px',\n                top: '50%',\n                backgroundImage: 'url(imgc/sprites/glyphicons.png)',\n                backgroundPosition: option.backgroundPosition,\n                backgroundSize: option.backgroundSize,\n                width: option.width,\n                height: option.height,\n                transform: `scale(${option.scale}) translate(0, -50%)`,\n                transformOrigin: '0 0',\n                margin: '0'\n            }}></div>{option.label}</div>\n        )\n    }\n\n    function GlyphOptionRenderer ({\n        focusedOption, focusedOptionIndex, focusOption,\n        key, labelKey,\n        option, optionIndex, options,\n        selectValue,\n        style,\n        valueArray\n    }) {\n        const className = ['VirtualizedSelectOption']\n        if (option.className) {\n            className.push(option.className);\n        }\n        if (option === focusedOption) {\n            className.push('VirtualizedSelectFocusedOption')\n        }\n        if (option.disabled) {\n            className.push('VirtualizedSelectDisabledOption')\n        }\n        if (option.header) {\n            className.push('VirtualizedSelectHeader');\n        }\n        if (valueArray && valueArray.indexOf(option) >= 0) {\n            className.push('VirtualizedSelectSelectedOption')\n        }\n        const events = option.disabled ? {} : {\n            onClick: () => selectValue(option),\n            onMouseOver: () => focusOption(option)\n        };\n        const { px } = option;\n\n        return (\n            <div className={className.join(' ')}\n                key={key}\n                style={{ ...style, paddingLeft: '33px' }}\n                title={option[labelKey]}\n                {...events}>\n            <div className=\"icon\" style={{\n                position: 'absolute',\n                left: '7px',\n                backgroundImage: 'url(imgc/sprites/glyphicons.png)',\n                backgroundPosition: option.backgroundPosition,\n                backgroundSize: option.backgroundSize,\n                width: option.width,\n                height: option.height,\n                transform: `scale(${option.scale}) translate(0, -50%)`,\n                transformOrigin: '0 0',\n                top: '50%',\n                margin: '0'\n            }}></div>{option[labelKey]}</div>\n        );\n    }\n});\n"]}