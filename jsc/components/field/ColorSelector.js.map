{"version":3,"sources":["../../../js/components/field/ColorSelector.jsx"],"names":["define","createReactClass","PropTypes","colorjs","CssIdentifier","BLACK","saturation","lightness","shades","s","v","ColorSelector","propTypes","onSelected","func","isRequired","value","string","getDefaultProps","getInitialState","props","componentWillMount","cssIdentifier","componentDidMount","publish","_","debounce","_publish","componentWillReceiveProps","nextProps","state","setState","componentWillUnmount","clearTimeout","_hideTooltip","render","colorTooltip","black","isBlack","color","hue","getHue","colorStyle","style","percent","shade","find","display","onClickBlack","onMouseDownBlack","position","onChange","opacity","left","marginLeft","top","transform","background","update","event","target","toCSSHex","delay","newValue"],"mappings":"AAAAA,OAAO,CACH,oBADG,CAEH,YAFG,CAGH,SAHG,CAAP,CAIG,SAASC,gBAAT,CAA2BC,SAA3B,CAAsCC,OAAtC,CAA+C,CAE9C,GAAIC,eAAgB,CAApB,CACA,GAAMC,OAAQ,YAAd,CACA,GAAMC,YAAa,GAAnB,CACA,GAAMC,WAAY,GAAlB,CACA,GAAMC,QAAS,CACX,CAAEC,EAAG,EAAL,CAASC,EAAG,KAAZ,CADW,CAEX,CAAED,EAAG,EAAL,CAASC,EAAG,QAAZ,CAFW,CAGX,CAAED,EAAG,EAAL,CAASC,EAAG,QAAZ,CAHW,CAIX,CAAED,EAAG,GAAL,CAAUC,EAAG,OAAb,CAJW,CAKX,CAAED,EAAG,GAAL,CAAUC,EAAG,MAAb,CALW,CAMX,CAAED,EAAG,GAAL,CAAUC,EAAG,MAAb,CANW,CAOX,CAAED,EAAG,GAAL,CAAUC,EAAG,QAAb,CAPW,CAQX,CAAED,EAAG,GAAL,CAAUC,EAAG,MAAb,CARW,CASX,CAAED,EAAG,GAAL,CAAUC,EAAG,KAAb,CATW,CAAf,CAWA,GAAMC,eAAgBV,iBAAiB,6BACnCW,UAAW,CACPC,WAAYX,UAAUY,IAAV,CAAeC,UADpB,CAEPC,MAAOd,UAAUe,MAFV,CADwB,CAMnCC,eANmC,2BAMjB,CACd,MAAO,CAAEF,MAAOX,KAAT,CAAP,CACH,CARkC,CAUnCc,eAVmC,2BAUjB,CACd,MAAO,CAAEH,MAAO,KAAKI,KAAL,CAAWJ,KAApB,CAAP,CACH,CAZkC,CAcnCK,kBAdmC,8BAcd,CACjB,KAAKC,aAAL,QAA4BlB,eAA5B,CACH,CAhBkC,CAkBnCmB,iBAlBmC,6BAkBf,CAChB,KAAKC,OAAL,CAAeC,EAAEC,QAAF,CAAW,KAAKC,QAAhB,CAA0B,GAA1B,CAAf,CACH,CApBkC,CAsBnCC,yBAtBmC,oCAsBTC,SAtBS,CAsBE,CACjC,GAAI,KAAKC,KAAL,CAAWd,KAAX,GAAqBa,UAAUb,KAAnC,CAA0C,CACtC,KAAKe,QAAL,CAAc,CAAEf,MAAOa,UAAUb,KAAV,EAAmBX,KAA5B,CAAd,EACH,CACJ,CA1BkC,CA4BnC2B,oBA5BmC,gCA4BZ,CACnBC,aAAa,KAAKC,YAAlB,EACH,CA9BkC,CAgCnCC,MAhCmC,kBAgC1B,YAC2B,KAAKL,KADhC,CACGd,KADH,QACGA,KADH,CACUoB,YADV,QACUA,YADV,CAEL,GAAMC,OAAQ,KAAKC,OAAL,EAAd,CACA,GAAMC,OAAQpC,QAAQa,KAAR,CAAd,CACA,GAAMwB,KAAMD,MAAME,MAAN,EAAZ,CACA,GAAMC,mBAAoBF,GAApB,MAA4BlC,WAAa,GAAzC,OAAkDC,UAAY,GAA9D,MAAN,CACA,GAAMoC,OAAQN,MAAQ,EAAR,uBACP,KAAKf,aADE,uDACiEoB,UADjE,yBAEP,KAAKpB,aAFE,gDAE0DoB,UAF1D,yBAGP,KAAKpB,aAHE,2DAGqEoB,UAHrE,KAAd,CAIA,GAAME,SAAUJ,IAAM,GAAtB,CACA,GAAMK,OAAQR,MAAQ,EAAR,CAAaZ,EAAEqB,IAAF,CAAOtC,MAAP,CAAe,kBAAKgC,KAAM/B,EAAEA,CAAb,EAAf,EAA+BC,CAA1D,CAEA,MACI,4BAAK,GAAI,KAAKY,aAAd,CAA6B,6BAA6Be,MAAQ,OAAR,CAAkB,EAA/C,CAA7B,CAAkF,MAAO,CAAEU,QAAS,MAAX,CAAzF,EACI,2BAAK,MAAM,cAAX,CAA0B,UAAU,OAApC,EACI,8BAAQ,QAAS,KAAKC,YAAtB,CAAoC,YAAa,KAAKC,gBAAtD,iBADJ,CADJ,CAII,2BAAK,MAAM,cAAX,CAA0B,UAAU,UAApC,CAA+C,MAAO,CAACC,SAAU,UAAX,CAAtD,EACI,iCAAQP,KAAR,CADJ,CAEI,6BAAO,MAAOH,GAAd,CAAmB,IAAI,GAAvB,CAA2B,IAAI,KAA/B,CAAqC,KAAK,GAA1C,CAA8C,SAAU,KAAKW,QAA7D,CAAuE,KAAK,OAA5E,EAFJ,CAGMd,OAAS,CAACD,YAAV,CAAyB,IAAzB,CACE,2BAAK,UAAU,gBAAf,CAAgC,MAAO,CACnCgB,QAAS,CAD0B,CAEnCC,KAAMT,QAAU,GAAV,CAAgB,GAFa,CAGnCU,WAAa,CAAC,EAAIV,OAAL,GAAiB,GAAK,CAAtB,EAA2B,EAA5B,CAAkC,IAHX,CAInCW,IAAK,MAJ8B,CAKnCC,UAAW,sBALwB,CAAvC,EAOI,2BAAK,UAAU,eAAf,EAPJ,CAQI,2BAAK,MAAO,CAAEC,WAAY,OAAd,CAAZ,CAAqC,UAAU,eAA/C,EAAgEZ,KAAhE,CARJ,CAJR,CAJJ,CADJ,CAuBH,CApEkC,CAsEnCP,OAtEmC,mBAsEzB,CACN,MAAO,MAAKR,KAAL,CAAWd,KAAX,GAAqBX,KAA5B,CACH,CAxEkC,CA0EnC2C,YA1EmC,wBA0EpB,CACX,GAAI,CAAC,KAAKV,OAAL,EAAL,CAAqB,CACjB,KAAKoB,MAAL,CAAYrD,KAAZ,EACH,CACJ,CA9EkC,CAgFnC4C,gBAhFmC,4BAgFhB,CACf,GAAI,CAAC,KAAKX,OAAL,EAAL,CAAqB,CACjB,KAAKoB,MAAL,CAAYrD,KAAZ,EACH,CACJ,CApFkC,CAsFnC8C,QAtFmC,mBAsF1BQ,KAtF0B,CAsFnB,gBACZ,GAAMpB,OAAQpC,QAAQ,CAAEqC,IAAKmB,MAAMC,MAAN,CAAa5C,KAApB,CAA2BV,qBAA3B,CAAuCC,mBAAvC,CAAR,EAA4DsD,QAA5D,EAAd,CACA,KAAKH,MAAL,CAAYnB,KAAZ,EACAN,aAAa,KAAKC,YAAlB,EACA,GAAI,CAAC,KAAKJ,KAAL,CAAWM,YAAhB,CAA8B,CAC1B,KAAKL,QAAL,CAAc,CAAEK,aAAc,IAAhB,CAAd,EACH,CACD,KAAKF,YAAL,CAAoBT,EAAEqC,KAAF,CAAQ,UAAM,CAC9B,MAAK/B,QAAL,CAAc,CAAEK,aAAc,KAAhB,CAAd,EACH,CAFmB,CAEjB,GAFiB,CAApB,CAGH,CAhGkC,CAkGnCsB,MAlGmC,iBAkG5BK,QAlG4B,CAkGlB,CACb,KAAKhC,QAAL,CAAc,CAAEf,MAAO+C,QAAT,CAAd,EACA,KAAKvC,OAAL,CAAauC,QAAb,EACH,CArGkC,CAuGnCpC,QAvGmC,mBAuG1BoC,QAvG0B,CAuGhB,CACf,KAAK3C,KAAL,CAAWP,UAAX,CAAsBkD,QAAtB,EACH,CAzGkC,CAAjB,CAAtB,CA4GA,MAAOpD,cAAP,CACH,CAlID","file":"ColorSelector.js","sourcesContent":["define([\n    'create-react-class',\n    'prop-types',\n    'colorjs'\n], function(createReactClass, PropTypes, colorjs) {\n\n    let CssIdentifier = 1;\n    const BLACK = 'rgb(0,0,0)';\n    const saturation = 0.7;\n    const lightness = 0.5;\n    const shades = [\n        { s: 21, v: 'Red' },\n        { s: 52, v: 'Orange' },\n        { s: 68, v: 'Yellow' },\n        { s: 154, v: 'Green' },\n        { s: 190, v: 'Teal' },\n        { s: 249, v: 'Blue' },\n        { s: 290, v: 'Purple' },\n        { s: 330, v: 'Pink' },\n        { s: 361, v: 'Red' }\n    ];\n    const ColorSelector = createReactClass({\n        propTypes: {\n            onSelected: PropTypes.func.isRequired,\n            value: PropTypes.string\n        },\n\n        getDefaultProps() {\n            return { value: BLACK };\n        },\n\n        getInitialState() {\n            return { value: this.props.value };\n        },\n\n        componentWillMount() {\n            this.cssIdentifier = `_cs-${CssIdentifier++}`;\n        },\n\n        componentDidMount() {\n            this.publish = _.debounce(this._publish, 100);\n        },\n\n        componentWillReceiveProps(nextProps) {\n            if (this.state.value !== nextProps.value) {\n                this.setState({ value: nextProps.value || BLACK })\n            }\n        },\n\n        componentWillUnmount() {\n            clearTimeout(this._hideTooltip);\n        },\n\n        render() {\n            const { value, colorTooltip } = this.state;\n            const black = this.isBlack();\n            const color = colorjs(value);\n            const hue = color.getHue();\n            const colorStyle = `hsl(${hue}, ${saturation * 100}%, ${lightness * 100}%);`\n            const style = black ? '' : `\n                #${this.cssIdentifier} input[type=range]::-moz-range-thumb { background: ${colorStyle} }\n                #${this.cssIdentifier} input[type=range]::-ms-thumb { background: ${colorStyle} }\n                #${this.cssIdentifier} input[type=range]::-webkit-slider-thumb { background: ${colorStyle} }`;\n            const percent = hue / 360;\n            const shade = black ? '' : _.find(shades, s => hue < s.s).v;\n\n            return (\n                <div id={this.cssIdentifier} className={`color-selector ${black ? 'black' : ''}`} style={{ display: 'flex' }}>\n                    <div title=\"Set to Black\" className=\"black\">\n                        <button onClick={this.onClickBlack} onMouseDown={this.onMouseDownBlack}>Set to Black</button>\n                    </div>\n                    <div title=\"Set to Color\" className=\"gradient\" style={{position: 'relative'}}>\n                        <style>{style}</style>\n                        <input value={hue} min=\"0\" max=\"359\" step=\"1\" onChange={this.onChange} type=\"range\" />\n                        { black || !colorTooltip ? null : (\n                            <div className=\"tooltip bottom\" style={{\n                                opacity: 1,\n                                left: percent * 100 + '%',\n                                marginLeft: ((1 - percent) * (11 * 2) - 11) + 'px',\n                                top: '100%',\n                                transform: 'translate(-50%, 0px)'\n                            }}>\n                                <div className=\"tooltip-arrow\"></div>\n                                <div style={{ background: 'black' }} className=\"tooltip-inner\">{shade}</div>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            )\n        },\n\n        isBlack() {\n            return this.state.value === BLACK;\n        },\n\n        onClickBlack() {\n            if (!this.isBlack()) {\n                this.update(BLACK);\n            }\n        },\n\n        onMouseDownBlack() {\n            if (!this.isBlack()) {\n                this.update(BLACK);\n            }\n        },\n\n        onChange(event) {\n            const color = colorjs({ hue: event.target.value, saturation, lightness }).toCSSHex();\n            this.update(color);\n            clearTimeout(this._hideTooltip);\n            if (!this.state.colorTooltip) {\n                this.setState({ colorTooltip: true })\n            }\n            this._hideTooltip = _.delay(() => {\n                this.setState({ colorTooltip: false })\n            }, 750);\n        },\n\n        update(newValue) {\n            this.setState({ value: newValue });\n            this.publish(newValue);\n        },\n\n        _publish(newValue) {\n            this.props.onSelected(newValue);\n        }\n    });\n\n    return ColorSelector;\n});\n"]}