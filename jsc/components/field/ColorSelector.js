define(['create-react-class','prop-types','colorjs'],function(createReactClass,PropTypes,colorjs){var CssIdentifier=1;var BLACK='rgb(0,0,0)';var saturation=0.7;var lightness=0.5;var shades=[{s:21,v:'Red'},{s:52,v:'Orange'},{s:68,v:'Yellow'},{s:154,v:'Green'},{s:190,v:'Teal'},{s:249,v:'Blue'},{s:290,v:'Purple'},{s:330,v:'Pink'},{s:361,v:'Red'}];var ColorSelector=createReactClass({displayName:'ColorSelector',propTypes:{onSelected:PropTypes.func.isRequired,value:PropTypes.string},getDefaultProps:function getDefaultProps(){return{value:BLACK};},getInitialState:function getInitialState(){return{value:this.props.value};},componentWillMount:function componentWillMount(){this.cssIdentifier='_cs-'+CssIdentifier++;},componentDidMount:function componentDidMount(){this.publish=_.debounce(this._publish,100);},componentWillReceiveProps:function componentWillReceiveProps(nextProps){if(this.state.value!==nextProps.value){this.setState({value:nextProps.value||BLACK});}},componentWillUnmount:function componentWillUnmount(){clearTimeout(this._hideTooltip);},render:function render(){var _state=this.state,value=_state.value,colorTooltip=_state.colorTooltip;var black=this.isBlack();var color=colorjs(value);var hue=color.getHue();var colorStyle='hsl('+hue+', '+saturation*100+'%, '+lightness*100+'%);';var style=black?'':'\n                #'+this.cssIdentifier+' input[type=range]::-moz-range-thumb { background: '+colorStyle+' }\n                #'+this.cssIdentifier+' input[type=range]::-ms-thumb { background: '+colorStyle+' }\n                #'+this.cssIdentifier+' input[type=range]::-webkit-slider-thumb { background: '+colorStyle+' }';var percent=hue/360;var shade=black?'':_.find(shades,function(s){return hue<s.s;}).v;return React.createElement('div',{id:this.cssIdentifier,className:'color-selector '+(black?'black':''),style:{display:'flex'}},React.createElement('div',{title:'Set to Black',className:'black'},React.createElement('button',{onClick:this.onClickBlack,onMouseDown:this.onMouseDownBlack},'Set to Black')),React.createElement('div',{title:'Set to Color',className:'gradient',style:{position:'relative'}},React.createElement('style',null,style),React.createElement('input',{value:hue,min:'0',max:'359',step:'1',onChange:this.onChange,type:'range'}),black||!colorTooltip?null:React.createElement('div',{className:'tooltip bottom',style:{opacity:1,left:percent*100+'%',marginLeft:(1-percent)*(11*2)-11+'px',top:'100%',transform:'translate(-50%, 0px)'}},React.createElement('div',{className:'tooltip-arrow'}),React.createElement('div',{style:{background:'black'},className:'tooltip-inner'},shade))));},isBlack:function isBlack(){return this.state.value===BLACK;},onClickBlack:function onClickBlack(){if(!this.isBlack()){this.update(BLACK);}},onMouseDownBlack:function onMouseDownBlack(){if(!this.isBlack()){this.update(BLACK);}},onChange:function onChange(event){var _this=this;var color=colorjs({hue:event.target.value,saturation:saturation,lightness:lightness}).toCSSHex();this.update(color);clearTimeout(this._hideTooltip);if(!this.state.colorTooltip){this.setState({colorTooltip:true});}this._hideTooltip=_.delay(function(){_this.setState({colorTooltip:false});},750);},update:function update(newValue){this.setState({value:newValue});this.publish(newValue);},_publish:function _publish(newValue){this.props.onSelected(newValue);}});return ColorSelector;});
//# sourceMappingURL=ColorSelector.js.map
