var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};define(['create-react-class','prop-types','react-redux','react-transition-group','../Tooltip','util/vertex/formatters','data/web-worker/store/element/selectors','data/web-worker/store/element/actions'],function(createReactClass,PropTypes,redux,ReactTransitionGroup,Tooltip,F,elementSelectors,elementActions){var Transition=ReactTransitionGroup.Transition,TransitionGroup=ReactTransitionGroup.TransitionGroup;var getHeight=function getHeight(elem){return elem.offsetHeight;};var forceLayout=function forceLayout(node){node.offsetHeight;};var DEFAULT={justificationText:'',sourceInfo:null};var JustificationEditor=createReactClass({displayName:'JustificationEditor',propTypes:{validation:PropTypes.string.isRequired,value:PropTypes.shape({justificationText:PropTypes.string,sourceInfo:PropTypes.object}),onJustificationChanged:PropTypes.func.isRequired},getInitialState:function getInitialState(){return{height:'auto'};},componentWillReceiveProps:function componentWillReceiveProps(nextProps){this.checkForPastedSourceInfo(this.props,nextProps);},componentDidMount:function componentDidMount(){var _props$value=this.props.value,value=_props$value===undefined?DEFAULT:_props$value;var valid=this.checkValid(value);this.props.onJustificationChanged({value:value,valid:valid});this.checkForPastedSourceInfo(undefined,this.props);},render:function render(){var _this=this;var _props=this.props,_props$value2=_props.value,value=_props$value2===undefined?DEFAULT:_props$value2,validation=_props.validation;var height=this.state.height;var justificationText=value.justificationText,sourceInfo=value.sourceInfo;if(validation==='NONE'){return null;}var duration=250;var showJustification=_.isEmpty(value.sourceInfo);var showSourceInfo=!showJustification;return React.createElement('div',{className:'justification'},React.createElement(Transition,{'in':showSourceInfo,timeout:duration,onEnter:this.onEnter,onEntering:this.onEntering,onEntered:this.onEntered,onExit:this.onExit,onExiting:this.onExiting,onExited:this.onExited},function(state){return React.createElement('div',{className:'animationwrap',style:{overflow:['entering','exiting'].includes(state)?'hidden':'',position:'relative',transition:'height '+duration+'ms ease-in-out'}},React.createElement('div',{ref:function ref(r){_this.textRef=r;},style:{display:state==='entered'?'none':'',visibility:state==='entering'?'hidden':''}},_this.renderJustificationInput(justificationText)),sourceInfo?React.createElement('div',{ref:function ref(r){_this.sourceInfoRef=r;},style:_extends({},state==='entered'?{}:{position:'absolute',top:'0',left:'0'})},_this.renderSourceInfo(sourceInfo)):null);}));},onEnter:function onEnter(node){node.style.overflow='hidden';this._justificationHeight=getHeight(node)+'px';this._sourceInfoHeight=getHeight(this.sourceInfoRef)+'px';node.style.overflow=null;node.style.height=this._justificationHeight;forceLayout(node);},onEntering:function onEntering(node){node.style.height=this._sourceInfoHeight;},onEntered:function onEntered(node){this.resetHeight(node);$(node).animatePop();},resetHeight:function resetHeight(node){node.style.height=null;},onExit:function onExit(node){node.style.height=this._sourceInfoHeight;forceLayout(node);},onExited:function onExited(node){this.resetHeight(node);this._justificationTextInput.focus();},onEndTransition:function onEndTransition(node){this._justificationTextInput.focus();},onExiting:function onExiting(node){node.style.height=this._justificationHeight;},renderSourceInfo:function renderSourceInfo(sourceInfo){var snippet=sourceInfo.snippet,vertexId=sourceInfo.vertexId;var vertices=this.props.vertices;var vertex=vertices&&vertices[vertexId];var title=vertex?F.vertex.title(vertex):vertex===null?i18n('element.entity.not_found'):i18n('openlumify.loading');return React.createElement('div',{className:'viewing'},React.createElement('div',{className:'text'},React.createElement('div',{className:'text-inner',dangerouslySetInnerHTML:{__html:snippet}})),React.createElement('div',{className:'source'},React.createElement('strong',null,i18n('justification.field.reference.label'),':'),React.createElement('span',{title:title,className:'ref-title'},title),React.createElement('button',{className:'remove',onClick:this.onRemoveSourceInfo},'Remove')));},renderJustificationInput:function renderJustificationInput(justificationText){var _this2=this;var validation=this.props.validation;return React.createElement(React.Fragment,null,React.createElement('input',{ref:function ref(r){_this2._justificationTextInput=r;},className:'editing',onChange:this.onChange,onPaste:this.onPaste,placeholder:validation==='OPTIONAL'?i18n('justification.field.placeholder.optional'):i18n('justification.field.placeholder.required'),type:'text',value:justificationText||''}),React.createElement(Tooltip,{placement:'left',offset:'0,5',allowOverflow:['left'],trigger:'focus',className:'field-tooltip',node:this._justificationTextInput,message:i18n('justification.field.tooltip.title'),subtitle:i18n('justification.field.tooltip.subtitle')}));},onPaste:function onPaste(event){var _this3=this;var target=event.target;_.defer(function(){var sourceInfo=_this3.sourceInfoForText(target.value);if(sourceInfo){_this3.setSourceInfo(sourceInfo);}else{_this3.setJustificationText(target.value);}});},onChange:function onChange(event){this.setJustificationText(event.target.value);},onRemoveSourceInfo:function onRemoveSourceInfo(){this.setSourceInfo(null);},setJustificationText:function setJustificationText(justificationText){var value={justificationText:justificationText};var valid=this.checkValid(value);this.props.onJustificationChanged({value:value,valid:valid});},setSourceInfo:function setSourceInfo(sourceInfo){var value={sourceInfo:sourceInfo};var valid=this.checkValid(value);if(sourceInfo){this.props.loadVertex(sourceInfo.vertexId);}this.props.onJustificationChanged({value:value,valid:valid});},checkForPastedSourceInfo:function checkForPastedSourceInfo(){var oldProps=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var newProps=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var oldValue=oldProps.pastedValue;var newValue=newProps.pastedValue;if(newValue&&(!oldValue||newValue!==oldValue)){var sourceInfo=this.sourceInfoForText(newValue);if(sourceInfo){this.setSourceInfo(sourceInfo);}}},sourceInfoForText:function sourceInfoForText(text){var clipboard=openlumifyData.copiedDocumentText,normalizeWhiteSpace=function normalizeWhiteSpace(str){return str.replace(/\s+/g,' ');};if(clipboard&&normalizeWhiteSpace(clipboard.text)===normalizeWhiteSpace(text)){return clipboard;}},checkValid:function checkValid(value){var validation=this.props.validation;if(validation==='NONE'||validation==='OPTIONAL'){return true;}var _value$justificationT=value.justificationText,justificationText=_value$justificationT===undefined?'':_value$justificationT,sourceInfo=value.sourceInfo;if(!_.isEmpty(sourceInfo)){return true;}if(justificationText.trim().length){return true;}return false;}});return redux.connect(function(state,props){var properties=state.configuration.properties;return _extends({validation:props.validationOverride||properties['field.justification.validation'],vertices:elementSelectors.getVertices(state)},props);},function(dispatch,props){return{loadVertex:function loadVertex(id){dispatch(elementActions.get({vertexIds:[id]}));}};})(JustificationEditor);});
//# sourceMappingURL=JustificationEditor.js.map
