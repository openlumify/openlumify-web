{"version":3,"sources":["../../../js/components/visibility/VisibilityEditor.jsx"],"names":["define","createReactClass","PropTypes","redux","userSelectors","Attacher","RegistryInjectorHOC","DEFAULT_FLIGHT_EDITOR","VisibilityEditor","propTypes","onVisibilityChanged","func","getDefaultProps","value","placeholder","i18n","getInitialState","props","valid","componentWillReceiveProps","state","setState","checkValid","render","registry","style","oldValue","rest","custom","_","first","editorComponentPath","onChange","event","target","authorizations","Boolean","length","connect","getAuthorizations","dispatch"],"mappings":"qaAAAA,OAAO,CACH,oBADG,CAEH,YAFG,CAGH,aAHG,CAIH,sCAJG,CAKH,aALG,CAMH,wBANG,CAAP,CAOG,SAASC,gBAAT,CAA2BC,SAA3B,CAAsCC,KAAtC,CAA6CC,aAA7C,CAA4DC,QAA5D,CAAsEC,mBAAtE,CAA2F,CAC1F,aAEA,GAAMC,uBAAwB,8BAA9B,CAEA,GAAMC,kBAAmBP,iBAAiB,gCACtCQ,UAAW,CACPC,oBAAqBR,UAAUS,IADxB,CAD2B,CAItCC,eAJsC,2BAIpB,CACd,MAAO,CAAEC,MAAO,EAAT,CAAaC,YAAaC,KAAK,kBAAL,CAA1B,CAAP,CACH,CANqC,CAOtCC,eAPsC,2BAOpB,CACd,MAAO,CAAEH,MAAO,KAAKI,KAAL,CAAWJ,KAApB,CAA2BK,MAAO,IAAlC,CAAP,CACH,CATqC,CAUtCC,yBAVsC,yCAUD,IAATN,MAAS,MAATA,KAAS,CACjC,GAAIA,QAAU,KAAKO,KAAL,CAAWP,KAAzB,CAAgC,CAC5B,KAAKQ,QAAL,CAAc,CAAER,WAAF,CAASK,MAAO,KAAKI,UAAL,CAAgBT,KAAhB,CAAhB,CAAd,EACH,CACJ,CAdqC,CAetCU,MAfsC,kBAe7B,YAC8D,KAAKN,KADnE,CACGO,QADH,QACGA,QADH,CACaC,KADb,QACaA,KADb,CAC2BC,QAD3B,QACoBb,KADpB,CACqCC,WADrC,QACqCA,WADrC,CACqDa,IADrD,wFAEoB,KAAKP,KAFzB,CAEGP,KAFH,QAEGA,KAFH,CAEUK,KAFV,QAEUA,KAFV,CAGL,GAAMU,QAASC,EAAEC,KAAF,CAAQN,SAAS,2BAAT,CAAR,CAAf,CAGA,GAAII,QAAUA,OAAOG,mBAAP,GAA+BxB,qBAA7C,CAAoE,CAChE,MACI,qBAAC,QAAD,WACI,MAAOM,KADX,CAEI,YAAaC,WAFjB,CAGI,cAAec,OAAOG,mBAH1B,EAIQJ,IAJR,EADJ,CAOH,CAED,MACI,8BACI,KAAK,MADT,CAEI,SAAU,KAAKK,QAFnB,CAGI,MAAOnB,KAHX,CAII,YAAaC,WAJjB,CAKI,UAAWI,MAAQ,EAAR,CAAa,SAL5B,EADJ,CAQH,CAvCqC,CAwCtCc,QAxCsC,mBAwC7BC,KAxC6B,CAwCtB,CACZ,GAAMpB,OAAQoB,MAAMC,MAAN,CAAarB,KAA3B,CACA,GAAMK,OAAQ,KAAKI,UAAL,CAAgBT,KAAhB,CAAd,CACA,KAAKQ,QAAL,CAAc,CAAER,WAAF,CAASK,WAAT,CAAd,EACA,KAAKD,KAAL,CAAWP,mBAAX,CAA+B,CAAEG,WAAF,CAASK,WAAT,CAA/B,EACH,CA7CqC,CA8CtCI,UA9CsC,qBA8C3BT,KA9C2B,CA8CpB,CACd,GAAIsB,gBAAiB,KAAKlB,KAAL,CAAWkB,cAAhC,CACA,MAAOC,SAAQ,CAACvB,MAAMwB,MAAP,EAAiBxB,QAASsB,eAAlC,CAAP,CACH,CAjDqC,CAAjB,CAAzB,CAoDA,MAAOhC,OAAMmC,OAAN,CACH,SAAClB,KAAD,CAAQH,KAAR,CAAkB,CACd,iBACIkB,eAAgB/B,cAAcmC,iBAAd,CAAgCnB,KAAhC,CADpB,EAEOH,KAFP,EAIH,CANE,CAQH,SAACuB,QAAD,CAAWvB,KAAX,QAAsB,EAAtB,EARG,EAULX,oBAAoBE,gBAApB,CAAsC,CACpC,2BADoC,CAAtC,CAVK,CAAP,CAaH,CA7ED","file":"VisibilityEditor.js","sourcesContent":["define([\n    'create-react-class',\n    'prop-types',\n    'react-redux',\n    'data/web-worker/store/user/selectors',\n    '../Attacher',\n    '../RegistryInjectorHOC'\n], function(createReactClass, PropTypes, redux, userSelectors, Attacher, RegistryInjectorHOC) {\n    'use strict';\n\n    const DEFAULT_FLIGHT_EDITOR = 'util/visibility/default/edit';\n\n    const VisibilityEditor = createReactClass({\n        propTypes: {\n            onVisibilityChanged: PropTypes.func\n        },\n        getDefaultProps() {\n            return { value: '', placeholder: i18n('visibility.label') }\n        },\n        getInitialState() {\n            return { value: this.props.value, valid: true }\n        },\n        componentWillReceiveProps({ value }) {\n            if (value !== this.state.value) {\n                this.setState({ value, valid: this.checkValid(value) })\n            }\n        },\n        render() {\n            const { registry, style, value: oldValue, placeholder, ...rest } = this.props;\n            const { value, valid } = this.state;\n            const custom = _.first(registry['org.openlumify.visibility']);\n\n            // Use new react visibility renderer as default if no custom exists\n            if (custom && custom.editorComponentPath !== DEFAULT_FLIGHT_EDITOR) {\n                return (\n                    <Attacher\n                        value={value}\n                        placeholder={placeholder}\n                        componentPath={custom.editorComponentPath}\n                        {...rest} />\n                );\n            }\n\n            return (\n                <input\n                    type=\"text\"\n                    onChange={this.onChange}\n                    value={value}\n                    placeholder={placeholder}\n                    className={valid ? '' : 'invalid'} />\n            )\n        },\n        onChange(event) {\n            const value = event.target.value;\n            const valid = this.checkValid(value)\n            this.setState({ value, valid })\n            this.props.onVisibilityChanged({ value, valid })\n        },\n        checkValid(value) {\n            var authorizations = this.props.authorizations;\n            return Boolean(!value.length || value in authorizations);\n        }\n    });\n\n    return redux.connect(\n        (state, props) => {\n            return {\n                authorizations: userSelectors.getAuthorizations(state),\n                ...props\n            };\n        },\n\n        (dispatch, props) => ({\n        })\n    )(RegistryInjectorHOC(VisibilityEditor, [\n        'org.openlumify.visibility'\n    ]));\n});\n"]}