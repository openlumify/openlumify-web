{"version":3,"sources":["../../js/product/ProductListContainer.jsx"],"names":["define","createReactClass","PropTypes","redux","ProductList","productActions","productSelectors","registry","markUndocumentedExtensionPoint","initial","$","document","on","handler","event","data","name","options","_","isEmpty","productId","id","rest","off","console","warn","openlumifyData","storePromise","then","state","store","getState","selected","getSelectedId","products","getProducts","length","dispatch","select","connect","props","status","getStatus","types","getProductTypes","previewHashes","getPreviewHashesById","user","current","workspace","currentId","byId","onLoadProducts","list","undefined","onCreate","type","create","onDeleteProduct","delete","onUpdateTitle","title","updateTitle","onSelectProduct","onDropElements","product","elements","extension","findWhere","extensionsForPoint","identifier","kind","storeActions","isFunction","dropElements","undoable"],"mappings":"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","file":"ProductListContainer.js","sourcesContent":["define([\n    'create-react-class',\n    'prop-types',\n    'react-redux',\n    './ProductList',\n    'data/web-worker/store/product/actions',\n    'data/web-worker/store/product/selectors',\n    'configuration/plugins/registry'\n], function(createReactClass, PropTypes, redux, ProductList, productActions, productSelectors, registry) {\n    'use strict';\n\n    registry.markUndocumentedExtensionPoint('org.openlumify.workproduct')\n\n    var initial;\n    $(document)\n        .on('menubarToggleDisplay', function handler(event, data) {\n            const { name, options } = data;\n            if (name === 'products' && !_.isEmpty(options)) {\n                if ('id' in options) {\n                    const { id: productId, ...rest } = options;\n                    initial = { productId, ...rest };\n                    $(document).off('menubarToggleDisplay', handler)\n                } else console.warn('Specify id=[product id] in url to open product. #tools=products&id=...')\n            }\n        })\n        .on('productsPaneVisible', function handler(event, data) {\n            $(document).off('productsPaneVisible', handler);\n            if (initial) return;\n            openlumifyData.storePromise.then(store => {\n                const state = store.getState();\n                const selected = productSelectors.getSelectedId(state)\n                if (!selected) {\n                    const products = productSelectors.getProducts(state);\n                    if (products.length) {\n                        store.dispatch(productActions.select(products[0].id))\n                    }\n                }\n            })\n        })\n\n\n    return redux.connect(\n\n        (state, props) => {\n            return {\n                status: productSelectors.getStatus(state),\n                types: productSelectors.getProductTypes(state),\n                selected: productSelectors.getSelectedId(state),\n                products: productSelectors.getProducts(state),\n                previewHashes: productSelectors.getPreviewHashesById(state),\n                user: state.user.current,\n                workspace: state.workspace.currentId ?\n                    state.workspace.byId[state.workspace.currentId] : null\n            }\n        },\n\n        (dispatch, props) => {\n\n            return {\n                onLoadProducts: () => { dispatch(productActions.list(initial)); initial = undefined },\n                onCreate: (type) => { dispatch(productActions.create('Untitled', type)) },\n                onDeleteProduct: (productId) => { dispatch(productActions.delete(productId)) },\n                onUpdateTitle: (productId, title) => {\n                    dispatch(productActions.updateTitle(productId, title));\n                },\n                onSelectProduct: (productId) => {\n                    dispatch(productActions.select(productId))\n                },\n                onDropElements: (product, elements) => {\n                    const extension = _.findWhere(registry.extensionsForPoint('org.openlumify.workproduct'), {\n                        identifier: product.kind\n                    });\n\n                    if (extension.storeActions && _.isFunction(extension.storeActions.dropElements)) {\n                        dispatch(extension.storeActions.dropElements(product.id, elements, { undoable: true }));\n                    }\n                }\n            }\n        }\n\n    )(ProductList);\n});\n"]}