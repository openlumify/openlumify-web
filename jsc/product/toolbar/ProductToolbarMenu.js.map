{"version":3,"sources":["../../../js/product/toolbar/ProductToolbarMenu.jsx"],"names":["define","createReactClass","PropTypes","Attacher","ProductToolbarMenu","active","identifier","items","onToggle","onItemMouseEnter","onItemMouseLeave","_","isEmpty","i18n","display","map","itemComponentPath","props","propTypes","string","isRequired","bool","array","func"],"mappings":"gOAAAA,OAAO,CACH,oBADG,CAEH,YAFG,CAGH,qBAHG,CAAP,CAIG,SAASC,gBAAT,CAA2BC,SAA3B,CAAsCC,QAAtC,CAAgD,CAC/C,aAEA,GAAMC,oBAAqB,QAArBA,mBAAqB,MAAiF,IAA9EC,OAA8E,MAA9EA,MAA8E,CAAtEC,UAAsE,MAAtEA,UAAsE,CAA1DC,KAA0D,MAA1DA,KAA0D,CAAnDC,QAAmD,MAAnDA,QAAmD,CAAzCC,gBAAyC,MAAzCA,gBAAyC,CAAvBC,gBAAuB,MAAvBA,gBAAuB,CACxG,GAAIC,EAAEC,OAAF,CAAUL,KAAV,CAAJ,CAAsB,CAClB,MAAO,KAAP,CACH,CAED,MACI,4BAAK,UAAU,cAAf,CACI,aAAc,uBAAM,CAAEE,iBAAiBH,UAAjB,EAA8B,CADxD,CAEI,aAAc,uBAAM,CAAEI,iBAAiBJ,UAAjB,EAA8B,CAFxD,EAII,8BACI,UAAWD,OAAS,QAAT,CAAoB,IADnC,CAEI,QAAS,kBAAM,CAAEG,SAASF,UAAT,EAAsB,CAF3C,CAGI,MAAOO,KAAK,wBAAL,CAHX,SAJJ,CAQI,2BAAK,MAAO,CAACC,QAAUT,OAAS,OAAT,CAAmB,MAA9B,CAAZ,CAAoD,UAAU,gBAA9D,EACI,8BACIE,MAAMQ,GAAN,CAAU,eAA8C,IAA3CT,WAA2C,OAA3CA,UAA2C,CAA/BU,iBAA+B,OAA/BA,iBAA+B,CAAZC,KAAY,OAAZA,KAAY,CACpD,MAAO,qBAAC,QAAD,WACH,SAAS,IADN,CAEH,IAAKX,UAFF,CAGH,cAAeU,iBAHZ,EAIEC,OAAS,EAJX,EAAP,CAKH,CAND,CADJ,CADJ,CARJ,CADJ,CAsBH,CA3BD,CA6BAb,mBAAmBc,SAAnB,CAA+B,CAC3BZ,WAAYJ,UAAUiB,MAAV,CAAiBC,UADF,CAE3Bf,OAAQH,UAAUmB,IAFS,CAG3Bd,MAAOL,UAAUoB,KAHU,CAI3Bd,SAAUN,UAAUqB,IAJO,CAK3Bd,iBAAkBP,UAAUqB,IALD,CAM3Bb,iBAAkBR,UAAUqB,IAND,CAA/B,CASA,MAAOnB,mBAAP,CACH,CA9CD","file":"ProductToolbarMenu.js","sourcesContent":["define([\n    'create-react-class',\n    'prop-types',\n    'components/Attacher'\n], function(createReactClass, PropTypes, Attacher) {\n    'use strict';\n\n    const ProductToolbarMenu = ({ active, identifier, items, onToggle, onItemMouseEnter, onItemMouseLeave }) => {\n        if (_.isEmpty(items)) {\n            return null;\n        }\n\n        return (\n            <div className=\"toolbar-menu\"\n                onMouseEnter={() => { onItemMouseEnter(identifier) }}\n                onMouseLeave={() => { onItemMouseLeave(identifier) }}\n            >\n                <button\n                    className={active ? 'active' : null}\n                    onClick={() => { onToggle(identifier) }}\n                    title={i18n('product.toolbar.toggle')}>Item</button>\n                <div style={{display: (active ? 'block' : 'none')}} className=\"item-container\">\n                    <ul>{\n                        items.map(({ identifier, itemComponentPath, props }) => {\n                            return <Attacher\n                                nodeType=\"li\"\n                                key={identifier}\n                                componentPath={itemComponentPath}\n                                {...(props || {})} />\n                        })\n                    }</ul>\n                </div>\n            </div>\n        );\n    };\n\n    ProductToolbarMenu.propTypes = {\n        identifier: PropTypes.string.isRequired,\n        active: PropTypes.bool,\n        items: PropTypes.array,\n        onToggle: PropTypes.func,\n        onItemMouseEnter: PropTypes.func,\n        onItemMouseLeave: PropTypes.func\n    };\n\n    return ProductToolbarMenu;\n});\n"]}