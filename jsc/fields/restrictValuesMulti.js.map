{"version":3,"sources":["../../js/fields/restrictValuesMulti.js"],"names":["define","defineComponent","RestrictValues","F","withPropertyField","template","RestrictValuesMultiField","compare","v1","v2","toLowerCase","localeCompare","defaultAttrs","removeSelector","after","self","on","onRemoveItemClick","$node","html","$restrictValues","find","attachTo","property","attr","value","preventChangeHandler","placeholderKey","onRestrictValueChange","setValue","event","$","target","val","addValue","trigger","propertyId","title","getValue","metadata","_","isFunction","getMetadata","options","$item","parent","data","remove","removeValue","values","indexOf","isPossibleValue","possibleValues","some","v","push","splice","empty","isArray","sort","forEach","append","vertex","propDisplay","last","slice","isValid","length"],"mappings":"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","file":"restrictValuesMulti.js","sourcesContent":["define([\n    'flight/lib/component',\n    './restrictValues',\n    'util/vertex/formatters',\n    './withPropertyField',\n    './restrictValuesMultiTpl.hbs'\n], function(defineComponent, RestrictValues, F, withPropertyField, template) {\n    'use strict';\n\n    return defineComponent(RestrictValuesMultiField, withPropertyField);\n\n    function RestrictValuesMultiField() {\n\n        function compare(v1, v2) {\n            return v1.toLowerCase().localeCompare(v2.toLowerCase());\n        }\n\n        this.defaultAttrs({\n            removeSelector: 'ul.values li .remove-value'\n        });\n\n        this.after('initialize', function() {\n            var self = this;\n\n            this.on('click', {\n                removeSelector: onRemoveItemClick\n            });\n\n            this.$node.html(template({}));\n\n            var $restrictValues = this.$node.find('.restrict-values');\n            RestrictValues.attachTo($restrictValues, {\n                property: this.attr.property,\n                value: '',\n                preventChangeHandler: true,\n                placeholderKey: 'field.restrict_values_multi.form.placeholder'\n            });\n            $restrictValues.on('change', onRestrictValueChange);\n\n            this.setValue(this.attr.value);\n\n            function onRestrictValueChange(event) {\n                var value = $(event.target).val();\n                if (self.addValue(value)) {\n                    $restrictValues.trigger('setValue', null);\n                    self.trigger('propertychange', {\n                        propertyId: self.attr.property.title,\n                        value: self.getValue(),\n                        metadata: _.isFunction(self.getMetadata) && self.getMetadata() || {},\n                        options: {}\n                    });\n                }\n            }\n\n            function onRemoveItemClick(event) {\n                var $item = $(event.target).parent();\n                var value = $item.data('value');\n                $item.remove();\n                self.removeValue(value);\n            }\n        });\n\n        this.addValue = function(value) {\n            if (this.values.indexOf(value) === -1) {\n                const isPossibleValue = _.values(this.attr.property.possibleValues || {}).some(v => v === value);\n\n                if (isPossibleValue) {\n                    this.values.push(value);\n                    return true;\n                }\n            }\n\n            return false;\n        };\n\n        this.removeValue = function(value) {\n            this.values.splice(this.values.indexOf(value), 1);\n            this.trigger('propertychange', {\n                propertyId: this.attr.property.title,\n                value: this.getValue(),\n                metadata: _.isFunction(this.getMetadata) && this.getMetadata() || {},\n                options: {}\n            });\n        };\n\n        this.setValue = function(values) {\n            var self = this;\n            this.values = [];\n            this.$node.find('ul.values').empty();\n            values = _.isArray(values) ? values : [values];\n\n            values.sort(compare).forEach(function(value) {\n                if (self.addValue(value)) {\n                    self.$node.find('ul.values')\n                        .append(\n                            '<li><div>' + F.vertex.propDisplay(self.attr.property.title, value) +\n                            '</div><button class=\"remove-value remove-icon\">x</button></li>');\n                    self.$node.find('ul.values li').last().data('value', value);\n                }\n            });\n        };\n\n        this.getValue = function() {\n            return this.values.slice(0);\n        };\n\n        this.isValid = function(values) {\n            return values.length;\n        };\n    }\n});\n"]}