{"version":3,"sources":["../../js/fields/withHistogram.js"],"names":["define","Histogram","template","withHistogram","defaultAttrs","segmentedControlSelector","after","attr","predicates","supportsHistogram","$node","prepend","on","onChangeView","onUpdateHistogramExtent","_","throttle","bind","attachTo","children","property","event","data","find","val","change","val1","extent","val2","setValues","isScrubbing","$target","$","target","closest","hasClass","addClass","end","siblings","removeClass","toggleClass"],"mappings":"AAAAA,OAAO,CACH,uBADG,CAEH,2BAFG,CAAP,CAGG,SACCC,SADD,CAECC,QAFD,CAEW,CACV,aAEA,MAAOC,cAAP,CAEA,QAASA,cAAT,EAAyB,CAErB,KAAKC,YAAL,CAAkB,CACdC,yBAA0B,2BADZ,CAAlB,EAIA,KAAKC,KAAL,CAAW,YAAX,CAAyB,UAAW,CAChC,GAAI,KAAKC,IAAL,CAAUC,UAAV,EAAwB,KAAKD,IAAL,CAAUE,iBAAtC,CAAyD,CACrD,KAAKC,KAAL,CAAWC,OAAX,CAAmBT,SAAS,EAAT,CAAnB,EAEA,KAAKU,EAAL,CAAQ,OAAR,CAAiB,CACbP,yBAA0B,KAAKQ,YADlB,CAAjB,EAIA,KAAKC,uBAAL,CAA+BC,EAAEC,QAAF,CAAW,KAAKF,uBAAL,CAA6BG,IAA7B,CAAkC,IAAlC,CAAX,CAAoD,GAApD,CAA/B,CACA,KAAKL,EAAL,CAAQ,uBAAR,CAAiC,KAAKE,uBAAtC,EAEAb,UAAUiB,QAAV,CAAmB,KAAKR,KAAL,CAAWS,QAAX,CAAoB,YAApB,CAAnB,CAAsD,CAClDC,SAAU,KAAKb,IAAL,CAAUa,QAD8B,CAAtD,EAGH,CACJ,CAfD,EAiBA,KAAKN,uBAAL,CAA+B,SAASO,KAAT,CAAgBC,IAAhB,CAAsB,CACjD,KAAKZ,KAAL,CAAWa,IAAX,CAAgB,kBAAhB,EACKC,GADL,CACS,OADT,EAEKC,MAFL,GAIA,GAAIC,MAAOJ,KAAKK,MAAL,EAAeL,KAAKK,MAAL,CAAY,CAAZ,CAA1B,CACIC,KAAON,KAAKK,MAAL,EAAeL,KAAKK,MAAL,CAAY,CAAZ,CAD1B,CAGA,KAAKE,SAAL,CAAeH,IAAf,CAAqBE,IAArB,CAA2B,CACvBE,YAAa,IADU,CAA3B,EAGH,CAXD,CAaA,KAAKjB,YAAL,CAAoB,SAASQ,KAAT,CAAgB,CAChC,GAAIU,SAAUC,EAAEX,MAAMY,MAAR,EAAgBC,OAAhB,CAAwB,QAAxB,CAAd,CAEA,GAAIH,QAAQI,QAAR,CAAiB,QAAjB,CAAJ,CAAgC,CAC5B,OACH,CAEDJ,QAAQG,OAAR,CAAgB,QAAhB,EAA0BE,QAA1B,CAAmC,QAAnC,EAA6Cb,IAA7C,CAAkD,MAAlD,EAA0Da,QAA1D,CAAmE,YAAnE,EAAiFC,GAAjF,GACKC,QADL,CACc,SADd,EACyBC,WADzB,CACqC,QADrC,EAC+ChB,IAD/C,CACoD,MADpD,EAC4DgB,WAD5D,CACwE,YADxE,EAGA,KAAK7B,KAAL,CAAW8B,WAAX,CAAuB,WAAvB,EACH,CAXD,CAaH,CACJ,CA5DD","file":"withHistogram.js","sourcesContent":["define([\n    './histogram/histogram',\n    './withHistogramToggle.hbs'\n], function(\n    Histogram,\n    template) {\n    'use strict';\n\n    return withHistogram;\n\n    function withHistogram() {\n\n        this.defaultAttrs({\n            segmentedControlSelector: '.segmented-control button'\n        });\n\n        this.after('initialize', function() {\n            if (this.attr.predicates && this.attr.supportsHistogram) {\n                this.$node.prepend(template({}));\n\n                this.on('click', {\n                    segmentedControlSelector: this.onChangeView\n                });\n\n                this.onUpdateHistogramExtent = _.throttle(this.onUpdateHistogramExtent.bind(this), 100);\n                this.on('updateHistogramExtent', this.onUpdateHistogramExtent);\n\n                Histogram.attachTo(this.$node.children('.histogram'), {\n                    property: this.attr.property\n                });\n            }\n        });\n\n        this.onUpdateHistogramExtent = function(event, data) {\n            this.$node.find('select.predicate')\n                .val('range')\n                .change();\n\n            var val1 = data.extent && data.extent[0],\n                val2 = data.extent && data.extent[1];\n\n            this.setValues(val1, val2, {\n                isScrubbing: true\n            });\n        };\n\n        this.onChangeView = function(event) {\n            var $target = $(event.target).closest('button');\n\n            if ($target.hasClass('active')) {\n                return;\n            }\n\n            $target.closest('button').addClass('active').find('span').addClass('icon-white').end()\n                .siblings('.active').removeClass('active').find('span').removeClass('icon-white');\n\n            this.$node.toggleClass('alternate');\n        };\n\n    }\n});\n"]}