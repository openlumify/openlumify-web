{"version":3,"sources":["../../../../js/detail/text/popover/TermContainer.jsx"],"names":["define","createReactClass","PropTypes","redux","userSelectors","selectionActions","elementActions","ontologySelectors","elementSelectors","TermList","Resolve","Unresolve","Property","Relationship","THING","isVertex","termMentionFor","termMentionForElementId","resolvedToVertexId","Boolean","TermContainer","propTypes","onOpen","func","isRequired","onFullscreen","onComment","artifactId","string","propertyKey","propertyName","terms","array","selection","object","sourceVertexId","targetVertexId","getInitialState","props","viewing","type","data","Error","componentDidMount","_checkForElementsNeeded","componentWillUnmount","onHoverTerm","componentWillReceiveProps","nextProps","render","getContent","concepts","rest","state","error","loading","formState","actions","onUnresolve","onResolve","onProperty","getConceptOrDefault","iri","doResolve","onViewList","doUnresolve","doProperty","doRelationship","doClose","setState","_dataForTerm","term","snippet","mentionEnd","mentionStart","sign","attemptToCoerceValue","sourceInfo","startOffset","endOffset","vertexId","textPropertyKey","textPropertyName","_do","termMentionId","element","property","id","closeDialog","openlumifyApi","v1","dataRequest","then","reloadText","catch","console","_onlyOneTerm","length","_requestingIds","types","vertices","edges","add","push","forEach","requestElements","connect","privileges","getPrivileges","getConcepts","getVertices","getEdges","dispatch","comment","openFullscreen","onFocusElements","vertexIds","edgeIds","setFocus","get","elements","set"],"mappings":"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","file":"TermContainer.js","sourcesContent":["define([\n    'create-react-class',\n    'prop-types',\n    'react-redux',\n    'data/web-worker/store/user/selectors',\n    'data/web-worker/store/selection/actions',\n    'data/web-worker/store/element/actions',\n    'data/web-worker/store/ontology/selectors',\n    'data/web-worker/store/element/selectors',\n    './TermList',\n    './forms/Resolve',\n    './forms/Unresolve',\n    './forms/Property',\n    './forms/Relationship'\n], function(\n    createReactClass,\n    PropTypes,\n    redux,\n    userSelectors,\n    selectionActions,\n    elementActions,\n    ontologySelectors,\n    elementSelectors,\n    TermList,\n    Resolve,\n    Unresolve,\n    Property,\n    Relationship) {\n\n    const THING = 'http://www.w3.org/2002/07/owl#Thing';\n\n    const isVertex = ({termMentionFor, termMentionForElementId, resolvedToVertexId}) =>\n        Boolean(termMentionFor === 'VERTEX' || termMentionForElementId === resolvedToVertexId);\n\n    const TermContainer = createReactClass({\n        propTypes: {\n            onOpen: PropTypes.func.isRequired,\n            onFullscreen: PropTypes.func.isRequired,\n            onComment: PropTypes.func.isRequired,\n            artifactId: PropTypes.string.isRequired,\n            propertyKey: PropTypes.string.isRequired,\n            propertyName: PropTypes.string.isRequired,\n            terms: PropTypes.array,\n            selection: PropTypes.object,\n            sourceVertexId: PropTypes.string,\n            targetVertexId: PropTypes.string\n        },\n        getInitialState() {\n            const { terms, selection, sourceVertexId, targetVertexId } = this.props;\n            if (terms || selection) {\n                return { viewing: { type: 'list' } };\n            }\n            if (sourceVertexId && targetVertexId) {\n                return { viewing: { type: 'relationship', data: { sourceVertexId, targetVertexId } }};\n            }\n            throw new Error('Invalid props given: must have terms/selection or source/target');\n        },\n        componentDidMount() {\n            this._checkForElementsNeeded(this.props);\n        },\n        componentWillUnmount() {\n            this.props.onHoverTerm();\n        },\n        componentWillReceiveProps(nextProps) {\n            this._checkForElementsNeeded(nextProps);\n        },\n        render() {\n            return (\n                <div>\n                    {this.getContent()}\n                </div>\n            )\n        },\n        getContent() {\n            const { terms, selection, onOpen, onComment, onFullscreen, concepts, ...rest } = this.props;\n            const { viewing, error, loading } = this.state;\n            const formState = { error, loading };\n            const actions = {\n                onOpen,\n                onFullscreen,\n                onComment,\n                onUnresolve: this.onUnresolve,\n                onResolve: this.onResolve,\n                onProperty: this.onProperty\n            };\n\n            rest.getConceptOrDefault = function(iri = THING) {\n                return concepts[iri] || concepts[THING];\n            }\n\n            switch (viewing.type) {\n\n                case 'list':\n                    return (\n                        <TermList actions={actions} selection={selection} terms={terms} {...rest} />\n                    );\n\n                case 'resolve':\n                    return (\n                        <Resolve\n                            onResolve={this.doResolve}\n                            onCancel={this.onViewList}\n                            {...viewing.data}\n                            {...rest}\n                            {...formState} />\n                    );\n\n                case 'unresolve':\n                    return (\n                        <Unresolve\n                            onUnresolve={this.doUnresolve}\n                            onCancel={this.onViewList}\n                            {...viewing.data}\n                            {...rest}\n                            {...formState} />\n                    )\n\n                case 'property':\n                    return (\n                        <Property\n                            onSave={this.doProperty}\n                            onCancel={this.onViewList}\n                            {...viewing.data}\n                            {...rest}\n                            {...formState} />\n                    )\n\n                case 'relationship':\n                    return (\n                        <Relationship\n                            onSave={this.doRelationship}\n                            onCancel={this.doClose}\n                            {...viewing.data}\n                            {...rest}\n                            {...formState} />\n                    )\n            }\n        },\n        onViewList() {\n            this.setState({ error: null, viewing: { type: 'list' } });\n        },\n        _dataForTerm(term) {\n            const { artifactId, propertyName, propertyKey } = this.props;\n            const data = {\n                ...term,\n                artifactId,\n                propertyName,\n                propertyKey\n            };\n            return data;\n        },\n        onUnresolve(term) {\n            this.setState({\n                viewing: { type: 'unresolve', data: this._dataForTerm(term) }\n            })\n        },\n        onResolve(term) {\n            this.setState({\n                viewing: { type: 'resolve', data: this._dataForTerm(term) }\n            });\n        },\n        onProperty(term) {\n            const { artifactId, propertyName, propertyKey } = this.props;\n            const { snippet, mentionEnd, mentionStart, sign } = term;\n            this.setState({\n                viewing: {\n                    type: 'property',\n                    data: {\n                        attemptToCoerceValue: sign,\n                        sourceInfo: {\n                            startOffset: mentionStart,\n                            endOffset: mentionEnd,\n                            snippet,\n                            vertexId: artifactId,\n                            textPropertyKey: propertyKey,\n                            textPropertyName: propertyName\n                        }\n                    }\n                }\n            })\n        },\n        doResolve(data) {\n            this._do('vertex', 'resolveTerm', data)\n        },\n        doUnresolve(termMentionId) {\n            this._do('vertex', 'unresolveTerm', { termMentionId })\n        },\n        doProperty(data) {\n            const { element, property } = data;\n            const { viewing } = this.state;\n            this.setState({\n                viewing: {\n                    type: 'property',\n                    data: { ...viewing.data, element, property }\n                }\n            });\n            this._do(element.type, 'setProperty', element.id, property);\n        },\n        doRelationship(data) {\n            this._do('edge', 'create', data);\n        },\n        doClose() {\n            this.props.closeDialog();\n        },\n        _do(...params) {\n            this.setState({ error: null, loading: true })\n            this.props.openlumifyApi.v1.dataRequest(...params)\n                .then(result => {\n                    this.props.reloadText();\n                    this.doClose();\n                })\n                .catch(error => {\n                    console.error(error)\n                    this.setState({ error, loading: false })\n                })\n        },\n        _onlyOneTerm() {\n            const { terms, selection } = this.props;\n            return terms.length === 1 && !selection;\n        },\n        _checkForElementsNeeded(props) {\n            if (!this._requestingIds) {\n                this._requestingIds = {};\n            }\n            const { terms, sourceVertexId, targetVertexId } = props;\n            const types = { vertices: [], edges: [] };\n            const { vertices, edges } = types;\n            const add = (type, id) => {\n                if (type && id && !(id in props[type]) && !(id in this._requestingIds)) {\n                    this._requestingIds[id] = true;\n                    types[type].push(id);\n                }\n            }\n\n            if (terms) {\n                terms.forEach(term => {\n                    const { termMentionFor, termMentionForElementId, resolvedToVertexId } = term;\n\n                    add(isVertex(term) ? 'vertices' : 'edges', termMentionForElementId);\n                });\n            }\n\n            if (sourceVertexId) {\n                add('vertices', sourceVertexId);\n            }\n\n            if (targetVertexId) {\n                add('vertices', targetVertexId);\n            }\n\n            if (vertices.length || edges.length) {\n                props.requestElements({ vertices, edges })\n            }\n        }\n    });\n\n    return redux.connect(\n        (state, props) => {\n            return {\n                privileges: userSelectors.getPrivileges(state),\n                concepts: ontologySelectors.getConcepts(state),\n                vertices: elementSelectors.getVertices(state),\n                edges: elementSelectors.getEdges(state),\n                ...props\n            }\n        },\n\n        (dispatch, {\n            closeDialog,\n            comment,\n            openFullscreen,\n            artifactId,\n            propertyKey,\n            propertyName\n        }) => ({\n            onFocusElements: ({ vertexIds = [], edgeIds = [] }) => {\n                dispatch(elementActions.setFocus({ vertexIds, edgeIds }));\n            },\n            requestElements({ vertices, edges }) {\n                dispatch(elementActions.get({ vertexIds: vertices, edgeIds: edges }));\n            },\n            onComment({ mentionStart, mentionEnd, snippet }) {\n                closeDialog();\n                comment({\n                    startOffset: mentionStart,\n                    endOffset: mentionEnd,\n                    snippet,\n                    vertexId: artifactId,\n                    textPropertyKey: propertyKey,\n                    textPropertyName: propertyName\n                });\n            },\n            onFullscreen(term) {\n                const id = term.termMentionForElementId;\n                const elements = {\n                    [isVertex(term) ? 'vertexIds' : 'edgeIds']: [id]\n                };\n                openFullscreen(elements);\n            },\n            onOpen(term) {\n                closeDialog();\n                const id = term.termMentionForElementId;\n                const elements = {\n                    [isVertex(term) ? 'vertices' : 'edges']: [id]\n                };\n                dispatch(selectionActions.set(elements));\n            }\n        })\n    )(TermContainer);\n});\n"]}