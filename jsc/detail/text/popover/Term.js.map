{"version":3,"sources":["../../../../js/detail/text/popover/Term.jsx"],"names":["define","createReactClass","PropTypes","classNames","Element","F","sharedProps","refId","string","isRequired","id","start","number","end","sandboxStatus","outVertexId","type","selectionProps","mentionStart","mentionEnd","snippet","url","src","getSelectionText","el","document","createElement","innerHTML","textContent","Icon","props","isImage","backgroundImage","Actions","actions","length","map","label","title","handler","classes","TermSelection","propTypes","render","onHoverTerm","onResolve","onProperty","onComment","canEdit","i18n","__html","sign","Justification","termMentionFor","termMentionForElementId","resolvedToVertexId","resolvedToEdgeId","onFocusElements","onOpen","onFullscreen","what","element","Resolved","conceptType","process","onUnresolve","getConceptOrDefault","vertices","concept","push","canUnresolve","vertex","imageIsFromConcept","image","glyphIconHref","displayName","Suggestion","resolvedFromTermMention","Term","term","oneOfType","shape","privileges","object","func","edges","rest","addTermToActions","name","event","itemProps","_","mapObject","EDIT"],"mappings":"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","file":"Term.js","sourcesContent":["define([\n    'create-react-class',\n    'prop-types',\n    'classnames',\n    'components/element/Element',\n    'util/vertex/formatters'\n], function(createReactClass, PropTypes, classNames, Element, F) {\n\n    const sharedProps = {\n        refId: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n        start: PropTypes.number.isRequired,\n        end: PropTypes.number.isRequired,\n        sandboxStatus: PropTypes.string.isRequired,\n        outVertexId: PropTypes.string.isRequired,\n        type: PropTypes.string.isRequired\n    };\n    const selectionProps = {\n        mentionStart: PropTypes.number.isRequired,\n        mentionEnd: PropTypes.number.isRequired,\n        type: PropTypes.string.isRequired,\n        snippet: PropTypes.string.isRequired\n    };\n\n    const url = src => `url(${src})`;\n    const getSelectionText = snippet => {\n        const el = document.createElement('div');\n        el.innerHTML = snippet;\n        return el.textContent;\n    }\n\n    const Icon = function(props) {\n\n        const { src, isImage = false } = props;\n        return (\n            <div className={`icon${isImage ? ' image' : ''}`}>\n                <div style={{ backgroundImage: url(src) }} />\n            </div>\n        );\n    };\n    const Actions = function(props) {\n        const { actions } = props;\n        if (actions.length) {\n            return (\n                <div className=\"buttons\">\n                    {actions.map(({ label, title, handler, classes = {} }) =>\n                        (<button\n                            title={title}\n                            className={classNames('btn btn-mini', classes)}\n                            key={label}\n                            onClick={handler}>{label}</button>)\n                    )}\n                </div>\n            )\n        }\n        return null;\n    };\n    const TermSelection = createReactClass({\n        propTypes: {\n            ...selectionProps\n        },\n        render() {\n            const { onHoverTerm, onResolve, onProperty, onComment, canEdit, snippet } = this.props;\n            const actions = canEdit ? [\n                { label: i18n('detail.text.terms.resolve'), title: i18n('detail.text.terms.resolve.tooltip'), handler: this.onResolve, classes: { 'btn-success': true } },\n                { label: i18n('detail.text.terms.property'), title: i18n('detail.text.terms.property.tooltip'), handler: onProperty },\n                { label: i18n('detail.text.terms.comment'), title: i18n('detail.text.terms.comment.tooltip'), handler: onComment }\n            ] : [];\n\n            return (\n                <li className=\"termselection\" onMouseEnter={onHoverTerm}>\n                    <Icon src={'../img/glyphicons_custom/selection.png'} />\n                    <section>\n                        <Actions actions={actions} />\n                        <h1><strong>{i18n('detail.text.terms.selection')}</strong></h1>\n                        <article\n                            title={getSelectionText(snippet)}\n                            dangerouslySetInnerHTML={{ __html: snippet }} />\n                    </section>\n                </li>\n            )\n        },\n        onResolve() {\n            const { sign, mentionStart, mentionEnd, snippet } = this.props;\n            this.props.onResolve({ sign, mentionStart, mentionEnd, snippet });\n        }\n    });\n    const Justification = createReactClass({\n        propTypes: {\n            ...sharedProps,\n            sandboxStatus: PropTypes.string.isRequired,\n            termMentionFor: PropTypes.string.isRequired,\n            termMentionForElementId: PropTypes.string.isRequired,\n            snippet: PropTypes.string.isRequired,\n            resolvedToVertexId: PropTypes.string,\n            resolvedToEdgeId: PropTypes.string\n        },\n        render() {\n            const {\n                snippet, onHoverTerm, onFocusElements, onOpen, onFullscreen,\n                termMentionFor, termMentionForElementId,\n                resolvedToEdgeId, resolvedToVertexId } = this.props;\n\n            const actions = [\n                { label: i18n('detail.text.terms.open'), title: i18n('detail.text.terms.open.tooltip'), handler: onOpen },\n                { label: i18n('detail.text.terms.openfullscreen'), title: i18n('detail.text.terms.openfullscreen.tooltip'), handler: onFullscreen }\n            ]\n            const what = i18n(`detail.text.terms.justification.prefix.${termMentionFor === 'PROPERTY' ? 'property' : 'element'}`);\n            const type = (\n                termMentionFor === 'VERTEX' || (\n                    termMentionFor === 'PROPERTY' && termMentionForElementId === resolvedToVertexId\n                )) ? 'vertices' : 'edges';\n            const element = this.props[type][termMentionForElementId];\n\n            // Server sanitizes snippets so be dangerous\n            return (\n                <li className=\"justification\" onMouseEnter={onHoverTerm}>\n                    <Icon src={'../img/glyphicons_custom/justification.png'} />\n                    <section>\n                        <Actions actions={actions} />\n                        <h1><strong>{i18n('detail.text.terms.justification')}</strong> {what} <Element element={element} onFocusElements={onFocusElements} /></h1>\n                        <article\n                            title={getSelectionText(snippet)}\n                            dangerouslySetInnerHTML={{ __html: snippet }} />\n                    </section>\n                </li>\n            )\n        }\n    })\n    const Resolved = createReactClass({\n        propTypes: {\n            ...sharedProps,\n            title: PropTypes.string.isRequired,\n            termMentionFor: PropTypes.string.isRequired,\n            resolvedToVertexId: PropTypes.string.isRequired,\n            resolvedToEdgeId: PropTypes.string.isRequired,\n            conceptType: PropTypes.string,\n            process: PropTypes.string\n        },\n        render() {\n            const {\n                title,\n                onOpen,\n                onFullscreen,\n                onUnresolve,\n                onHoverTerm,\n                onFocusElements,\n                canEdit,\n                termMentionFor,\n                sandboxStatus,\n                conceptType,\n                getConceptOrDefault,\n                resolvedToVertexId,\n                vertices\n            } = this.props;\n            const concept = getConceptOrDefault(conceptType);\n            const element = vertices[resolvedToVertexId];\n            const actions = [];\n\n            if (element) {\n                actions.push(\n                        { label: i18n('detail.text.terms.open'), title: i18n('detail.text.terms.open.tooltip'), handler: onOpen },\n                        { label: i18n('detail.text.terms.openfullscreen'), title: i18n('detail.text.terms.openfullscreen.tooltip'), handler: onFullscreen }\n                    );\n\n                    const canUnresolve = canEdit && termMentionFor === 'VERTEX' && sandboxStatus !== 'PUBLIC';\n                if (canUnresolve) {\n                        actions.push({ label: i18n('detail.text.terms.unresolve'), title: i18n('detail.text.terms.unresolve.tooltip'), handler: onUnresolve, classes: { 'btn-danger': true }})\n                    }\n            }\n\n            return (\n                <li className=\"resolved\" onMouseEnter={onHoverTerm}>\n                    {element && !F.vertex.imageIsFromConcept(element) ? (\n                        <Icon isImage src={F.vertex.image(element, null, 30)} />\n                    ) : (\n                        <Icon src={concept.glyphIconHref} />\n                    )}\n                    <section>\n                            <Actions actions={actions} />\n                            <h1><strong>{i18n('detail.text.terms.resolved')}</strong> {i18n('detail.text.terms.resolved.prefix')} <em>{concept.displayName}</em> <Element element={element} onFocusElements={onFocusElements} /></h1>\n                        <article>\n                            <span className=\"selection\">{title}</span>\n                        </article>\n                    </section>\n                </li>\n            )\n        }\n    })\n    const Suggestion = createReactClass({\n        propTypes: {\n            ...sharedProps,\n            title: PropTypes.string.isRequired,\n            process: PropTypes.string,\n            conceptType: PropTypes.string\n        },\n        render() {\n            const { title, process, conceptType, getConceptOrDefault, onHoverTerm, onProperty, canEdit } = this.props;\n            const actions = [];\n            const concept = getConceptOrDefault(conceptType);\n            if (canEdit) {\n                actions.push({ label: i18n('detail.text.terms.resolve'), title: i18n('detail.text.terms.resolve.tooltip'), handler: this.onResolve, classes: { 'btn-success': true } });\n            }\n            return (\n                <li className=\"suggestion\" onMouseEnter={onHoverTerm}>\n                    <Icon src={'../img/glyphicons/glyphicons_194_circle_question_mark@2x.png'} />\n                    <section>\n                        <Actions actions={actions} />\n                        <h1>\n                            <strong>{i18n('detail.text.terms.resolvable')}</strong> <em>{concept.displayName}</em> {i18n('detail.text.terms.resolvable.prefix')} <strong>{process}</strong>\n                        </h1>\n                        <article>\n                            <span className=\"selection\">{title}</span>\n                        </article>\n                    </section>\n                </li>\n            )\n        },\n        onResolve() {\n            const {\n                conceptType,\n                start: mentionStart,\n                end: mentionEnd,\n                title: sign,\n                id: resolvedFromTermMention\n            } = this.props;\n            this.props.onResolve({\n                conceptType,\n                mentionStart,\n                mentionEnd,\n                sign,\n                resolvedFromTermMention\n            });\n        }\n    })\n\n\n    const Term = createReactClass({\n        propTypes: {\n            term: PropTypes.oneOfType([\n                PropTypes.shape(sharedProps),\n                PropTypes.shape(selectionProps)\n            ]).isRequired,\n            privileges: PropTypes.object.isRequired,\n            actions: PropTypes.object.isRequired,\n            getConceptOrDefault: PropTypes.func.isRequired\n        },\n        render() {\n            const { term, privileges, actions, getConceptOrDefault, vertices, edges, onFocusElements, ...rest } = this.props;\n            const { type } = term;\n            const addTermToActions = (func, name) => {\n                if (name === 'onResolve') return func;\n                return (event) => func(term, event);\n            };\n            const itemProps = {\n                ...term,\n                ..._.mapObject(actions, addTermToActions),\n                getConceptOrDefault,\n                vertices,\n                edges,\n                onFocusElements,\n                onHoverTerm: this.onHoverTerm,\n                canEdit: privileges.EDIT,\n            };\n\n            switch (type) {\n                case 'resolved': return (<Resolved {...itemProps} />);\n                case 'suggestion': return (<Suggestion {...itemProps} />);\n                case 'justification': return (<Justification {...itemProps} />);\n                case 'selection': return (<TermSelection {...itemProps} />);\n            }\n\n            return null;\n        },\n        onHoverTerm(event) {\n            this.props.onHoverTerm(this.props.term.refId);\n        }\n    });\n\n    return Term;\n});\n\n"]}