var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};function _objectWithoutProperties(obj,keys){var target={};for(var i in obj){if(keys.indexOf(i)>=0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i]=obj[i];}return target;}define(['create-react-class','prop-types','./Term','components/Alert'],function(createReactClass,PropTypes,Term,Alert){var TermList=createReactClass({displayName:'TermList',propTypes:{terms:PropTypes.array.isRequired},render:function render(){var _this=this;var _props=this.props,selection=_props.selection,terms=_props.terms,rest=_objectWithoutProperties(_props,['selection','terms']);var transformed=terms.map(function(term){var termMentionFor=term.termMentionFor,resolvedToEdgeId=term.resolvedToEdgeId,resolvedToVertexId=term.resolvedToVertexId;var resolved=resolvedToVertexId&&resolvedToEdgeId;var type=void 0;if(resolved)type='resolved';else if(termMentionFor)type='justification';else type='suggestion';return _extends({},term,{type:type});});var order=['resolved','suggestion','justification'];var sorted=_.sortBy(transformed,function(_ref){var type=_ref.type;return order.indexOf(type);});if(selection){sorted.splice(0,0,_extends({},selection,{type:'selection',id:'selection',refId:null}));}if(sorted.length){return React.createElement('ul',{onMouseLeave:this.onMouseLeave},sorted.map(function(term){return React.createElement(Term,_extends({key:term.id,onHoverTerm:_this.onHoverTerm,term:term},rest));}));}return React.createElement(Alert,{error:i18n('detail.text.terms.list.error')});},onHoverTerm:function onHoverTerm(id){this.props.onHoverTerm(id);},onMouseLeave:function onMouseLeave(){this.props.onHoverTerm();}});return TermList;});
//# sourceMappingURL=TermList.js.map
