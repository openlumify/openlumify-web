{"version":3,"sources":["../../../../../js/detail/text/popover/forms/Property.jsx"],"names":["define","createReactClass","PropTypes","Attacher","Property","propTypes","onCancel","func","isRequired","onSave","attemptToCoerceValue","string","sourceInfo","object","getInitialState","shouldComponentUpdate","nextProps","nextState","_ref","error","props","$node","$","attacher","_node","trigger","render","state","element","property","padding","marginBottom","i18n","propFormPropertyChanged","inst","setState","propFormVertexChanged","vertex","addProperty","node","data","closeDropdown","r"],"mappings":"qMAAAA,OAAO,CACH,oBADG,CAEH,YAFG,CAGH,qBAHG,CAAP,CAIG,SACCC,gBADD,CAECC,SAFD,CAGCC,QAHD,CAGW,CAEV,GAAMC,UAAWH,iBAAiB,wBAC9BI,UAAW,CACPC,SAAUJ,UAAUK,IAAV,CAAeC,UADlB,CAEPC,OAAQP,UAAUK,IAAV,CAAeC,UAFhB,CAGPE,qBAAsBR,UAAUS,MAHzB,CAIPC,WAAYV,UAAUW,MAJf,CADmB,CAQ9BC,eAR8B,2BAQZ,CACd,MAAO,EAAP,CACH,CAV6B,CAY9BC,qBAZ8B,gCAYRC,SAZQ,CAYGC,SAZH,CAYc,CACxC,GAAI,KAAKC,IAAL,EAAaF,UAAUG,KAAvB,EAAgCH,UAAUG,KAAV,GAAoB,KAAKC,KAAL,CAAWD,KAAnE,CAA0E,CACtE,GAAME,OAAQC,EAAE,KAAKJ,IAAL,CAAUK,QAAV,CAAmBC,KAArB,CAAd,CACAH,MAAMI,OAAN,CAAc,eAAd,CAA+B,CAAEN,MAAOH,UAAUG,KAAnB,CAA/B,EACH,CAGD,MAAO,MAAP,CACH,CApB6B,CAsB9BO,MAtB8B,kBAsBrB,2BAC0D,KAAKN,KAD/D,CACGd,QADH,QACGA,QADH,CACaG,MADb,QACaA,MADb,CACqBC,oBADrB,QACqBA,oBADrB,CAC2CE,UAD3C,QAC2CA,UAD3C,YAEyB,KAAKe,KAF9B,CAEGC,OAFH,QAEGA,OAFH,CAEYC,QAFZ,QAEYA,QAFZ,CAIL,MACI,4BAAK,UAAU,MAAf,CAAsB,MAAO,CAACC,QAAS,CAAV,CAA7B,EACI,0BAAI,MAAO,CAACC,aAAc,QAAf,CAAyBD,QAAS,aAAlC,CAAX,EACME,KAAK,yCAAL,CADN,CADJ,CAII,oBAAC,QAAD,EACI,cAAc,wCADlB,CAEI,SAAU,CACNC,wBAAyB,iCAACC,IAAD,MAAwB,IAAfL,SAAe,MAAfA,QAAe,CAC7C,MAAKM,QAAL,CAAc,CAAEN,iBAAF,CAAd,EACH,CAHK,CAINO,sBAAuB,+BAACF,IAAD,OAAsB,IAAbG,OAAa,OAAbA,MAAa,CACzC,MAAKF,QAAL,CAAc,CAAEP,QAASS,MAAX,CAAd,EACH,CANK,CAONC,YAAa,qBAACJ,IAAD,OAA6B,IAApBK,KAAoB,OAApBA,IAAoB,CAAXC,IAAW,6CAC9BZ,QAD8B,CACRY,IADQ,CAC9BZ,OAD8B,CACrBC,QADqB,CACRW,IADQ,CACrBX,QADqB,CAEtCpB,OAAO,CAAEmB,eAAF,CAAWC,iBAAX,CAAP,EACH,CAVK,CAWNY,cAAe,wBAAM,CACjBnC,WACH,CAbK,CAFd,CAiBI,IAAK,eAAK,CAAC,MAAKY,IAAL,CAAYwB,CAAZ,CAAc,CAjB7B,CAkBI,KAAMd,OAlBV,CAmBI,SAAUC,QAnBd,CAoBI,oBAAqB,KApBzB,CAqBI,kBAAmB,KArBvB,CAsBI,wBAAyB,IAtB7B,CAuBI,qBAAsBnB,oBAvB1B,CAwBI,WAAYE,UAxBhB,EAJJ,CADJ,CAiCH,CA3D6B,CAAjB,CAAjB,CA8DA,MAAOR,SAAP,CACH,CAxED","file":"Property.js","sourcesContent":["define([\n    'create-react-class',\n    'prop-types',\n    'components/Attacher'\n], function(\n    createReactClass,\n    PropTypes,\n    Attacher) {\n\n    const Property = createReactClass({\n        propTypes: {\n            onCancel: PropTypes.func.isRequired,\n            onSave: PropTypes.func.isRequired,\n            attemptToCoerceValue: PropTypes.string,\n            sourceInfo: PropTypes.object\n        },\n\n        getInitialState() {\n            return {};\n        },\n\n        shouldComponentUpdate(nextProps, nextState) {\n            if (this._ref && nextProps.error && nextProps.error !== this.props.error) {\n                const $node = $(this._ref.attacher._node)\n                $node.trigger('propertyerror', { error: nextProps.error })\n            }\n\n            // Work around flight component not handling state changes well\n            return false;\n        },\n\n        render() {\n            const { onCancel, onSave, attemptToCoerceValue, sourceInfo } = this.props;\n            const { element, property } = this.state;\n\n            return (\n                <div className=\"form\" style={{padding: 0}}>\n                    <h1 style={{marginBottom: '-0.3em', padding: '0.5em 1em 0'}}>\n                        { i18n('detail.text.terms.form.resolve.property') }\n                    </h1>\n                    <Attacher\n                        componentPath=\"detail/dropdowns/propertyForm/propForm\"\n                        behavior={{\n                            propFormPropertyChanged: (inst, { property }) => {\n                                this.setState({ property })\n                            },\n                            propFormVertexChanged: (inst, { vertex }) => {\n                                this.setState({ element: vertex })\n                            },\n                            addProperty: (inst, { node, ...data }) => {\n                                const { element, property } = data;\n                                onSave({ element, property })\n                            },\n                            closeDropdown: () => {\n                                onCancel();\n                            }\n                        }}\n                        ref={r => {this._ref = r}}\n                        data={element}\n                        property={property}\n                        allowDeleteProperty={false}\n                        allowEditProperty={false}\n                        disableDropdownFeatures={true}\n                        attemptToCoerceValue={attemptToCoerceValue}\n                        sourceInfo={sourceInfo}\n                    />\n                </div>\n            )\n        }\n    });\n\n    return Property;\n});\n"]}