{"version":3,"sources":["../../../../../js/detail/text/popover/forms/Unresolve.jsx"],"names":["define","createReactClass","PropTypes","classNames","Element","Unresolve","render","props","error","onCancel","loading","conceptType","getConceptOrDefault","vertices","resolvedToVertexId","title","concept","element","i18n","displayName","fontStyle","color","fontSize","onUnresolve","id"],"mappings":"AAAAA,OAAO,CACH,oBADG,CAEH,YAFG,CAGH,YAHG,CAIH,4BAJG,CAAP,CAKG,SAASC,gBAAT,CAA2BC,SAA3B,CAAsCC,UAAtC,CAAkDC,OAAlD,CAA2D,CAE1D,GAAMC,WAAYJ,iBAAiB,yBAC/BK,MAD+B,kBACtB,YACuG,KAAKC,KAD5G,CACGC,KADH,QACGA,KADH,CACUC,QADV,QACUA,QADV,CACoBC,OADpB,QACoBA,OADpB,CAC6BC,WAD7B,QAC6BA,WAD7B,CAC0CC,mBAD1C,QAC0CA,mBAD1C,CAC+DC,QAD/D,QAC+DA,QAD/D,CACyEC,kBADzE,QACyEA,kBADzE,CAC6FC,KAD7F,QAC6FA,KAD7F,CAGL,GAAMC,SAAUJ,oBAAoBD,WAApB,CAAhB,CACA,GAAMM,SAAUJ,SAASC,kBAAT,CAAhB,CAEA,MACI,4BAAK,UAAU,MAAf,EACMN,MAAS,oBAAC,KAAD,EAAO,MAAOA,KAAd,EAAT,CAAoC,IAD1C,CAGI,8BAAKU,KAAK,kCAAL,CAAL,CAHJ,CAKI,6BAAIA,KAAK,oCAAL,CAAJ,KAAgD,8BAAKF,QAAQG,WAAb,CAAhD,MAAgF,oBAAC,OAAD,EAAS,QAASF,OAAlB,EAAhF,KALJ,CAMI,yBAAG,MAAO,CAACG,UAAW,QAAZ,CAAsBC,MAAO,MAA7B,CAAqCC,SAAU,KAA/C,CAAV,EAAkEJ,KAAK,uCAAL,CAAlE,CANJ,CAQI,2BAAK,UAAU,SAAf,EACI,8BAAQ,QAAST,QAAjB,CAA2B,UAAU,wBAArC,EAA+DS,KAAK,+BAAL,CAA/D,CADJ,CAEI,8BAAQ,QAAS,KAAKK,WAAtB,CAAmC,UAAWpB,WAAW,0BAAX,CAAuC,CAAEO,eAAF,CAAvC,CAA9C,EAAoGQ,KAAK,yCAAL,CAApG,CAFJ,CARJ,CADJ,CAeH,CAtB8B,CAuB/BK,WAvB+B,uBAuBjB,CACV,KAAKhB,KAAL,CAAWgB,WAAX,CAAuB,KAAKhB,KAAL,CAAWiB,EAAlC,EACH,CAzB8B,CAAjB,CAAlB,CA4BA,MAAOnB,UAAP,CACH,CApCD","file":"Unresolve.js","sourcesContent":["define([\n    'create-react-class',\n    'prop-types',\n    'classnames',\n    'components/element/Element'\n], function(createReactClass, PropTypes, classNames, Element) {\n\n    const Unresolve = createReactClass({\n        render() {\n            const { error, onCancel, loading, conceptType, getConceptOrDefault, vertices, resolvedToVertexId, title } = this.props;\n\n            const concept = getConceptOrDefault(conceptType);\n            const element = vertices[resolvedToVertexId];\n\n            return (\n                <div className=\"form\">\n                    { error ? (<Alert error={error} />) : null }\n\n                    <h1>{i18n('detail.text.terms.form.unresolve')}</h1>\n\n                    <p>{i18n('detail.text.terms.form.unresolve.p')} <em>{concept.displayName}</em>, <Element element={element} />?</p>\n                    <p style={{fontStyle: 'italic', color: '#999', fontSize: '90%'}}>{i18n('detail.text.terms.form.unresolve.note')}</p>\n\n                    <div className=\"buttons\">\n                        <button onClick={onCancel} className=\"btn btn-link btn-small\">{i18n('detail.text.terms.form.cancel')}</button>\n                        <button onClick={this.onUnresolve} className={classNames('btn btn-danger btn-small', { loading })}>{i18n('detail.text.terms.form.unresolve.button')}</button>\n                    </div>\n                </div>\n            )\n        },\n        onUnresolve() {\n            this.props.onUnresolve(this.props.id);\n        }\n    });\n\n    return Unresolve;\n});\n"]}