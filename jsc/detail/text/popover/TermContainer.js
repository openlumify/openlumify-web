var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _objectWithoutProperties(obj,keys){var target={};for(var i in obj){if(keys.indexOf(i)>=0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i]=obj[i];}return target;}define(['create-react-class','prop-types','react-redux','data/web-worker/store/user/selectors','data/web-worker/store/selection/actions','data/web-worker/store/element/actions','data/web-worker/store/ontology/selectors','data/web-worker/store/element/selectors','./TermList','./forms/Resolve','./forms/Unresolve','./forms/Property','./forms/Relationship'],function(createReactClass,PropTypes,redux,userSelectors,selectionActions,elementActions,ontologySelectors,elementSelectors,TermList,Resolve,Unresolve,Property,Relationship){var THING='http://www.w3.org/2002/07/owl#Thing';var isVertex=function isVertex(_ref){var termMentionFor=_ref.termMentionFor,termMentionForElementId=_ref.termMentionForElementId,resolvedToVertexId=_ref.resolvedToVertexId;return Boolean(termMentionFor==='VERTEX'||termMentionForElementId===resolvedToVertexId);};var TermContainer=createReactClass({displayName:'TermContainer',propTypes:{onOpen:PropTypes.func.isRequired,onFullscreen:PropTypes.func.isRequired,onComment:PropTypes.func.isRequired,artifactId:PropTypes.string.isRequired,propertyKey:PropTypes.string.isRequired,propertyName:PropTypes.string.isRequired,terms:PropTypes.array,selection:PropTypes.object,sourceVertexId:PropTypes.string,targetVertexId:PropTypes.string},getInitialState:function getInitialState(){var _props=this.props,terms=_props.terms,selection=_props.selection,sourceVertexId=_props.sourceVertexId,targetVertexId=_props.targetVertexId;if(terms||selection){return{viewing:{type:'list'}};}if(sourceVertexId&&targetVertexId){return{viewing:{type:'relationship',data:{sourceVertexId:sourceVertexId,targetVertexId:targetVertexId}}};}throw new Error('Invalid props given: must have terms/selection or source/target');},componentDidMount:function componentDidMount(){this._checkForElementsNeeded(this.props);},componentWillUnmount:function componentWillUnmount(){this.props.onHoverTerm();},componentWillReceiveProps:function componentWillReceiveProps(nextProps){this._checkForElementsNeeded(nextProps);},render:function render(){return React.createElement('div',null,this.getContent());},getContent:function getContent(){var _props2=this.props,terms=_props2.terms,selection=_props2.selection,onOpen=_props2.onOpen,onComment=_props2.onComment,onFullscreen=_props2.onFullscreen,concepts=_props2.concepts,rest=_objectWithoutProperties(_props2,['terms','selection','onOpen','onComment','onFullscreen','concepts']);var _state=this.state,viewing=_state.viewing,error=_state.error,loading=_state.loading;var formState={error:error,loading:loading};var actions={onOpen:onOpen,onFullscreen:onFullscreen,onComment:onComment,onUnresolve:this.onUnresolve,onResolve:this.onResolve,onProperty:this.onProperty};rest.getConceptOrDefault=function(){var iri=arguments.length>0&&arguments[0]!==undefined?arguments[0]:THING;return concepts[iri]||concepts[THING];};switch(viewing.type){case'list':return React.createElement(TermList,_extends({actions:actions,selection:selection,terms:terms},rest));case'resolve':return React.createElement(Resolve,_extends({onResolve:this.doResolve,onCancel:this.onViewList},viewing.data,rest,formState));case'unresolve':return React.createElement(Unresolve,_extends({onUnresolve:this.doUnresolve,onCancel:this.onViewList},viewing.data,rest,formState));case'property':return React.createElement(Property,_extends({onSave:this.doProperty,onCancel:this.onViewList},viewing.data,rest,formState));case'relationship':return React.createElement(Relationship,_extends({onSave:this.doRelationship,onCancel:this.doClose},viewing.data,rest,formState));}},onViewList:function onViewList(){this.setState({error:null,viewing:{type:'list'}});},_dataForTerm:function _dataForTerm(term){var _props3=this.props,artifactId=_props3.artifactId,propertyName=_props3.propertyName,propertyKey=_props3.propertyKey;var data=_extends({},term,{artifactId:artifactId,propertyName:propertyName,propertyKey:propertyKey});return data;},onUnresolve:function onUnresolve(term){this.setState({viewing:{type:'unresolve',data:this._dataForTerm(term)}});},onResolve:function onResolve(term){this.setState({viewing:{type:'resolve',data:this._dataForTerm(term)}});},onProperty:function onProperty(term){var _props4=this.props,artifactId=_props4.artifactId,propertyName=_props4.propertyName,propertyKey=_props4.propertyKey;var snippet=term.snippet,mentionEnd=term.mentionEnd,mentionStart=term.mentionStart,sign=term.sign;this.setState({viewing:{type:'property',data:{attemptToCoerceValue:sign,sourceInfo:{startOffset:mentionStart,endOffset:mentionEnd,snippet:snippet,vertexId:artifactId,textPropertyKey:propertyKey,textPropertyName:propertyName}}}});},doResolve:function doResolve(data){this._do('vertex','resolveTerm',data);},doUnresolve:function doUnresolve(termMentionId){this._do('vertex','unresolveTerm',{termMentionId:termMentionId});},doProperty:function doProperty(data){var element=data.element,property=data.property;var viewing=this.state.viewing;this.setState({viewing:{type:'property',data:_extends({},viewing.data,{element:element,property:property})}});this._do(element.type,'setProperty',element.id,property);},doRelationship:function doRelationship(data){this._do('edge','create',data);},doClose:function doClose(){this.props.closeDialog();},_do:function _do(){var _props$openlumifyApi$,_this=this;this.setState({error:null,loading:true});(_props$openlumifyApi$=this.props.openlumifyApi.v1).dataRequest.apply(_props$openlumifyApi$,arguments).then(function(result){_this.props.reloadText();_this.doClose();}).catch(function(error){console.error(error);_this.setState({error:error,loading:false});});},_onlyOneTerm:function _onlyOneTerm(){var _props5=this.props,terms=_props5.terms,selection=_props5.selection;return terms.length===1&&!selection;},_checkForElementsNeeded:function _checkForElementsNeeded(props){var _this2=this;if(!this._requestingIds){this._requestingIds={};}var terms=props.terms,sourceVertexId=props.sourceVertexId,targetVertexId=props.targetVertexId;var types={vertices:[],edges:[]};var vertices=types.vertices,edges=types.edges;var add=function add(type,id){if(type&&id&&!(id in props[type])&&!(id in _this2._requestingIds)){_this2._requestingIds[id]=true;types[type].push(id);}};if(terms){terms.forEach(function(term){var termMentionFor=term.termMentionFor,termMentionForElementId=term.termMentionForElementId,resolvedToVertexId=term.resolvedToVertexId;add(isVertex(term)?'vertices':'edges',termMentionForElementId);});}if(sourceVertexId){add('vertices',sourceVertexId);}if(targetVertexId){add('vertices',targetVertexId);}if(vertices.length||edges.length){props.requestElements({vertices:vertices,edges:edges});}}});return redux.connect(function(state,props){return _extends({privileges:userSelectors.getPrivileges(state),concepts:ontologySelectors.getConcepts(state),vertices:elementSelectors.getVertices(state),edges:elementSelectors.getEdges(state)},props);},function(dispatch,_ref2){var closeDialog=_ref2.closeDialog,comment=_ref2.comment,openFullscreen=_ref2.openFullscreen,artifactId=_ref2.artifactId,propertyKey=_ref2.propertyKey,propertyName=_ref2.propertyName;return{onFocusElements:function onFocusElements(_ref3){var _ref3$vertexIds=_ref3.vertexIds,vertexIds=_ref3$vertexIds===undefined?[]:_ref3$vertexIds,_ref3$edgeIds=_ref3.edgeIds,edgeIds=_ref3$edgeIds===undefined?[]:_ref3$edgeIds;dispatch(elementActions.setFocus({vertexIds:vertexIds,edgeIds:edgeIds}));},requestElements:function requestElements(_ref4){var vertices=_ref4.vertices,edges=_ref4.edges;dispatch(elementActions.get({vertexIds:vertices,edgeIds:edges}));},onComment:function onComment(_ref5){var mentionStart=_ref5.mentionStart,mentionEnd=_ref5.mentionEnd,snippet=_ref5.snippet;closeDialog();comment({startOffset:mentionStart,endOffset:mentionEnd,snippet:snippet,vertexId:artifactId,textPropertyKey:propertyKey,textPropertyName:propertyName});},onFullscreen:function onFullscreen(term){var id=term.termMentionForElementId;var elements=_defineProperty({},isVertex(term)?'vertexIds':'edgeIds',[id]);openFullscreen(elements);},onOpen:function onOpen(term){closeDialog();var id=term.termMentionForElementId;var elements=_defineProperty({},isVertex(term)?'vertices':'edges',[id]);dispatch(selectionActions.set(elements));}};})(TermContainer);});
//# sourceMappingURL=TermContainer.js.map
