{"version":3,"sources":["../../js/dashboard/dashboard.js"],"names":["define","defineComponent","registry","withElementUpdates","withDataRequest","withWorkspaceHelper","Promise","Attacher","template","itemTemplate","addItemTemplate","ToolbarExtensionPopover","gridStack","gridStackJQueryUI","require","documentExtensionPoint","e","_","isString","identifier","componentPath","isObject","report","title","description","url","legacyName","isFunction","supportsResponse","label","isArray","icon","action","type","reportRenderers","toolbarExtensions","toolbarExtensionsById","extensions","extensionsById","layouts","ConfigPopover","ignoreGridStackChange","defaultGridOptions","Object","freeze","width","height","Dashboard","defaultAttrs","containerSelector","headerSelector","refreshSelector","editDashboardSelector","itemContentSelector","configureItemSelector","removeItemSelector","gridScrollerSelector","toolbarExtensionSelector","after","self","extensionsForPoint","indexBy","request","dataRequest","bind","$node","text","on","$","target","closest","length","trigger","onEditDashboard","onConfigure","onRemoveItem","onRefresh","onToolbarExtensionClick","onChangeTitle","onAddItem","event","data","stopPropagation","onConfigurationChanged","node","is","removeAddItem","document","onWindowResize","onEscapeKey","onWorkspaceUpdated","onDashboardRefreshData","load","once","loadWorkspaceAndListenOn","onWorkspaceLoaded","name","visible","adjustHeader","find","$item","$button","extensionId","extension","itemId","attr","item","findWhere","dashboard","items","id","toggleExtensionPopover","Error","JSON","stringify","hasClass","toggleEditDashboard","where","forEach","$gridItem","filter","onFinishedLoading","attacher","removeClass","onShowError","teardown","html","addClass","append","i18n","onScroll","toggleClass","select","scrollTop","workspace","workspaceId","currentWorkspaceId","workspaceTitle","previousTitle","newTitle","children","val","requestTitleChange","catch","isCreator","createdBy","openlumifyData","currentUser","loadDashboards","cloned","cloneItemConfiguration","changed","isEqual","configuringItem","options","recreate","createDashboardItemComponent","updateToolbarExtensions","index","findIndex","i","splice","parse","pick","onConfigureItem","configureNode","alreadyAttached","lookupComponent","defer","teardownComponent","_ConfigPopover","attachTo","scrollSelector","$toolbarButton","toolbarExtension","teardownAllComponents","then","Component","dashboardId","which","value","trim","replace","blur","ui","keyCode","ESCAPE","$edit","$header","gridstack","batchUpdate","finished","each","removeWidget","disable","resolve","prop","enable","createDashboardItemToGridStack","error","console","commit","newItem","hide","gridItem","$content","done","createDashboardItemNode","undefined","placeholderGridItem","placeholderMetrics","metricsForGridItem","grid","configuration","metrics","extend","addWidget","x","y","result","dashboardItemId","push","updateAllDashboardItems","stackItemMap","nodes","reject","el","onGridChange","validItems","createDashboardItemToGridStackInBatch","map","TRANSITION_END","animationComplete","off","concurrency","stack","begin","createNewDashboardItem","movable","resizable","path","isReport","reportConfiguration","reportRendererIdentifier","reportRenderer","defaultRenderer","renderer","removeAttr","flushContent","component","params","behavior","showError","finishedLoading","configureItem","configurationChanged","attach","empty","legacyFlightEventsNode","manuallyFinishLoading","renderItems","initializeGridStack","gridItems","chain","compact","all","dataAttrs","gridOptions","AddItem","$container","cellHeight","float","animate","verticalMargin","alwaysShowResizeHandle","extended","key","config","dom","creator","concat","validExtensions","canHandle","element","isElement","get","$toolbar","$configureLi","$extensionRows","tooltip","css","remove","before","prepend","dashboards","warn","requestDashboards","itemIds","shift","$input","$span","insertAfter","next","outerWidth"],"mappings":"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","file":"dashboard.js","sourcesContent":["define([\n    'flight/lib/component',\n    'configuration/plugins/registry',\n    'util/popovers/withElementScrollingPositionUpdates',\n    'util/withDataRequest',\n    'util/withWorkspaceHelper',\n    'util/promise',\n    'util/component/attacher',\n    './dashboardTpl.hbs',\n    './item.hbs',\n    './addItemTpl.hbs',\n    './extensionToolbarPopover',\n    'gridstack',\n    'gridstack-ui',\n    'require',\n    './registerDefaultItems',\n    './reportRenderers'\n], function(\n    defineComponent,\n    registry,\n    withElementUpdates,\n    withDataRequest,\n    withWorkspaceHelper,\n    Promise,\n    Attacher,\n    template,\n    itemTemplate,\n    addItemTemplate,\n    ToolbarExtensionPopover,\n    gridStack,\n    gridStackJQueryUI,\n    require) {\n    'use strict';\n\n    /**\n     * @typedef org.openlumify.dashboard.item~filter\n     * @property {string} propertyName Iri of property name to filter.\n     * @property {string} predicate Type of filter operation `has`, `hasNot`, `equal`, `contains`, `range`, `<`, `>`\n     * @property {Array.<object>} [values] The values for the property length of `2` when range filter, usually `1`\n     */\n\n    /**\n     * `term` Group by value of `field` and return counts.\n     *\n     * `geohash` Group by value of `field` with geohash [`precision` _(required)_](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-geohashgrid-aggregation.html) and return counts.\n     *\n     * `histogram` Group range (specified by [`interval` _(required)_](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-histogram-aggregation.html)) of values and their counts.\n     *\n     * `statistics` Statistics for property: [`min`, `max`, `count`, `average`, `sum`](https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-stats-aggregation.html).\n     *\n     * @typedef org.openlumify.dashboard.item~aggregation\n     * @property {string} type Type of aggregation: `term`, `geohash`, `histogram`\n     * @property {string} name Name the aggregation that's returned with results. Useful when more than one aggregation is used.\n     * @property {string} field Property name iri to aggregate.\n     */\n\n    /**\n     * These work for search `endpoints`\n     * * `vertex/search`: Only return vertices.\n     * * `edge/search`: Only return edges.\n     * * `element/search`: Search both vertices and edges.\n     *\n     * @typedef org.openlumify.dashboard.item~reportParametersForSearch\n     * @property {string} q Search query, or asterisk.\n     * @property {number} [size] Number of results to limit to, use `0` if using aggregations.\n     * @property {number} [offset] Index of results to start.\n     * @property {string} filter JSON array of {@link org.openlumify.dashboard.item~filter} objects to `AND`.\n     * @property {Array.<string>} [aggregations] List of {@link org.openlumify.dashboard.item~aggregation} to apply, each item is json string.\n     * The aggregations should be converted from objects to strings. See example.\n     * @example\n     * {\n     *     q: '*',\n     *     size: 0,\n     *     filter: '[]',\n     *     aggregations: [\n     *         {\n     *             type: 'term',\n     *             name: 'field',\n     *             field: 'http://openlumify.org#conceptType'\n     *         }\n     *     ].map(JSON.stringify) // Convert each item to strings\n     * }\n     *\n     */\n\n    /**\n     * Allow custom content to be rendered in a card on dashboards.\n     * They can be included in defaults dashboards using the {@link org.openlumify.dashboard.layout}\n     * extension, or added manually by users using the \"Add Item\" button\n     * when editing dashboards.\n     *\n     * The bundled items are defined in [registerDefaultItems.js](https://github.com/openlumify/openlumify/blob/master/web/war/src/main/webapp/js/dashboard/registerDefaultItems.js) for examples.\n     *\n     * Either `componentPath` or `report` is required.\n     *\n     * ## Report\n     *\n     * Instead of specifying a component to render, specify a report\n     * template that requests data from the server and passes the results\n     * to a {@link org.openlumify.dashboard.reportRenderer} that can handle that data. The most common\n     * report uses search with aggregations configured.\n     *\n     * An item can be a report if either:\n     * * The extension defines the `report`\n     * * a component registered with `componentPath` saves a `report` inside the items configuration, e.g. `item.configuration.report = { ... }`\n     *\n     * @param {string} identifier Unique identifier for this type of dashboard item. Only used internally, not exposed to user.\n     * @param {string} title The title shown in \"Add Item\" list\n     * @param {string} description Shown under the `title` in \"Add Item\" list\n     * @param {object} [report] Use OpenLumify reportRenderers to render a search aggregation\n     * @param {string} [report.defaultRenderer] The identifier of a report renderer to use as default when adding this item.\n     * @param {string} report.endpoint The endpoint path to access the data. See [`Router`](https://github.com/openlumify/openlumify/blob/master/web/web-base/src/main/java/org/openlumify/web/Router.java) for all available endpoints.\n     * @param {object} [report.endpointParameters] Parameters to pass to endpoint.\n     * Parameters when using search: {@link org.openlumify.dashboard.item~reportParametersForSearch}\n     * @param {object} [report.mapping] Custom configuration for mapping results\n     * @param {string} [report.mapping.transformerModulePath] RequireJS path to function that can transform the endpoint results to something a\n     * reportRenderer can handle. Only necessary if aggregations or search aren't used.\n     * @param {string} [report.clickHandlerModulePath] RequireJS path to a function that handles click events. Called with arguments: `target`, `object.`\n     * @param {string} [componentPath] The path to the {@link org.openlumify.dashboard.item~Component|Component}\n     * to render when the user selects this item from the list.\n     * @param {string} [configurationPath] The path to the {@link org.openlumify.dashboard.item~ConfigComponent|ConfigComponent}.\n     * Provides custom interface displayed in the configuration popover,\n     * when the user clicks the gear icon in the items toolbar.\n     * @param {object} [grid] Default sizing of item in grid\n     * @param {number} [grid.width] Default width of item in grid units when added `1-12`\n     * @param {number} [grid.height] Default height of item in grid units when added `>0`\n     * @param {object} [options]\n     * @param {boolean} [options.flushContent=false] By default all cards get some default content padding, settings this to `true` will remove the padding.\n     * @param {boolean} [options.preventDefaultConfig=false] Set to `true` to disable the system adding a title configuration form.\n     *\n     * @example <caption>Report of Entity Type Counts</caption>\n     * registry.registerExtension('org.openlumify.dashboard.item', {\n     *     title: 'Entity Type Counts',\n     *     description: 'Show total counts for entity types',\n     *     identifier: 'org-example-concept-counts',\n     *     report: {\n     *         defaultRenderer: 'org-openlumify-pie',\n     *         endpoint: '/vertex/search',\n     *         endpointParameters: {\n     *             q: '*',\n     *             size: 0,\n     *             filter: '[]',\n     *             aggregations: [\n     *                 {\n     *                     type: 'term',\n     *                     name: 'field',\n     *                     field: 'http://openlumify.org#conceptType'\n     *                 }\n     *             ].map(JSON.stringify)\n     *         }\n     *     }\n     * });\n     */\n    registry.documentExtensionPoint('org.openlumify.dashboard.item',\n        'Add items that can be placed on dashboards',\n        function(e) {\n            return _.isString(e.identifier) &&\n                (_.isString(e.componentPath) || _.isObject(e.report)) &&\n                e.title &&\n                e.description;\n        },\n        {\n            url: 'http://docs.openlumify.org/extension-points/front-end/dashboard/item.html',\n            legacyName: 'org.openlumify.web.dashboard.item'\n        }\n    );\n\n    /**\n     * Adds additional output types for dashboard items that define a `report` or `item.configuration.report`.\n     *\n     * There are several built-in renderers defined in\n     * [`reportRenderers.js`](https://github.com/openlumify/openlumify/blob/master/web/war/src/main/webapp/js/dashboard/reportRenderers.js).\n     *\n     * ## withReportRenderer Mixin\n     *\n     * If the renderer uses the mixin, the only function required is `render`. Optionally, a `processData` function can be defined to transform the raw server results. It's better to process the data in `processData` function instead of `render` because it will run once on `refreshData` events, instead of on every `reflow` event.\n     *\n     * The render function is called with four parameters `render(d3, svgNode, data, d3tip)`\n     * * `d3` `[Object]` The d3 library object\n     * * `node` `[DomElement]` The dom element to populate\n     * * `data` `[?]` The response from the server (after processData)\n     * * `d3tip` `[Object]` The d3tip library object (for tooltips)\n     *\n     * @param {string} identifier Unique identifier for this type of renderer. Can be referenced by dashboard report item using `defaultRenderer: [id]` in report configuration.\n     * @param {string} label Shown in the configuration interface (see tutorial) in _Visualization_ section.\n     * @param {function} supportsResponse Return `true` if this renderer can handle the `data` argument passed to it.\n     * @param {string} componentPath RequireJS path to {@link org.openlumify.dashboard.item~Component} component.\n     * @param {string} [configurationPath] RequireJS path to extra configuration.\n     * @example <caption>Using Mixin</caption>\n     * define(['public/v1/api', 'dashboard/reportRenderers/withRenderer'], function(defineComponent, withReportRenderer) {\n     *     return defineComponent(MyReportRenderer, withReportRenderer)\n     *     function MyReportRenderer() {\n     *         this.render = function() { ... }\n     *     }\n     * })\n     */\n    registry.documentExtensionPoint('org.openlumify.dashboard.reportrenderer',\n        'Define custom report renderers for dashboard',\n        function(e) {\n            return _.isFunction(e.supportsResponse) &&\n                _.isString(e.identifier) &&\n                e.identifier &&\n                _.isString(e.label) &&\n                e.componentPath;\n        },\n        {\n            url: 'http://docs.openlumify.org/extension-points/front-end/dashboard/report.html',\n            legacyName: 'org.openlumify.web.dashboard.reportrenderer'\n        }\n    );\n\n    /**\n     * When a new case is created or new user logs in, this will define\n     * the default dashboard items and their layout. The user is able to modify it upon its creation.\n     *\n     * Only one extension should be registered or an error will log to console.\n     * The default layout is defined in [`defaultLayout.js`](https://github.com/openlumify/openlumify/blob/master/web/war/src/main/webapp/js/dashboard/defaultLayout.js).\n     *\n     * @param {Array} config Array of dashboard item configurations\n     * @example\n     * registry.registerExtension('org.openlumify.dashboard.layout', [\n     *     {\n     *         extensionId: 'org-example-card-default',\n     *         configuration: { metrics: { x: 0, y: 0, width: 6, height: 5 } }\n     *     }\n     * ])\n     */\n    registry.documentExtensionPoint('org.openlumify.dashboard.layout',\n        'Define dashboard layout for new cases',\n        function(e) {\n            return _.isArray(e);\n        },\n        {\n            url: 'http://docs.openlumify.org/extension-points/front-end/dashboard/layout.html',\n            legacyName: 'org.openlumify.web.dashboard.layout'\n        }\n    );\n\n    /**\n     * Allows custom buttons to be rendered next to the cards configuration button.\n     * These buttons (displayed as icons) can send an event on click,\n     * or specify content to be rendered in a popover.\n     *\n     * @param {string} identifier Unique identifier for this type of toolbar item. Only used internally, not exposed to user\n     * @param {string} icon Path to icon to render in button\n     * @param {object} action The type of action when clicked\n     * @param {string} action.type Must be either `popover`, or `event`\n     * @param {string} action.type Must be either `popover`, or `event`\n     * @param {string} [action.componentPath] Required when `type=popover`.\n     * Path to {@link org.openlumify.dashboard.toolbar.item~Component|Component} to render in popover\n     * @param {string} [action.name] Required when `type=event`. Event to trigger\n     * @param {string} [tooltip] Help text to display when user hovers over button\n     * @param {org.openlumify.dashboard.toolbar.item~canHandle} [canHandle] Function to decide\n     * if this item should be added to this card\n     */\n    registry.documentExtensionPoint('org.openlumify.dashboard.toolbar.item',\n        'Define toolbar items for dashboard cards',\n        function(e) {\n            return e.identifier && e.icon && e.action && (\n                (e.action.type === 'popover' && e.action.componentPath) ||\n                e.action.type === 'event'\n            );\n        },\n        'http://docs.openlumify.org/extension-points/front-end/dashboard/toolbar.html'\n    );\n\n    var reportRenderers,\n        toolbarExtensions,\n        toolbarExtensionsById,\n        extensions,\n        extensionsById,\n        layouts,\n        ConfigPopover,\n        ignoreGridStackChange = false,\n        defaultGridOptions = Object.freeze({\n            width: 4,\n            height: 4,\n            'min-width': 2,\n            'min-height': 2\n        });\n\n    return defineComponent(Dashboard, withElementUpdates, withDataRequest, withWorkspaceHelper);\n\n    function Dashboard() {\n\n        this.defaultAttrs({\n            containerSelector: '.grid-stack',\n            headerSelector: '.header input',\n            refreshSelector: '.header .refresh',\n            editDashboardSelector: '.edit-dashboard',\n            itemContentSelector: '.grid-stack-item-content > .item-content',\n            configureItemSelector: '.grid-stack-item-content > h1 .configure',\n            removeItemSelector: '.remove-item',\n            gridScrollerSelector: '.grid-scroller',\n            toolbarExtensionSelector: '.card-toolbar-item'\n        });\n\n        this.after('initialize', function() {\n            var self = this;\n\n            reportRenderers = registry.extensionsForPoint('org.openlumify.dashboard.reportrenderer');\n            extensions = registry.extensionsForPoint('org.openlumify.dashboard.item');\n            layouts = registry.extensionsForPoint('org.openlumify.dashboard.layout');\n            toolbarExtensions = registry.extensionsForPoint('org.openlumify.dashboard.toolbar.item');\n            toolbarExtensionsById = _.indexBy(toolbarExtensions, 'identifier');\n            extensionsById = _.indexBy(extensions, 'identifier');\n\n            this.request = this.dataRequest.bind(this, 'dashboard');\n\n            // TODO: make utility loading interface\n            this.$node.text('Loading...');\n\n            this.on('click', function(e) {\n                if ($(e.target).closest('.header, .grid-scroller, .grid-stack, .grid-stack-item, .item-content').length) {\n                    self.trigger('selectObjects');\n                }\n            });\n            this.on('click', {\n                editDashboardSelector: this.onEditDashboard,\n                configureItemSelector: this.onConfigure,\n                removeItemSelector: this.onRemoveItem,\n                refreshSelector: this.onRefresh,\n                toolbarExtensionSelector: this.onToolbarExtensionClick\n            });\n            this.on('change keyup', {\n                headerSelector: this.onChangeTitle\n            });\n            this.on('addItem', this.onAddItem);\n            this.on('configurationChanged', {\n                configureItemSelector: function(event, data) {\n                    event.stopPropagation();\n                    this.onConfigurationChanged({ node: () => event.target }, data);\n                }\n            })\n            this.on('drag dragcreate dragstart dropcreate drop dropover dropout resizecreate resizestart resizestop', function(event) {\n                if ($(event.target).is('.grid-stack-item')) {\n                    event.stopPropagation();\n                    if (event.type === 'resizestart' || event.type === 'dragstart') {\n                        self.removeAddItem();\n                    }\n                }\n            });\n            this.on(document, 'windowResize', this.onWindowResize);\n            this.on(document, 'escape', this.onEscapeKey);\n            this.on(document, 'workspaceUpdated', this.onWorkspaceUpdated);\n            this.on(document, 'dashboardRefreshData', this.onDashboardRefreshData);\n\n            var load = _.once(this.loadWorkspaceAndListenOn.bind(this, this.onWorkspaceLoaded));\n            this.on(document, 'didToggleDisplay', function(event, data) {\n                if (data.name === 'dashboard' && data.visible) {\n                    this.adjustHeader();\n                    load();\n                    this.$node.find('.item-content').trigger('reflow');\n                }\n            })\n        });\n\n        this.onToolbarExtensionClick = function(event) {\n            var $item = $(event.target).closest('.card-toolbar-item'),\n                $button = $item.find('button'),\n                extensionId = $item.data('identifier'),\n                extension = toolbarExtensionsById[extensionId],\n                itemId = $item.closest('.grid-stack-item').attr('data-item-id'),\n                item = _.findWhere(this.dashboard.items, { id: itemId });\n\n            if (extension && item) {\n                switch (extension.action && extension.action.type || '') {\n                  case 'popover':\n                    this.toggleExtensionPopover($button, item, extension);\n                    break;\n\n                  case 'event':\n                    $item.trigger(extension.action.name, {\n                        item: item,\n                        extension: extension\n                    });\n                    break;\n\n                  default:\n                      throw new Error('Unknown action for toolbar item extension: ' + JSON.stringify(extension));\n                }\n            } else throw new Error('Extension not found for toolbar item: ' + event.target);\n        };\n\n        this.onRefresh = function(event) {\n            this.trigger('dashboardRefreshData');\n        };\n\n        this.onEscapeKey = function(event) {\n            if (this.$node.hasClass('editing')) {\n                this.toggleEditDashboard();\n            }\n        };\n\n        this.onWindowResize = function(event) {\n\n            /**\n             * Dashboard requests card to reflow because its container size has changed.\n             *\n             * Consider using `_.throttle` or `_.debounce` to limit the cost of many reflow events from user resizing.\n             *\n             * @event org.openlumify.dashboard.item#reflow\n             */\n            this.$node.find('.item-content').trigger('reflow')\n        };\n\n        this.onDashboardRefreshData = function(event, data) {\n            var self = this,\n                items = data && data.identifier ?\n                    _.where(this.dashboard.items, { extensionId: data.identifier }) :\n                    this.dashboard.items;\n\n            items.forEach(function(item) {\n                var $gridItem = self.$node.find('.grid-stack-item').filter(function() {\n                  return $(this).data('item-id') === item.id;\n                });\n                /**\n                 * The dashboard includes a refresh button in the top left.\n                 * When activited, needs to notify cards to update content if necessary.\n                 *\n                 * @event org.openlumify.dashboard.item#refreshData\n                 */\n                $gridItem.find('.item-content').trigger('refreshData');\n            });\n        };\n\n        this.onFinishedLoading = function(attacher) {\n            $(attacher.node()).closest('.grid-stack-item').removeClass('loading-card');\n        };\n\n        this.onShowError = function(attacher) {\n            $(attacher.teardown().node())\n                .html(\n                    $('<div>')\n                        .addClass('error')\n                        .append(\n                            $('<h1>')\n                                .text(i18n('dashboard.error'))\n                                .append($('<div>').text(i18n('dashboard.error.description')))\n                        )\n                );\n        };\n\n        this.onScroll = function(event) {\n            this.$node.toggleClass('scrolled', this.select('gridScrollerSelector').scrollTop() > 4);\n        };\n\n        this.onWorkspaceUpdated = function(event, data) {\n            var self = this;\n            if (data.workspace.workspaceId === this.currentWorkspaceId) {\n                if (!this.dashboard.title || (this.dashboard.title === this.workspaceTitle && this.dashboard.title !== data.workspace.title)) {\n                    var previousTitle = this.dashboard.title;\n                    var newTitle = this.dashboard.title = data.workspace.title;\n                    this.$node.children('h1').find('input').val(newTitle);\n                    this.adjustHeader();\n                    this.requestTitleChange(newTitle)\n                        .catch(function() {\n                            self.dashboard.title = previousTitle;\n                        });\n                }\n                this.workspaceTitle = data.workspace.title;\n            }\n        };\n\n        this.onWorkspaceLoaded = function(event, workspace) {\n            this.currentWorkspaceId = workspace.workspaceId;\n            this.isCreator = workspace.createdBy === openlumifyData.currentUser.id;\n            this.loadDashboards(workspace);\n        };\n\n        this.onConfigurationChanged = function(attacher, data) {\n            var node = $(attacher.node()).closest('.grid-stack-item'),\n                cloned = this.cloneItemConfiguration(data.item),\n                changed = !_.isEqual(this.configuringItem, cloned);\n\n            if (data.options && data.options.changed === 'item.title') {\n                node.find('.grid-stack-item-content > h1 span').text(\n                    data.item.title || data.extension.title\n                );\n            } else if (changed && data.recreate !== false) {\n                this.createDashboardItemComponent(node, data.item);\n            }\n            if (changed) {\n                if (!data.extension) {\n                    data.extension = extensionsById[data.item.extensionId];\n                }\n                this.updateToolbarExtensions(node, data.item, data.extension);\n                this.configuringItem = cloned;\n                var index = _.findIndex(this.dashboard.items, (i) => i.id === data.item.id);\n                if (index >= 0) {\n                    this.dashboard.items.splice(index, 1, data.item);\n                }\n                this.request('dashboardItemUpdate', data.item);\n            }\n        };\n\n        this.cloneItemConfiguration = function(item) {\n            return JSON.parse(JSON.stringify(_.pick(item, 'configuration', 'title')));\n        };\n\n        this.onConfigureItem = function(attacher) {\n            var self = this,\n                $gridItem = $(attacher.node()).closest('.grid-stack-item'),\n                configureNode = $gridItem.find('.grid-stack-item-content > h1 .configure'),\n                alreadyAttached = ConfigPopover && configureNode.lookupComponent(ConfigPopover);\n\n            if (alreadyAttached) {\n                _.defer(function() {\n                    configureNode.teardownComponent(ConfigPopover);\n                });\n                return;\n            }\n\n            require(['./configure'], function(_ConfigPopover) {\n                ConfigPopover = _ConfigPopover;\n                var itemId = $gridItem.data('item-id'),\n                    item = _.findWhere(self.dashboard.items, { id: itemId });\n\n                self.configuringItem = self.cloneItemConfiguration(item);\n\n                if (item) {\n                    if (configureNode.lookupComponent(ConfigPopover)) {\n                        configureNode.teardownComponent(ConfigPopover);\n                    } else {\n                        ConfigPopover.attachTo(configureNode, {\n                            item: item,\n                            scrollSelector: '.grid-scroller'\n                        });\n                        self.trigger('positionDialog');\n                    }\n                }\n            })\n        };\n\n        this.onConfigure = function(event) {\n            this.onConfigureItem({ node: () => event.target });\n        };\n\n        this.toggleExtensionPopover = function($toolbarButton, item, toolbarExtension) {\n            var self = this;\n\n            if ($toolbarButton.lookupComponent(ToolbarExtensionPopover)) {\n                _.defer(function() {\n                    $toolbarButton.teardownAllComponents();\n                });\n                return;\n            }\n\n            Promise.require(toolbarExtension.action.componentPath)\n                .then(function(Component) {\n                    ToolbarExtensionPopover.attachTo($toolbarButton, {\n                        Component: Component,\n                        item: item,\n                        extension: extensionsById[item.extensionId],\n                        scrollSelector: '.grid-scroller'\n                    })\n                })\n        };\n\n        this.requestTitleChange = function(newTitle) {\n            return this.request('dashboardUpdate', {\n                dashboardId: this.dashboard.id,\n                title: newTitle\n            });\n        };\n\n        this.onChangeTitle = function(event) {\n            var self = this;\n            if (event.type === 'change' || event.which === 13) {\n                var newTitle = event.target.value.trim().replace(/\\s+/g, ' '),\n                    previousTitle = this.dashboard.title;\n\n                if (newTitle.length) {\n                    this.dashboard.title = newTitle;\n                    this.$node.find('h1.header input').val(newTitle);\n                    this.requestTitleChange(newTitle)\n                        .catch(function() {\n                            event.target.value = previousTitle;\n                            self.dashboard.title = previousTitle;\n                        });\n                } else {\n                    event.target.value = previousTitle || this.workspaceTitle;\n                }\n                if (event.which === 13) {\n                    event.target.blur();\n                    this.adjustHeader();\n                }\n            } else if (event.which === $.ui.keyCode.ESCAPE) {\n                this.onEscapeKey(event);\n            } else if (event.type === 'keyup') {\n                this.adjustHeader();\n            }\n        };\n\n        this.onEditDashboard = function(event) {\n            this.toggleEditDashboard();\n        };\n\n        this.toggleEditDashboard = function() {\n            var self = this,\n                $edit = this.select('editDashboardSelector'),\n                $header = this.select('headerSelector');\n\n            if (this.isCreator) {\n                this.gridstack.batchUpdate();\n\n                var finished;\n                if (this.$node.hasClass('editing')) {\n                    $edit.text(i18n('dashboard.title.edit'));\n                    ignoreGridStackChange = true;\n                    this.$node.find('.new-item').each(function() {\n                        self.gridstack.removeWidget(this);\n                    });\n                    this.gridstack.disable();\n                    this.$node.removeClass('editing');\n                    finished = Promise.resolve();\n                    $header.prop('disabled', true);\n                } else {\n                    $edit\n                        .text(i18n('dashboard.title.editing.done'))\n                        .append($('<small>').text(' ' + i18n('dashboard.title.editing.done.key')));\n                    this.$node.addClass('editing');\n                    this.gridstack.enable();\n                    finished = this.createDashboardItemToGridStack();\n                    $header.prop('disabled', false);\n                }\n                this.adjustHeader();\n\n                finished\n                    .catch(function(error) {\n                        console.error(error)\n                    })\n                    .then(function() {\n                        ignoreGridStackChange = false;\n                        self.gridstack.commit();\n                    })\n            }\n        };\n\n        this.removeAddItem = function() {\n            var newItem = this.$node.find('.new-item').hide();\n        };\n\n        this.onRemoveItem = function(event) {\n            var self = this,\n                gridItem = $(event.target).closest('.grid-stack-item'),\n                $content = gridItem.find('.item-content'),\n                itemId = gridItem.data('item-id');\n\n            if (itemId) {\n                this.request('dashboardItemDelete', itemId)\n                    .done(function() {\n                        ignoreGridStackChange = true;\n                        self.gridstack.batchUpdate();\n                        Attacher().node($content).teardown();\n                        self.gridstack.removeWidget(gridItem);\n                        self.createDashboardItemToGridStack().then(function() {\n                            self.gridstack.commit();\n                            ignoreGridStackChange = false;\n                        });\n                    })\n            }\n        };\n\n        this.onAddItem = function(event, data) {\n            var self = this,\n                extension = data.extension,\n                node = this.createDashboardItemNode(undefined, extension),\n                placeholderGridItem = $(event.target).closest('.grid-stack-item'),\n                placeholderMetrics = this.metricsForGridItem(placeholderGridItem),\n                width = (extension.grid && extension.grid.width) || defaultGridOptions.width,\n                height = (extension.grid && extension.grid.height) || defaultGridOptions.height,\n                item = {\n                    extensionId: extension.identifier,\n                    configuration: {\n                        metrics: _.extend(placeholderMetrics, {\n                            width: width,\n                            height: height\n                        })\n                    }\n                };\n\n            ignoreGridStackChange = true;\n            this.gridstack.batchUpdate();\n            this.gridstack.removeWidget($(event.target).closest('.grid-stack-item'));\n            this.gridstack.addWidget(node,\n                placeholderMetrics.x,\n                placeholderMetrics.y,\n                placeholderMetrics.width,\n                placeholderMetrics.height,\n                false\n            );\n\n            Promise.resolve(this.createDashboardItemToGridStack())\n                .then(function() {\n                    self.gridstack.commit();\n                    ignoreGridStackChange = false;\n                    return self.createDashboardItemComponent(node, item)\n                })\n                .then(function() {\n                    return self.request('dashboardItemNew', self.dashboard.id, item)\n                })\n                .done(function(result) {\n                    item.id = result.dashboardItemId;\n                    $(node).attr('data-item-id', item.id);\n                    self.dashboard.items.push(item);\n                    self.updateAllDashboardItems();\n                });\n        };\n\n        this.updateAllDashboardItems = function(){\n            var self = this,\n                stackItemMap = {},\n                nodes = _.reject($(this.$node).find('.grid-stack-item'), function(item) {\n                  return $(item.el).hasClass('new-item');\n                });\n\n            _.each(nodes, function(item){\n                var id = $(item).data('itemId');\n                stackItemMap[id] = item;\n            });\n\n            _.each(self.dashboard.items, function(item){\n                var id = item.id;\n                item.configuration.metrics = self.metricsForGridItem(stackItemMap[id]);\n                self.request('dashboardItemUpdate', item);\n            });\n        };\n\n        this.metricsForGridItem = function(el) {\n            var node = $(el).data('_gridstack_node');\n            return {\n                x: node.x,\n                y: node.y,\n                width: node.width,\n                height: node.height\n            };\n        };\n\n        this.onGridChange = function(el, items) {\n            if (ignoreGridStackChange) {\n                return;\n            }\n\n            var self = this,\n                validItems = _.reject(items, function(item) {\n                    return $(item.el).hasClass('new-item');\n                });\n\n            if (!validItems.length) {\n                return self.createDashboardItemToGridStackInBatch();\n            }\n\n            Promise.resolve(validItems).map(\n                function(gridItem) {\n                    var $gridItem = $(gridItem.el),\n                        itemId = $gridItem.data('item-id'),\n                        item = _.findWhere(self.dashboard.items, { id: itemId });\n\n                    if (item) {\n                        $gridItem.on(TRANSITION_END, function animationComplete(e) {\n                            $gridItem\n                                .off(TRANSITION_END, animationComplete)\n                                .find('.item-content').trigger('reflow');\n                        });\n\n                        if (!item.configuration) {\n                            item.configuration = {};\n                        }\n                        item.configuration.metrics = _.pick(gridItem, 'x', 'y', 'width', 'height');\n\n                        return self.request('dashboardItemUpdate', item);\n                    }\n                },\n                { concurrency: 1 }\n            )\n            .then(this.updateAllDashboardItems.bind(this))\n            .done(this.createDashboardItemToGridStackInBatch.bind(this));\n        };\n\n        this.createDashboardItemToGridStackInBatch = function() {\n            var self = this,\n                stack = this.gridstack,\n                begin = stack.batchUpdate.bind(stack),\n                commit = stack.commit.bind(stack);\n\n            return Promise.resolve()\n                .then(begin)\n                .then(this.createDashboardItemToGridStack.bind(this))\n                .catch(function(error) {\n                    console.error(error);\n                })\n                .then(commit)\n        };\n\n        this.createDashboardItemToGridStack = function() {\n            var self = this;\n\n            var newItem = this.$node.find('.new-item');\n            if (newItem.length) {\n                ignoreGridStackChange = true;\n                this.gridstack.removeWidget(newItem);\n            }\n\n            return this.createNewDashboardItem()\n                .then(function(newItem) {\n                    ignoreGridStackChange = true;\n                    self.gridstack.addWidget(newItem);\n                    self.gridstack.movable(newItem, false);\n                    self.gridstack.resizable(newItem, false);\n                    ignoreGridStackChange = false;\n                });\n        };\n\n        this.createDashboardItemComponent = function(node, item) {\n            var self = this,\n                extension = extensionsById[item.extensionId],\n                path = extension.componentPath,\n                isReport = false,\n                reportConfiguration = {},\n                report;\n\n            if (!item.configuration) {\n                item.configuration = {};\n            }\n\n            if (extension.report) {\n                report = extension.report;\n            }\n            if (item.configuration.report) {\n                report = item.configuration.report;\n                path = '';\n            }\n\n            if (report) {\n                var reportRendererIdentifier = (item.configuration && item.configuration.reportRenderer) || report.defaultRenderer,\n                    renderer = _.find(reportRenderers, function(renderer) {\n                        if (reportRendererIdentifier) {\n                            return reportRendererIdentifier === renderer.identifier;\n                        }\n                    });\n\n                if (renderer) {\n                    if (!item.configuration[renderer.identifier]) {\n                        item.configuration[renderer.identifier] = report.configuration && report.configuration[renderer.identifier] || {};\n                    }\n                    item.configuration.reportRenderer = renderer.identifier;\n                    reportConfiguration = item.configuration[renderer.identifier];\n                    path = renderer.componentPath;\n                } else {\n                    path = 'dashboard/reportRenderers/unknownType';\n                }\n            }\n\n            if (path) {\n                return Promise.require(path).then(function(Component) {\n                    var $gridItem = $(node),\n                        $content = $gridItem.find('.item-content')\n                            .attr('class', 'item-content')\n                            .removeAttr('style');\n\n                    $gridItem.find('.grid-stack-item-content > h1 > span').text(\n                        item.title || extension.title\n                    );\n\n                    if (report || (extension.options && extension.options.flushContent)) {\n                        $content.addClass('flush-content');\n                    }\n\n                    /**\n                     * FlightJS or React component that renders the card\n                     * content.\n                     *\n                     * For Flight, `trigger` an event with the name of the\n                     * function instead of invoking directly.\n                     *\n                     * @typedef org.openlumify.dashboard.item~Component\n                     * @property {object} extension\n                     * @property {object} item\n                     * @property {object} [reportConfiguration]\n                     * @property {object} [report]\n                     * @property {function} showError Render a generic error instead of this component\n                     * @property {function} finishedLoading Notify that content is ready (removes loading spinner)\n                     * @property {function} configureItem Open the configuration popover for this card\n                     * @property {org.openlumify.dashboard.item~configurationChanged} configurationChanged Change the configuration\n                     * @listens org.openlumify.dashboard.item#reflow\n                     * @listens org.openlumify.dashboard.item#refreshData\n                     * @example <caption>React Notify Finished</caption>\n                     * componentDidMount() {\n                     *     this.props.finishedLoading();\n                     * }\n                     * @example <caption>React Change Configuration</caption>\n                     * handleClick() {\n                     *     const { item, extension } = this.props;\n                     *     const updated = getUpdatedConfiguration();\n                     *     this.props.configurationChanged({\n                     *         item: { ...item, configuration: updated },\n                     *         extension\n                     *     });\n                     * }\n                     * @example <caption>FlightJS Notify Finished</caption>\n                     * this.after('initialize', function() {\n                     *     this.trigger('finishedLoading');\n                     * })\n                     * @example <caption>FlightJS Change Configuration</caption>\n                     * this.after('initialize', function() {\n                     *    this.on('click', function() {\n                     *        // ... update item.configuration\n                     *        this.trigger('configurationChanged', {\n                     *            item: item,\n                     *            extension: extension\n                     *        });\n                     *    })\n                     * })\n                     */\n                    Attacher().node($content)\n                        .component(Component)\n                        .params({\n                            reportConfiguration: reportConfiguration,\n                            report: report,\n                            extension: extension,\n                            item: item\n                        })\n                        .behavior({\n                            showError: self.onShowError.bind(self),\n                            finishedLoading: self.onFinishedLoading.bind(self),\n                            configureItem: self.onConfigureItem.bind(self),\n\n                            /**\n                             * @callback org.openlumify.dashboard.item~configurationChanged\n                             * @param {object} data\n                             * @param {object} data.item\n                             * @param {object} data.extension\n                             * @param {object} [data.options]\n                             * @param {string} [data.options.changed] What key changed\n                             * (if `item.title` only the card title is updated)\n                             */\n                            configurationChanged: self.onConfigurationChanged.bind(self)\n                        })\n                        .attach({ teardown: true, empty: true, legacyFlightEventsNode: $gridItem });\n                    if (!report && (!extension.options || !extension.options.manuallyFinishLoading)) {\n                        $gridItem.removeClass('loading-card');\n                    }\n                    self.updateToolbarExtensions($gridItem, item, extension);\n                })\n            } else {\n                console.error('No component to render for ', extension);\n                $(node).trigger('finishedLoading');\n            }\n        };\n\n        this.renderItems = function() {\n            if (!this.dashboard.items.length) {\n                this.initializeGridStack();\n                this.toggleEditDashboard();\n                return;\n            }\n\n            var self = this,\n                gridItems = this.select('containerSelector')\n                    .html(_.chain(this.dashboard.items)\n                          .map(function(item) {\n                            var extension = extensionsById[item.extensionId];\n                            if (extension) {\n                                return self.createDashboardItemNode(item, extension);\n                            }\n                          })\n                          .compact()\n                          .value()\n                   ).find('.grid-stack-item');\n\n            this.initializeGridStack();\n\n            Promise.all(\n                $.map(gridItems, function(node) {\n                    var itemId = $(node).data('item-id'),\n                        item = _.findWhere(self.dashboard.items, { id: itemId });\n                    return self.createDashboardItemComponent(node, item);\n                })\n            ).done();\n        };\n\n        this.createNewDashboardItem = function() {\n            var self = this,\n                node = $(addItemTemplate({\n                    dataAttrs: self.gridOptions({ 'no-move': true, 'no-resize': true })\n                }));\n\n            return Promise.require('dashboard/addItem').then(function(AddItem) {\n                AddItem.attachTo(node.find('.item-content'), {});\n                return node;\n            });\n        };\n\n        this.initializeGridStack = function() {\n            var $container = this.select('containerSelector');\n            this.gridstack = $container.gridstack({\n                    cellHeight: 60,\n                    float: true,\n                    animate: true,\n                    verticalMargin: 40,\n                    alwaysShowResizeHandle: true,\n                    width: 12\n                }).on('change', this.onGridChange.bind(this))\n                  .data('gridstack');\n\n            this.gridstack.disable();\n        };\n\n        this.gridOptions = function(extended) {\n            var options = _.extend({}, defaultGridOptions, extended);\n\n            if (!('x' in options) || !('y' in options)) {\n                options['auto-position'] = true;\n            }\n\n            return _.chain(options)\n                .map(function(value, key) {\n                    return {\n                        key: 'gs-' + key,\n                        value: value\n                    };\n                })\n                .value();\n        };\n\n        this.createDashboardItemNode = function(item, extension) {\n            var config = item && item.configuration || {},\n                metrics = config.metrics || {},\n                dom = $(itemTemplate({\n                    title: item && item.title || extension.title,\n                    extension: extension,\n                    creator: this.isCreator,\n                    dataAttrs: this.gridOptions(_.extend({}, extension.grid, metrics))\n                        .concat([{ key: 'item-id', value: item && item.id }])\n                }));\n            return dom;\n        };\n\n        this.updateToolbarExtensions = function(el, item, extension) {\n            var validExtensions = _.reject(toolbarExtensions, function(e) {\n\n                    /**\n                     * @callback org.openlumify.dashboard.toolbar.item~canHandle\n                     * @param {object} options\n                     * @param {object} options.item The dashboard item\n                     * @param {object} options.extension The dashboard item extension\n                     * @param {Element} options.element The `grid-stack-item` element\n                     * @returns {boolean} `true` if extension should apply to this item\n                     */\n                    return _.isFunction(e.canHandle) &&\n                        !e.canHandle({\n                            item: item,\n                            extension: extension,\n                            element: _.isElement(el) ? el : el.get(0)\n                        });\n                }),\n                $toolbar = $(el).find('.card-toolbar'),\n                $configureLi = $toolbar.find('.configure').closest('li'),\n                $extensionRows = $.map(validExtensions, function(e) {\n                    return $('<li>')\n                        .addClass('card-toolbar-item')\n                        .attr('data-identifier', e.identifier)\n                        .append($('<button>').attr('title', e.tooltip).css('background-image', 'url(' + e.icon + ')'))\n                });\n\n            $toolbar.find('.card-toolbar-item').remove();\n            if ($configureLi.length) {\n                $configureLi.before($extensionRows);\n            } else {\n                $toolbar.prepend($extensionRows);\n            }\n        };\n\n        this.loadDashboards = function(workspace) {\n            var self = this;\n\n            return this.request('dashboards')\n                .then(function(dashboards) {\n                    if (dashboards.length) {\n                        return dashboards[0];\n                    }\n\n                    if (layouts.length) {\n                        if (layouts.length > 1) {\n                            console.warn(layouts.length + ' org.openlumify.dashboard.layout extensions were found.'\n                            + ' Only the first one will be used.');\n                        }\n                        return self.requestDashboards(layouts[0]);\n                    } else {\n                        return Promise.require('dashboard/defaultLayout')\n                            .then(function(items) {\n                                return self.requestDashboards(items);\n                            });\n                    }\n                })\n                .then(function(dashboard) {\n                    self.dashboard = dashboard;\n                    self.workspaceTitle = workspace.title;\n                    self.select('itemContentSelector').each((i, node) => Attacher().node(node).teardown());\n                    self.$node.removeClass('editing').html(template({\n                        creator: self.isCreator,\n                        title: dashboard.title || workspace.title,\n                        workspace: workspace,\n                        dashboard: self.dashboard\n                    }));\n                    self.adjustHeader();\n                    self.on(self.select('gridScrollerSelector'), 'scroll', self.onScroll);\n                    self.renderItems();\n                })\n                .done();\n        };\n\n        this.requestDashboards = function(items) {\n            return this.request('dashboardNew', { items: items })\n                .then(function(result) {\n                    if (result.itemIds && result.itemIds.length === items.length) {\n                        items.forEach(function(item) {\n                            item.id = result.itemIds.shift();\n                        })\n                    }\n                    return { id: result.id, items: items, title: '' };\n                });\n        };\n\n        this.adjustHeader = function() {\n            var $input = this.$node.find('h1.header input'),\n                $span = $('<span>')\n                    .text($input.val())\n                    .css('white-space', 'pre')\n                    .insertAfter($input.next('button')),\n                outerWidth = $span.outerWidth();\n\n            if (outerWidth) {\n                $input.width((outerWidth + 2) + 'px');\n                $span.remove();\n            }\n        };\n    }\n});\n"]}