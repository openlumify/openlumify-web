{"version":3,"sources":["../../../js/dashboard/configs/report.js"],"names":["define","defineComponent","registry","template","ReportConfiguration","defaultAttrs","typeSelector","configSelector","after","self","configuration","attr","item","renderers","extensionsForPoint","on","onChange","$node","html","extension","reportRenderer","_","findWhere","identifier","configurationPath","require","Config","attachTo","select","event","data","$select","validReportRenderers","filter","e","supportsResponse","results","error","console","length","$","map","r","val","text","label","prop","trigger","name","target"],"mappings":"AAAAA,OAAO,CACH,sBADG,CAEH,gCAFG,CAGH,iBAHG,CAAP,CAIG,SACCC,eADD,CAECC,QAFD,CAGCC,QAHD,CAGW,CACV,aAEA,MAAOF,iBAAgBG,mBAAhB,CAAP,CAEA,QAASA,oBAAT,EAA+B,CAE3B,KAAKC,YAAL,CAAkB,CACdC,aAAc,mBADA,CAEdC,eAAgB,uBAFF,CAAlB,EAKA,KAAKC,KAAL,CAAW,YAAX,CAAyB,UAAW,CAChC,GAAIC,MAAO,IAAX,CACIC,cAAgB,KAAKC,IAAL,CAAUC,IAAV,CAAeF,aAAf,EAAgC,EADpD,CAEIG,UAAYX,SAASY,kBAAT,CAA4B,yCAA5B,CAFhB,CAIA,KAAKC,EAAL,CAAQ,QAAR,CAAkB,CACdT,aAAc,KAAKU,QADL,CAAlB,EAIA,KAAKC,KAAL,CAAWC,IAAX,CAAgBf,SAAS,CACrBgB,UAAW,KAAKR,IAAL,CAAUQ,SADA,CAErBP,KAAM,KAAKD,IAAL,CAAUC,IAFK,CAAT,CAAhB,EAKA,GAAIQ,gBAAiBC,EAAEC,SAAF,CAAYT,SAAZ,CAAuB,CAAEU,WAAYb,cAAcU,cAA5B,CAAvB,CAArB,CACA,GAAIA,gBAAkBA,eAAeI,iBAArC,CAAwD,CACpDC,QAAQ,CAACL,eAAeI,iBAAhB,CAAR,CAA4C,SAASE,MAAT,CAAiB,CACzDA,OAAOC,QAAP,CAAgBlB,KAAKmB,MAAL,CAAY,gBAAZ,CAAhB,CAA+C,CAC3CT,UAAWV,KAAKE,IAAL,CAAUQ,SADsB,CAE3CP,KAAMH,KAAKE,IAAL,CAAUC,IAF2B,CAA/C,EAIH,CALD,EAMH,CAED,KAAKG,EAAL,CAAQ,eAAR,CAAyB,SAASc,KAAT,CAAgBC,IAAhB,CAAsB,CAC3C,GAAIC,SAAU,KAAKH,MAAL,CAAY,cAAZ,CAAd,CACII,qBAAuBX,EAAEY,MAAF,CAAS/B,SAASY,kBAAT,CAA4B,yCAA5B,CAAT,CAAiF,SAASoB,CAAT,CAAY,CAChH,GAAI,CACA,MAAOA,GAAEC,gBAAF,CAAmBL,KAAKM,OAAxB,CAAP,CACH,CAAC,MAAMC,KAAN,CAAa,CACXC,QAAQD,KAAR,CAAcA,KAAd,EACH,CACJ,CANsB,CAD3B,CASA,GAAIL,qBAAqBO,MAAzB,CAAiC,CAC7BR,QAAQb,IAAR,CAAasB,EAAEC,GAAF,CAAMT,oBAAN,CAA4B,SAASU,CAAT,CAAY,CACjD,MAAOF,GAAE,UAAF,EACFG,GADE,CACED,EAAEnB,UADJ,EAEFqB,IAFE,CAEGF,EAAEG,KAFL,EAGFC,IAHE,CAGG,UAHH,CAGeJ,EAAEnB,UAAF,GAAiBb,cAAcU,cAH9C,CAAP,CAIH,CALY,CAAb,EAKI0B,IALJ,CAKS,UALT,CAKqB,KALrB,EAMH,CAPD,IAOO,CACHf,QAAQb,IAAR,CAAasB,EAAE,UAAF,EAAcI,IAAd,CAAmB,mCAAnB,CAAb,EACKE,IADL,CACU,UADV,CACsB,IADtB,EAEH,CACJ,CArBD,EAsBA,KAAKC,OAAL,CAAa,qBAAb,CAAoC,CAChCC,KAAM,kBAD0B,CAApC,EAGH,CAjDD,EAmDA,KAAKhC,QAAL,CAAgB,SAASa,KAAT,CAAgB,CAC5B,KAAKlB,IAAL,CAAUC,IAAV,CAAeF,aAAf,CAA6BU,cAA7B,CAA8CoB,EAAEX,MAAMoB,MAAR,EAAgBN,GAAhB,EAA9C,CAEA,KAAKI,OAAL,CAAa,sBAAb,CAAqC,CACjC5B,UAAW,KAAKR,IAAL,CAAUQ,SADY,CAEjCP,KAAM,KAAKD,IAAL,CAAUC,IAFiB,CAArC,EAIH,CAPD,CAQH,CACJ,CA/ED","file":"report.js","sourcesContent":["define([\n    'flight/lib/component',\n    'configuration/plugins/registry',\n    './reportTpl.hbs'\n], function(\n    defineComponent,\n    registry,\n    template) {\n    'use strict';\n\n    return defineComponent(ReportConfiguration);\n\n    function ReportConfiguration() {\n\n        this.defaultAttrs({\n            typeSelector: 'select.reportType',\n            configSelector: '.custom_report_config'\n        });\n\n        this.after('initialize', function() {\n            var self = this,\n                configuration = this.attr.item.configuration || {},\n                renderers = registry.extensionsForPoint('org.openlumify.dashboard.reportrenderer');\n\n            this.on('change', {\n                typeSelector: this.onChange\n            })\n\n            this.$node.html(template({\n                extension: this.attr.extension,\n                item: this.attr.item\n            }));\n\n            var reportRenderer = _.findWhere(renderers, { identifier: configuration.reportRenderer });\n            if (reportRenderer && reportRenderer.configurationPath) {\n                require([reportRenderer.configurationPath], function(Config) {\n                    Config.attachTo(self.select('configSelector'), {\n                        extension: self.attr.extension,\n                        item: self.attr.item\n                    })\n                })\n            }\n\n            this.on('reportResults', function(event, data) {\n                var $select = this.select('typeSelector'),\n                    validReportRenderers = _.filter(registry.extensionsForPoint('org.openlumify.dashboard.reportrenderer'), function(e) {\n                        try {\n                            return e.supportsResponse(data.results);\n                        } catch(error) {\n                            console.error(error);\n                        }\n                    });\n\n                if (validReportRenderers.length) {\n                    $select.html($.map(validReportRenderers, function(r) {\n                        return $('<option>')\n                            .val(r.identifier)\n                            .text(r.label)\n                            .prop('selected', r.identifier === configuration.reportRenderer)\n                    })).prop('disabled', false);\n                } else {\n                    $select.html($('<select>').text('No Supported Visualizations Found'))\n                        .prop('disabled', true)\n                }\n            })\n            this.trigger('redirectEventToItem', {\n                name: 'getReportResults'\n            });\n        });\n\n        this.onChange = function(event) {\n            this.attr.item.configuration.reportRenderer = $(event.target).val();\n\n            this.trigger('configurationChanged', {\n                extension: this.attr.extension,\n                item: this.attr.item\n            });\n        };\n    }\n});\n"]}