{"version":3,"sources":["../../../js/dashboard/configs/default.js"],"names":["define","defineComponent","DefaultConfiguration","defaultAttrs","inputSelector","buttonSelector","after","self","configuration","attr","item","extension","$","find","val","getTitle","end","text","i18n","css","width","margin","padding","toggle","hasCustomTitle","appendTo","$node","empty","on","onReset","triggerChangeImmediate","triggerChange","_","debounce","bind","onChange","closest","event","data","select","title","config","Boolean","initialTitle","target","value","trim","length","type","trigger","options","changed"],"mappings":"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","file":"default.js","sourcesContent":["define(['flight/lib/component'], function(defineComponent) {\n    'use strict';\n\n    return defineComponent(DefaultConfiguration);\n\n    function DefaultConfiguration() {\n\n        this.defaultAttrs({\n            inputSelector: 'input',\n            buttonSelector: 'button'\n        });\n\n        this.after('initialize', function() {\n            var self = this,\n                configuration = this.attr.item.configuration || {},\n                extension = this.attr.extension;\n\n            $('<section><label><header></header>' +\n              '<button class=\"btn btn-link btn-small\"></button></label>' +\n              '<input type=\"text\"></section>')\n                .find('input')\n                .val(this.getTitle())\n                .end()\n                .find('header')\n                .text(i18n('dashboard.configure.title'))\n                .end()\n                .find('button')\n                .text(i18n('dashboard.configure.title.reset'))\n                .css({\n                    width: 'auto',\n                    margin: '0 0 0 0.5em',\n                    padding: '0',\n                    'line-height': '1.3em'\n                })\n                .toggle(this.hasCustomTitle())\n                .end()\n                .appendTo(this.$node.empty())\n\n            this.on('click', {\n                buttonSelector: this.onReset\n            });\n\n            this.triggerChangeImmediate = this.triggerChange;\n            this.triggerChange = _.debounce(this.triggerChange.bind(this), 500);\n\n            this.on('keyup change blur', {\n                inputSelector: this.onChange\n            });\n\n            this.$node.closest('.dashboardConfigurePopover').on('cardTitleChanged', function(event, data) {\n                self.select('inputSelector').val(data.title);\n            });\n        });\n\n        this.hasCustomTitle = function() {\n            var item = this.attr.item,\n                config = item.configuration;\n            return Boolean(item.title && (\n                (config.initialTitle || this.attr.extension.title) !== item.title\n            ));\n        };\n\n        this.getTitle = function() {\n            var item = this.attr.item,\n                config = item && item.configuration;\n            return item.title || config.initialTitle || this.attr.extension.title;\n        };\n\n        this.onReset = function(event) {\n            var item = this.attr.item;\n\n            if (item.configuration) {\n                if (item.configuration.initialTitle) {\n                    item.title = item.configuration.initialTitle;\n                } else {\n                    item.title = '';\n                }\n            }\n            this.select('inputSelector').val(this.getTitle());\n            this.triggerChangeImmediate();\n        };\n\n        this.onChange = function(event) {\n            var title = event.target.value.trim();\n\n            if (!title.length) return;\n\n            this.attr.item.title = title;\n            if (event.type === 'keyup') {\n                this.triggerChange();\n            } else {\n                this.triggerChangeImmediate();\n            }\n        };\n\n        this.triggerChange = function() {\n            this.select('buttonSelector').toggle(this.hasCustomTitle());\n\n            this.trigger('configurationChanged', {\n                extension: this.attr.extension,\n                item: this.attr.item,\n                options: {\n                    changed: 'item.title'\n                }\n            });\n        };\n    }\n});\n"]}