{"version":3,"sources":["../../../js/dashboard/reportRenderers/text-overview.js"],"names":["define","defineComponent","F","colorjs","withRenderer","TextOverview","countFn","d","value","count","nameFn","name","processData","data","_","sortBy","root","buckets","reverse","render","renderTextOverview","d3","node","d3tip","self","area","offsetWidth","offsetHeight","config","attr","reportConfiguration","limit","color","slice","parseInt","select","selectAll","call","enter","append","exit","remove","order","on","handleClick","filters","propertyId","field","predicate","values","classed","getLuminance","style","text","format","displayName","each","fontSize","areas","toArray","querySelectorAll","map","li","dim","getBoundingClientRect","width","height","used","sum","percent","Math","floor","sqrt","tryPercent","container","scrollHeight","defer","bind"],"mappings":"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","file":"text-overview.js","sourcesContent":["define([\n    'flight/lib/component',\n    'util/formatters',\n    'colorjs',\n    './withRenderer'\n], function(\n    defineComponent,\n    F,\n    colorjs,\n    withRenderer) {\n    'use strict';\n\n    return defineComponent(TextOverview, withRenderer);\n\n    function countFn(d) {\n        return d.value.count;\n    }\n\n    function nameFn(d) {\n        return d.name;\n    }\n\n    function TextOverview() {\n\n        this.processData = function(data) {\n            return _.sortBy(data.root[0].buckets, countFn).reverse();\n        };\n\n        this.render = function renderTextOverview(d3, node, data, d3tip) {\n            var self = this,\n                area = node.offsetWidth * node.offsetHeight,\n                config = this.attr.reportConfiguration || {},\n                limit = config.limit,\n                color = config.color;\n\n            if (limit) {\n                data = data.slice(0, parseInt(limit, 10));\n            }\n\n            d3.select(node)\n                .selectAll('ul')\n                .data([1])\n                .call(function() {\n                    this.enter().append('ul').attr('class', 'text-overview');\n                    this.selectAll('li')\n                        .data(data)\n                        .call(function() {\n                            this.enter().append('li').attr('class', 'clickable')\n                                .call(function() {\n                                    this.append('h1')\n                                    this.append('h2')\n                                })\n                            this.exit().remove();\n\n                            this.order()\n                                .on('click', function(d) {\n                                    self.handleClick({\n                                        filters: [{\n                                            propertyId: d.field,\n                                            predicate: 'equal',\n                                            values: [nameFn(d)]\n                                        }]\n                                    });\n                                })\n                                .classed('light', colorjs(color || 'white').getLuminance() > 0.5)\n                                .style('background-color', color || 'white')\n                            this.select('h1').text(function(d) {\n                                return (d.format || d3.format(','))(countFn(d));\n                            });\n                            this.select('h2')\n                                .text(self.displayName)\n                                .attr('title', self.displayName)\n                        });\n                })\n                .each(function() {\n                    this.style.fontSize = '100%';\n                    var areas = _.toArray(this.querySelectorAll('li')).map(function(li) {\n                            var dim = li.getBoundingClientRect();\n                            return (dim.width * 1.125) * (dim.height * 1.125);\n                        }),\n                        used = d3.sum(areas),\n                        percent = Math.floor(Math.sqrt(area / used) * 100);\n\n                    self.tryPercent(node, this, percent);\n                })\n        };\n\n        this.tryPercent = function(node, container, percent) {\n            container.style.fontSize = percent + '%';\n\n            if (container.scrollHeight > node.offsetHeight) {\n                _.defer(this.tryPercent.bind(this, node, container, percent * 0.95));\n            }\n        };\n    }\n});\n"]}