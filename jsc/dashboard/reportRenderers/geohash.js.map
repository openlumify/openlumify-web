{"version":3,"sources":["../../../js/dashboard/reportRenderers/geohash.js"],"names":["define","defineComponent","F","withRenderer","withMapTiles","ol","d3","Geohash","processData","data","results","root","buckets","length","min","Infinity","max","extent","createEmpty","features","_","map","bucket","field","name","northWest","value","cell","southEast","amount","count","Math","createOrUpdateFromCoordinates","longitude","latitude","type","geometry","coordinates","getCenter","properties","geoJson","predicate","display"],"mappings":"AAAAA,OAAO,CACH,sBADG,CAEH,iBAFG,CAGH,gBAHG,CAIH,gBAJG,CAKH,YALG,CAMH,IANG,CAAP,CAOG,SACCC,eADD,CAECC,CAFD,CAGCC,YAHD,CAICC,YAJD,CAKCC,EALD,CAMCC,EAND,CAMK,CACJ,aAEA,MAAOL,iBAAgBM,OAAhB,CAAyBJ,YAAzB,CAAuCC,YAAvC,CAAP,CAEA,QAASG,QAAT,EAAmB,CAEf,KAAKC,WAAL,CAAmB,SAASC,IAAT,CAAe,CAC9B,GAAIC,SAAUD,KAAKE,IAAL,CAAU,CAAV,EAAaC,OAA3B,CACA,GAAIF,SAAWA,QAAQG,MAAvB,CAA+B,CAC3B,GAAIC,KAAMC,QAAV,CACIC,IAAM,CAACD,QADX,CAEIE,OAASZ,GAAGY,MAAH,CAAUC,WAAV,EAFb,CAGIC,SAAWC,EAAEC,GAAF,CAAMX,OAAN,CAAe,SAASY,MAAT,CAAiB,IAC/BC,MAD+B,CACfD,MADe,CAC/BC,KAD+B,CACxBC,IADwB,CACfF,MADe,CACxBE,IADwB,CAEvC,GAAMC,WAAYH,OAAOI,KAAP,CAAaC,IAAb,CAAkBF,SAApC,CACA,GAAMG,WAAYN,OAAOI,KAAP,CAAaC,IAAb,CAAkBC,SAApC,CACA,GAAMC,QAASP,OAAOI,KAAP,CAAaI,KAAb,EAAsB,CAArC,CAEAd,IAAMe,KAAKf,GAAL,CAASa,MAAT,CAAiBb,GAAjB,CAAN,CACAF,IAAMiB,KAAKjB,GAAL,CAASe,MAAT,CAAiBf,GAAjB,CAAN,CAEAT,GAAGY,MAAH,CAAUe,6BAAV,CAAwC,CACpC,CAACP,UAAUQ,SAAX,CAAsBR,UAAUS,QAAhC,CADoC,CAEpC,CAACN,UAAUK,SAAX,CAAsBR,UAAUS,QAAhC,CAFoC,CAGpC,CAACN,UAAUK,SAAX,CAAsBL,UAAUM,QAAhC,CAHoC,CAIpC,CAACT,UAAUQ,SAAX,CAAsBL,UAAUM,QAAhC,CAJoC,CAKpC,CAACT,UAAUQ,SAAX,CAAsBR,UAAUS,QAAhC,CALoC,CAAxC,CAMGjB,MANH,EAQA,MAAO,CACDkB,KAAM,SADL,CAEDC,SAAU,CACND,KAAM,OADA,CAENE,YAAahC,GAAGY,MAAH,CAAUqB,SAAV,CAAoBrB,MAApB,CAFP,CAFT,CAMHsB,WAAY,CAAEV,aAAF,CAAUL,SAAV,CAAgBD,WAAhB,CANT,CAAP,CAQH,CAzBU,CAHf,CA8BA,MAAO,CACHiB,QAAS,CACLL,KAAM,mBADD,CAELhB,iBAFK,CADN,CAKHL,OALG,CAMHE,OANG,CAOHyB,UAAW,QAPR,CAQHC,QAAS,SARN,CAAP,CAUH,CACD,MAAO,KAAP,CACH,CA7CD,CA8CH,CACJ,CAnED","file":"geohash.js","sourcesContent":["define([\n    'flight/lib/component',\n    'util/formatters',\n    './withRenderer',\n    './withMapTiles',\n    'openlayers',\n    'd3'\n], function(\n    defineComponent,\n    F,\n    withRenderer,\n    withMapTiles,\n    ol,\n    d3) {\n    'use strict';\n\n    return defineComponent(Geohash, withRenderer, withMapTiles);\n\n    function Geohash() {\n\n        this.processData = function(data) {\n            var results = data.root[0].buckets;\n            if (results && results.length) {\n                var min = Infinity,\n                    max = -Infinity,\n                    extent = ol.extent.createEmpty(),\n                    features = _.map(results, function(bucket) {\n                        const { field, name } = bucket;\n                        const northWest = bucket.value.cell.northWest;\n                        const southEast = bucket.value.cell.southEast;\n                        const amount = bucket.value.count || 0;\n\n                        max = Math.max(amount, max);\n                        min = Math.min(amount, min);\n\n                        ol.extent.createOrUpdateFromCoordinates([\n                            [northWest.longitude, northWest.latitude],\n                            [southEast.longitude, northWest.latitude],\n                            [southEast.longitude, southEast.latitude],\n                            [northWest.longitude, southEast.latitude],\n                            [northWest.longitude, northWest.latitude]\n                        ], extent);\n\n                        return {\n                              type: 'Feature',\n                              geometry: {\n                                  type: 'Point',\n                                  coordinates: ol.extent.getCenter(extent)\n                              },\n                            properties: { amount, name, field }\n                          };\n                    });\n\n                return {\n                    geoJson: {\n                        type: 'FeatureCollection',\n                        features\n                    },\n                    min,\n                    max,\n                    predicate: 'within',\n                    display: 'heatmap'\n                };\n            }\n            return null;\n        };\n    }\n});\n"]}