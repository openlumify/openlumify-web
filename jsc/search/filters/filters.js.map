{"version":3,"sources":["../../../js/search/filters/filters.js"],"names":["define","defineComponent","flightRegistry","template","FilterItem","entityItemTemplate","SortFilter","F","ConceptSelector","RelationshipSelector","withDataRequest","registry","d3","FILTER_SEARCH_DELAY_SECONDS","Filters","propertyFilters","otherFilters","filterId","attributes","removeEntityRowSelector","removeExtensionRowSelector","matchTypeSelector","extensionsSelector","filterItemsSelector","conceptDropdownSelector","conceptListSelector","relationshipListSelector","edgeLabelDropdownSelector","sortContentSelector","conceptFilterSelector","edgeLabelFilterSelector","match","supportsMatch","supportsSorting","supportsHistogram","searchType","after","self","throttledNotifyOfFilters","_","throttle","notifyOfFilters","bind","debounce","matchType","attr","previousMatchType","$node","html","showMatchType","showConceptFilter","showEdgeFilter","showSorting","on","onFilterItemChanged","onSearchByParameters","onClearFilters","onSortFieldsUpdated","onEnableMatchSelection","onRemoveExtensionRow","e","stopPropagation","preventDefault","onChangeMatchType","onConceptChange","onEdgeTypeChange","onSearchByRelatedEntity","onSearchByProperty","onFilterExtensionChanged","requestPropertiesByDomainType","dataRequest","document","event","ontology","relationships","concepts","conceptsById","byId","relationshipsById","conceptsByParent","groupBy","byTitle","relationshipsByParent","list","filtersLoaded","then","Promise","resolve","addSearchFilterExtensions","loadPropertyFilters","loadConcepts","loadEdgeTypes","loadSorting","trigger","data","$li","$","target","removeClass","isUndefined","console","error","valid","filter","removed","remove","createNewRowIfNeeded","filterSearchType","$container","select","extensions","where","extensionsForPoint","componentPromises","map","extension","require","componentPath","length","splice","all","components","shift","C","i","filterKeys","filterKey","JSON","stringify","attachTo","configurationSelector","changedEventName","loadSavedQueryEvent","savedQueryLoadedEvent","initHidden","hide","options","newFilters","omit","disableMatchEdges","clearFilters","triggerUpdates","done","extend","closest","show","ontologyProperties","properties","compact","property","try","disableNotify","conceptId","setMatchType","edgeLabel","setConceptFilter","setEdgeTypeFilter","each","ontologyProperty","name","dataType","isObject","value","radius","addFilterItem","propertyId","values","predicate","find","catch","setRelatedToEntityFilter","vertexIds","vertices","single","title","i18n","vertex","id","relatedToVertexIds","pluck","setSort","sortFields","currentSort","propagate","edgeId","arguments","edgeLabelFilter","isArray","findWhere","iri","push","includeChildNodes","defer","blur","renderList","setter","v","displayName","hasChildren","filterPropertyList","relationshipId","domainType","propertyListFilter","add","type","prop","addBack","toggle","Boolean","conceptFilter","teardownAllComponents","propertiesByDomainType","result","filters","isBoolean","selector","$list","get","selectAll","call","enter","append","text","exit","order","d","index","style","children","checked","querySelector","val","concept","relationship","filterItems","clearMatch","empty","hasSomeFilters","isEmpty","chain","metadata","dataKey","dependentPropertyIris","reject","undefined","flatten","hasSome","matchTypeChanged","matchChanged","row","keys","forEach","key","parse","parameters","matching","some","contains","replace","toArray","extensionLi","$extensionLi","delaySecondsBeforeTimeout","fulfill","pair","object","loaded","off","timeout","test","url","conceptType","conceptTypes","types","isString","edgeLabels","sortRaw","sort","sortStr","field","direction","concurrency","submit","teardownField","node","instanceInfo","findInstanceInfoByNode","info","instance","teardown","creatable","defaultText","onlySearchable","spread","vertexProperties","edgeProperties","$newRow","listFilter","addClass","insertBefore","appendTo","rendered"],"mappings":"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","file":"filters.js","sourcesContent":["\ndefine([\n    'flight/lib/component',\n    'flight/lib/registry',\n    './filtersTpl.hbs',\n    './filterItem',\n    './entityItem.hbs',\n    'search/sort',\n    'util/vertex/formatters',\n    'util/ontology/conceptSelect',\n    'util/ontology/relationshipSelect',\n    'util/withDataRequest',\n    'configuration/plugins/registry',\n    'd3'\n], function(\n    defineComponent,\n    flightRegistry,\n    template,\n    FilterItem,\n    entityItemTemplate,\n    SortFilter,\n    F,\n    ConceptSelector,\n    RelationshipSelector,\n    withDataRequest,\n    registry,\n    d3) {\n    'use strict';\n\n    var FILTER_SEARCH_DELAY_SECONDS = 0.5;\n\n    return defineComponent(Filters, withDataRequest);\n\n    function Filters() {\n        this.propertyFilters = {};\n        this.otherFilters = {};\n        this.filterId = 0;\n\n        this.attributes({\n            removeEntityRowSelector: '.entity-filters button.remove-icon',\n            removeExtensionRowSelector: '.extension-filters button.remove-icon',\n            matchTypeSelector: '.match-types input',\n            extensionsSelector: '.extension-filters',\n            filterItemsSelector: '.prop-filters .filter',\n            conceptDropdownSelector: '.concepts-dropdown',\n            conceptListSelector: '.concepts-list',\n            relationshipListSelector: '.edgetype-list',\n            edgeLabelDropdownSelector: '.edgetype-dropdown',\n            sortContentSelector: '.sort-content',\n            conceptFilterSelector: '.concepts-dropdown,.concepts-list,.concept-filter-header',\n            edgeLabelFilterSelector: '.edgetype-dropdown,.edgetype-list,.edgetype-filter-header',\n            match: 'vertex',\n            supportsMatch: true,\n            supportsSorting: true,\n            supportsHistogram: null,\n            searchType: null\n        });\n\n        this.after('initialize', function() {\n            var self = this;\n\n            this.throttledNotifyOfFilters = _.throttle(this.notifyOfFilters.bind(this), 100);\n            this.notifyOfFilters = _.debounce(this.notifyOfFilters.bind(this), FILTER_SEARCH_DELAY_SECONDS * 1000);\n\n            this.matchType = this.attr.match;\n            this.previousMatchType = this.matchType;\n            this.$node.html(template({\n                showMatchType: this.attr.supportsMatch !== false,\n                showConceptFilter: this.attr.match === 'vertex',\n                showEdgeFilter: this.attr.match === 'edge',\n                showSorting: this.attr.supportsSorting\n            }));\n\n            this.on('filterItemChanged', this.onFilterItemChanged);\n\n            this.on('searchByParameters', this.onSearchByParameters);\n            this.on('clearfilters', this.onClearFilters);\n            this.on('sortFieldsUpdated', this.onSortFieldsUpdated);\n            this.on('enableMatchSelection', this.onEnableMatchSelection);\n            this.on('click', {\n                removeExtensionRowSelector: this.onRemoveExtensionRow,\n                removeEntityRowSelector: this.onRemoveExtensionRow\n            });\n            this.on('change keyup', {\n                extensionsSelector: function(e) {\n                    e.stopPropagation();\n                    e.preventDefault();\n                }\n            })\n            this.on('change', {\n                matchTypeSelector: this.onChangeMatchType\n            })\n            this.on('conceptSelected', this.onConceptChange);\n            this.on('relationshipSelected', this.onEdgeTypeChange);\n            this.on('searchByRelatedEntity', this.onSearchByRelatedEntity);\n            this.on('searchByProperty', this.onSearchByProperty);\n            this.on('filterExtensionChanged', this.onFilterExtensionChanged);\n\n            this.requestPropertiesByDomainType = function() {\n                return this.dataRequest('ontology', 'propertiesByDomainType', this.matchType);\n            };\n\n            this.on(document, 'ontologyUpdated', function(event, { ontology }) {\n                const { relationships, concepts } = ontology;\n                this.conceptsById = concepts.byId;\n                this.relationshipsById = relationships.byId;\n                this.conceptsByParent = _.groupBy(concepts.byTitle, 'parentConcept');\n                this.relationshipsByParent = _.groupBy(relationships.list, 'parentIri');\n            });\n\n            this.filtersLoaded = this.dataRequest('ontology', 'ontology').then(({ relationships, concepts }) => {\n                this.conceptsById = concepts.byId;\n                this.relationshipsById = relationships.byId;\n                this.conceptsByParent = _.groupBy(concepts.byTitle, 'parentConcept');\n                this.relationshipsByParent = _.groupBy(relationships.list, 'parentIri');\n\n                return Promise.resolve(this.addSearchFilterExtensions())\n                    .then(() => {\n                        return self.loadPropertyFilters();\n                    })\n                    .then(function() {\n                        self.loadConcepts();\n                        self.loadEdgeTypes();\n                        self.loadSorting();\n                        self.trigger('filtersLoaded');\n                    });\n            });\n        });\n\n        this.onFilterItemChanged = function(event, data) {\n            var $li = $(event.target).removeClass('newrow'),\n                filterId = $li.data('filterId');\n\n            if (_.isUndefined(filterId)) {\n                console.error('Something is wrong, filter doesn\\'t have id', $li[0]);\n            }\n\n            if (data.valid) {\n                this.propertyFilters[filterId] = data.filter;\n            } else {\n                delete this.propertyFilters[filterId];\n                if (data.removed) {\n                    $li.remove();\n                }\n            }\n            this.notifyOfFilters();\n            this.createNewRowIfNeeded();\n        };\n\n        this.addSearchFilterExtensions = function() {\n            var filterSearchType = this.attr.searchType,\n                $container = this.select('extensionsSelector'),\n                extensions = _.where(\n                    registry.extensionsForPoint('org.openlumify.search.filter'),\n                    { searchType: filterSearchType }\n                ),\n                componentPromises = _.map(extensions, function(extension) {\n                    return Promise.require(extension.componentPath);\n                });\n\n            if (componentPromises.length) {\n                componentPromises.splice(0, 0, Promise.require('search/filters/extensionItem.hbs'))\n                return Promise.all(componentPromises)\n                    .then(function(components) {\n                        var template = components.shift();\n\n                        $container.html(\n                            components.map(function(C, i) {\n                                var extension = extensions[i];\n\n                                if (extension.filterKeys) {\n                                    extension.filterKey = JSON.stringify(extension.filterKeys);\n                                }\n                                var $li = $(template(extension));\n\n                                C.attachTo($li, {\n                                    configurationSelector: '.configuration',\n                                    changedEventName: 'filterExtensionChanged',\n                                    loadSavedQueryEvent: 'loadSavedQuery',\n                                    savedQueryLoadedEvent: 'savedQueryLoaded'\n                                });\n\n                                if (extension.initHidden) {\n                                    $li.hide();\n                                }\n\n                                return $li;\n                            })\n                        )\n                    });\n            } else return Promise.resolve();\n        }\n\n        this.onFilterExtensionChanged = function(event, data) {\n            var self = this,\n                options = data && data.options,\n                newFilters = _.omit(data, 'options');\n\n            this.disableMatchEdges = data.options && data.options.disableMatchEdges === true;\n            this.clearFilters({ triggerUpdates: false }).done(function() {\n                _.extend(self.otherFilters, newFilters);\n                $(event.target).closest('.extension-filter-row').show();\n                self.notifyOfFilters();\n            })\n        };\n\n        this.onSearchByProperty = function(event, data) {\n            var self = this;\n\n            event.stopPropagation();\n\n            this.dataRequest('ontology', 'properties')\n                .done(function(ontologyProperties) {\n                    var properties = data.properties || _.compact([data.property]);\n\n                    Promise.try(function() {\n                            return self.onClearFilters();\n                        })\n                        .then(function() {\n                            self.disableNotify = true;\n                            if (data.conceptId) {\n                                return self.setMatchType('vertex');\n                            } else if (data.edgeLabel) {\n                                return self.setMatchType('edge');\n                            }\n                        })\n                        .then(function() {\n                            if (data.conceptId) {\n                                return self.setConceptFilter(data.conceptId);\n                            } else if (data.edgeLabel) {\n                                return self.setEdgeTypeFilter(data.edgeLabel);\n                            }\n                        })\n                        .then(function() {\n                            return properties\n                        })\n                        .each(function(property) {\n                            var ontologyProperty = ontologyProperties.byTitle[property.name];\n                            if (ontologyProperty &&\n                                ontologyProperty.dataType === 'geoLocation' &&\n                                _.isObject(property.value) &&\n                                !('radius' in property.value)) {\n                                property.value.radius = 1;\n                            }\n                            return self.addFilterItem({\n                                propertyId: property.name,\n                                values: property.values || [property.value],\n                                predicate: property.predicate || '='\n                            }, { hide: true });\n                        })\n                        .then(function() {\n                            self.disableNotify = false;\n                            self.$node.find('.filter').show();\n                            self.notifyOfFilters();\n                        })\n                        .catch(function(error) {\n                            console.error(error)\n                        })\n                });\n        };\n\n        this.onSearchByRelatedEntity = function(event, data) {\n            event.stopPropagation();\n            var self = this;\n\n            this.disableNotify = true;\n            Promise.resolve(this.clearFilters({ triggerUpdates: false }))\n                .then(this.setRelatedToEntityFilter.bind(this, data.vertexIds))\n                .then(this.setMatchType.bind(this, 'vertex'))\n                .then(this.setConceptFilter.bind(this, data.conceptId))\n                .then(this.setEdgeTypeFilter.bind(this, data.edgeLabel))\n                .then(function() {\n                    self.disableNotify = false;\n                    self.notifyOfFilters();\n                })\n                .done();\n        };\n\n        this.setRelatedToEntityFilter = function(vertexIds) {\n            var self = this;\n\n            return this.dataRequest('vertex', 'store', { vertexIds: vertexIds })\n                .then(function(vertices) {\n                    var single = vertices[0],\n                        title = vertices.length > 1 ? i18n('search.filters.title_multiple', vertices.length)\n                                                    : single && F.vertex.title(single) || single.id;\n\n                    self.select('edgeLabelFilterSelector').show();\n                    self.otherFilters.relatedToVertexIds = _.pluck(vertices, 'id');\n                    self.$node.find('.entity-filters').html(entityItemTemplate({ title })).show();\n                    self.notifyOfFilters();\n                });\n        };\n\n        this.setSort = function(sortFields, options) {\n            this.currentSort = sortFields || [];\n            if (!options || options.propagate !== false) {\n                this.select('sortContentSelector').trigger('setSortFields', {\n                    sortFields: sortFields\n                });\n            }\n            this.notifyOfFilters();\n        };\n\n        this.setEdgeTypeFilter = function(edgeId) {\n            var self = this;\n\n            if (arguments.length === 0) {\n                this.edgeLabelFilter = [];\n            }\n            if (_.isArray(edgeId)) {\n                this.edgeLabelFilter = edgeId;\n                edgeId = null;\n            }\n            if (!this.edgeLabelFilter) this.edgeLabelFilter = [];\n            if (edgeId) {\n                if (!_.findWhere(this.edgeLabelFilter, { iri: edgeId })) {\n                    this.edgeLabelFilter.push({ iri: edgeId, includeChildNodes: true });\n                }\n                _.defer(() => {\n                    this.select('edgeLabelDropdownSelector').find('input').blur();\n                    this.trigger(this.select('edgeLabelDropdownSelector'), 'selectRelationshipId')\n                })\n            }\n\n            if (!this.otherFilters.relatedToVertexIds && this.matchType !== 'edge') {\n                return;\n            }\n\n            this.renderList('relationshipListSelector', this.edgeLabelFilter, {\n                setter(v) { self.setEdgeTypeFilter(v) },\n                displayName(filter) { return self.relationshipsById[filter.iri].displayName; },\n                hasChildren(iri) { return self.relationshipsByParent[iri] && self.relationshipsByParent[iri].length; }\n            });\n\n            // Only filter the property list if edge search\n            // If related search just notify filters\n            if (this.matchType === 'edge') {\n                if (this.edgeLabelFilter.length) {\n                    this.filterPropertyList({ relationshipId: _.map(this.edgeLabelFilter, edgeLabelFilter => edgeLabelFilter.iri) });\n                    this.notifyOfFilters();\n                } else {\n                    this.filterPropertyList({ domainType: 'relationship' });\n                    this.notifyOfFilters();\n                }\n            } else {\n                this.notifyOfFilters();\n            }\n        };\n\n        this.filterPropertyList = function(filter) {\n            this.propertyListFilter = filter;\n\n            this.select('filterItemsSelector')\n                .add(this.select('sortContentSelector'))\n                .trigger('filterProperties', filter)\n        }\n\n        this.setMatchType = function(type) {\n            this.matchType = type;\n            this.$node.find('.match-type-' + type).prop('checked', true);\n            this.$node.find('.match-type-edge').closest('label').addBack()\n                .prop('disabled', this.disableMatchEdges === true);\n            this.select('conceptFilterSelector').toggle(type === 'vertex');\n            this.select('edgeLabelFilterSelector').toggle(Boolean(this.otherFilters.relatedToVertexIds || type === 'edge'));\n            if (this.matchType === 'vertex') {\n                this.setConceptFilter(this.conceptFilter);\n            } else {\n                this.setEdgeTypeFilter(this.edgeLabelFilter);\n            }\n            this.select('filterItemsSelector').each(function() {\n                var $li = $(this);\n                    $li.teardownAllComponents();\n                    $li.remove();\n            });\n            this.setSort();\n            return Promise.resolve(this.propertiesByDomainType[type] || this.requestPropertiesByDomainType())\n                .then(result => {\n                    if (result.length) {\n                        this.propertiesByDomainType[type] = result;\n                    }\n                    const domainType = this.matchType === 'vertex' ? 'concept' : 'relationship';\n                    const filters = { domainType, conceptId: null, relationshipId: null }\n\n                    if (domainType === 'concept' && this.propertyListFilter && this.propertyListFilter.conceptId) {\n                        filters.conceptId = this.propertyListFilter.conceptId;\n                    } else if (domainType === 'relationship' && this.propertyListFilter && this.propertyListFilter.relationshipId) {\n                        filters.relationshipId = this.propertyListFilter.relationshipId;\n                    }\n\n                    this.select('sortContentSelector').trigger('filterProperties', filters);\n                    this.createNewRowIfNeeded();\n                    this.notifyOfFilters();\n                });\n        };\n\n        this.setConceptFilter = function(conceptId, includeChildNodes) {\n            const self = this;\n\n            if (arguments.length === 0) {\n                this.conceptFilter = [];\n            }\n            if (_.isArray(conceptId)) {\n                this.conceptFilter = conceptId;\n                conceptId = null;\n            }\n            if (!this.conceptFilter) this.conceptFilter = [];\n            if (conceptId) {\n                if (!_.findWhere(this.conceptFilter, { iri: conceptId })) {\n                    this.conceptFilter.push({\n                        iri: conceptId,\n                        includeChildNodes: _.isBoolean(includeChildNodes) ? includeChildNodes : true\n                    });\n                }\n                _.defer(() => {\n                    this.select('conceptDropdownSelector').find('input').blur();\n                    this.trigger(this.select('conceptDropdownSelector'), 'clearSelectedConcept');\n                })\n            }\n\n            if (this.matchType === 'edge') {\n                return;\n            }\n\n            this.renderList('conceptListSelector', this.conceptFilter, {\n                setter(v) { self.setConceptFilter(v) },\n                displayName(filter) { return self.conceptsById[filter.iri].displayName; },\n                hasChildren(iri) { return self.conceptsByParent[iri] && self.conceptsByParent[iri].length; }\n            });\n\n            if (this.conceptFilter.length) {\n                const filters = {};\n\n                this.filterPropertyList({ conceptId: _.map(this.conceptFilter, conceptFilter => conceptFilter.iri) });\n                this.notifyOfFilters();\n            } else {\n                this.filterPropertyList({ conceptId: null, domainType: 'concept' });\n                this.notifyOfFilters();\n            }\n        };\n\n        this.renderList = function(selector, list, { setter, displayName, hasChildren }) {\n            var self = this,\n                $list = this.select(selector).find('.fields');\n\n            d3.select($list.get(0))\n                .selectAll('li')\n                .data(list)\n                .call(function() {\n                    this.enter().append('li').call(function() {\n                        this.append('div').attr('class', 'content').call(function() {\n                            this.append('span').attr('class', 'display')\n                            this.append('label').attr('class', 'descendants').call(function() {\n                                this.append('input').attr('type', 'checkbox');\n                                this.append('span')\n                                    .text(i18n('search.filters.include.child.nodes'))\n                            })\n                        })\n                        this.append('button').attr('class', 'remove-icon').html('&times');\n                    })\n                    this.exit().remove();\n                })\n                .order()\n                .call(function() {\n                    this.select('.display').text(displayName)\n                    this.select('.remove-icon').on('click', function(d, index) {\n                        list.splice(index, 1);\n                        setter(list);\n                    })\n                    this.select('.descendants')\n                        .style('display', function(d) {\n                            var children = hasChildren(d.iri);\n                            if (children) {\n                                return null;\n                            }\n\n                            var filter = _.findWhere(list, { iri: d.iri });\n                            filter.includeChildNodes = false;\n                            return 'none'\n                        })\n                        .on('change', function(d) {\n                            var checked = this.querySelector('input').checked;\n                            d3.select(this).attr('title', checked ?\n                                i18n('search.filters.child.nodes.title.selected') :\n                                i18n('search.filters.child.nodes.title.unselected')\n                            );\n                            var filter = _.findWhere(list, { iri: d.iri });\n                            if (filter) {\n                                filter.includeChildNodes = checked;\n                                self.notifyOfFilters();\n                            }\n                        })\n                        .attr('title', i18n('search.filters.child.nodes.title.unselected'))\n                        .select('input').property('checked', d => d.includeChildNodes)\n                })\n        };\n\n        this.onChangeMatchType = function(event, data) {\n            this.setMatchType($(event.target).val());\n        };\n\n        this.onConceptChange = function(event, data) {\n            this.setConceptFilter(data.concept && data.concept.id || '');\n        };\n\n        this.onEdgeTypeChange = function(event, data) {\n            this.setEdgeTypeFilter(data.relationship && data.relationship.title || '');\n        };\n\n        this.onSortFieldsUpdated = function(event, data) {\n            this.setSort(data.sortFields, { propagate: false });\n        };\n\n        this.onEnableMatchSelection = function(event, data) {\n            this.$node.find('.search-options').toggle(data.match === true);\n            if (data.match) {\n                this.setMatchType(this.matchType);\n            }\n        };\n\n        this.onClearFilters = function(event, data) {\n            var self = this;\n            return this.clearFilters(data).then(function() {\n                self.trigger('filtersCleared');\n            })\n        };\n\n        this.clearFilters = function(options = {}) {\n            var self = this,\n                filterItems = this.$node.find('.prop-filters .filter');\n\n            filterItems.teardownAllComponents();\n\n            this.disableNotify = true;\n\n            return Promise.resolve(this.filtersLoaded)\n                .then(() => options.clearMatch !== false ? this.setMatchType('vertex') : null)\n                .then(() => this.setConceptFilter())\n                .then(() => this.setEdgeTypeFilter())\n                .then(this.setSort.bind(this))\n                .then(this.createNewRowIfNeeded.bind(this))\n                .then(function() {\n                    self.disableMatchEdges = false;\n                    self.otherFilters = {};\n                    self.$node.find('.entity-filters').hide().empty();\n                    self.$node.find('.extension-filter-row').hide();\n                    self.disableNotify = false;\n                    if (options.triggerUpdates !== false) {\n                        self.notifyOfFilters();\n                    }\n                });\n        };\n\n        this.hasSomeFilters = function(filters) {\n            return !!(filters &&\n                (!_.isEmpty(filters.conceptFilter) && this.matchType === 'vertex') ||\n                (!_.isEmpty(filters.edgeLabelFilter) && this.matchType === 'edge') ||\n                !_.isEmpty(filters.propertyFilters) ||\n                !_.isEmpty(filters.otherFilters) ||\n                !_.isEmpty(this.currentSort)\n             );\n        }\n\n        this.notifyOfFilters = function(options) {\n            var self = this;\n\n            if (this.disableNotify) return;\n\n            var filters = {\n                    otherFilters: this.otherFilters,\n                    conceptFilter: this.conceptFilter,\n                    edgeLabelFilter: this.edgeLabelFilter,\n                    sortFields: this.currentSort,\n                    matchType: this.matchType,\n                    propertyFilters: _.chain(this.propertyFilters)\n                        .map(function(filter) {\n                            const { propertyId, dataType, metadata, predicate, values } = filter;\n                            const dataKey = dataType ? 'dataType' : 'propertyId';\n\n                            if (propertyId) {\n                                const ontologyProperty = self.propertiesByDomainType[self.matchType].find(function(property) {\n                                    return property.title === propertyId;\n                                });\n\n                                if (ontologyProperty && ontologyProperty.dependentPropertyIris) {\n                                    return ontologyProperty.dependentPropertyIris.map(function(iri, i) {\n                                        if (_.isArray(values[i]) && _.reject(values[i], function(v) {\n                                            return v === null || v === undefined;\n                                        }).length) {\n                                            return {\n                                                propertyId: iri,\n                                                predicate,\n                                                values: values[i],\n                                                metadata\n                                            }\n                                        }\n                                    });\n                                }\n                            }\n\n                            return {\n                                [dataKey]: filter[dataKey],\n                                predicate,\n                                values,\n                                metadata\n                            };\n                        })\n                        .flatten(true)\n                        .compact()\n                        .value()\n                };\n\n            filters.hasSome = this.hasSomeFilters(filters);\n            filters.options = options;\n            const matchTypeChanged = this.previousMatchType !== this.matchType;\n            if (!filters.hasSome && matchTypeChanged) {\n                filters.options = { matchChanged: true }\n            }\n            this.previousMatchType = this.matchType;\n\n            this.trigger('filterschange', filters);\n        };\n\n        this.onRemoveExtensionRow = function(event, data) {\n            var self = this,\n                target = $(event.target),\n                row = target.closest('.extension-filter-row,.entity-filter-row'),\n                keys = row.data('filterKey');\n\n            row.hide();\n            if (!_.isArray(keys)) {\n                keys = [keys];\n            }\n            keys.forEach(function(key) {\n                delete self.otherFilters[key];\n            })\n            this.disableMatchEdges = false;\n            this.setMatchType(this.matchType);\n            this.notifyOfFilters();\n        };\n\n        this.createNewRowIfNeeded = function() {\n            if (!this.propertiesByDomainType[this.matchType]) {\n                return;\n            }\n            if (this.$node.find('.newrow').length === 0) {\n                return this.addFilterItem();\n            }\n        };\n\n        this.onSearchByParameters = function(event, data) {\n            var self = this,\n                filters = JSON.parse(data.parameters.filter);\n\n            this.disableNotify = true;\n            Promise.resolve(this.clearFilters())\n                .then(function() {\n                    if (data.parameters['relatedToVertexIds[]']) {\n                        return self.setRelatedToEntityFilter(data.parameters['relatedToVertexIds[]']);\n                    }\n                })\n                .then(function() {\n                    var matching = self.$node.find('.extension-filter-row').filter(function() {\n                        var keys = $(this).data('filterKey');\n                        if (!_.isArray(keys)) {\n                            keys = [keys];\n                        }\n                        if (_.some(data.parameters, function(val, key) {\n                            return _.contains(keys, key.replace(/\\[\\]$/, ''));\n                        })) {\n                            return true;\n                        }\n                    });\n                    return Promise.resolve(matching.toArray())\n                        .each(function(extensionLi) {\n                            var $extensionLi = $(extensionLi),\n                                keys = $extensionLi.data('filterKey'),\n                                delaySecondsBeforeTimeout = 6;\n\n                            if (!_.isArray(keys)) {\n                                keys = [keys];\n                            }\n                            return new Promise(function(fulfill) {\n                                var newFilters = _.chain(data.parameters)\n                                    .map(function(val, key) {\n                                        return [key.replace(/\\[\\]$/, ''), val];\n                                    })\n                                    .filter(function(pair) {\n                                        return _.contains(keys, pair[0]);\n                                    })\n                                    .object()\n                                    .value()\n\n                                $extensionLi\n                                    .on('savedQueryLoaded', function loaded() {\n                                        $extensionLi.off('savedQueryLoaded', loaded);\n                                        fulfill();\n                                    })\n                                    .trigger('loadSavedQuery', newFilters);\n                            }).timeout(delaySecondsBeforeTimeout * 1000, 'savedQueryLoaded not fired for extension that uses keys:' + keys);\n                        })\n                })\n                .then(function() {\n                    return self.setMatchType((/edge/).test(data.url) ? 'edge' : 'vertex');\n                })\n                .then(function() {\n                    // Legacy\n                    if (data.parameters.conceptType) {\n                        return self.setConceptFilter(\n                            data.parameters.conceptType,\n                            data.parameters.includeChildNodes\n                        );\n                    }\n                    if (data.parameters.conceptTypes) {\n                        var types = data.parameters.conceptTypes;\n                        if (_.isString(types)) {\n                            types = JSON.parse(types)\n                        }\n                        return self.setConceptFilter(types);\n                    }\n                    return self.setConceptFilter();\n                })\n                .then(function() {\n                    // Legacy\n                    if (data.parameters.edgeLabel) {\n                        return self.setEdgeTypeFilter(data.parameters.edgeLabel);\n                    }\n                    if (data.parameters.edgeLabels) {\n                        var types = data.parameters.edgeLabels;\n                        if (_.isString(types)) {\n                            types = JSON.parse(types)\n                        }\n                        return self.setEdgeTypeFilter(types);\n                    }\n                    return self.setEdgeTypeFilter();\n                })\n                .then(function() {\n                    var sortRaw = data.parameters['sort[]'],\n                        sort;\n                    if (sortRaw) {\n                        sort = _.chain(sortRaw)\n                            .map(function(sortStr) {\n                                var match = sortStr.match(/^(.*):(ASCENDING|DESCENDING)$/);\n                                if (match) {\n                                    return {\n                                        field: match[1],\n                                        direction: match[2]\n                                    }\n                                }\n                            })\n                            .compact()\n                            .value();\n                    }\n                    return self.setSort(sort);\n                })\n                .then(function() {\n                    return Promise.resolve(filters).map(function(filter) {\n                        return self.addFilterItem(filter, { hide: true });\n                    }, { concurrency: 1 });\n                })\n                .done(function() {\n                    self.disableNotify = false;\n                    self.$node.find('.filter').show();\n                    self.notifyOfFilters({ submit: data.submit === true });\n                });\n        };\n\n        this.teardownField = function(node) {\n            var self = this,\n                instanceInfo = flightRegistry.findInstanceInfoByNode(node[0]);\n            if (instanceInfo && instanceInfo.length) {\n                instanceInfo.forEach(function(info) {\n                    delete self.propertyFilters[info.instance.attr.id];\n                    self.notifyOfFilters();\n                    info.instance.teardown();\n                });\n            }\n\n            node.empty();\n        };\n\n        this.loadSorting = function() {\n            if (!this.attr.supportsSorting) return;\n            SortFilter.attachTo(this.select('sortContentSelector'));\n        };\n\n        this.loadEdgeTypes = function() {\n            RelationshipSelector.attachTo(this.select('edgeLabelDropdownSelector'), {\n                creatable: false,\n                defaultText: i18n('search.filters.all_edgetypes')\n            });\n        };\n\n        this.loadConcepts = function() {\n            ConceptSelector.attachTo(this.select('conceptDropdownSelector'), {\n                onlySearchable: true,\n                creatable: false,\n                defaultText: i18n('search.filters.all_concepts')\n            })\n        };\n\n        this.loadPropertyFilters = function() {\n            var self = this;\n\n            if (!_.isObject(this.propertiesByDomainType)) {\n                this.propertiesByDomainType = {};\n            }\n\n            return Promise.map(['vertex', 'edge'], type => this.dataRequest('ontology', 'propertiesByDomainType', type))\n                .spread((vertexProperties, edgeProperties) => {\n                    this.propertiesByDomainType['vertex'] = vertexProperties;\n                    this.propertiesByDomainType['edge'] = edgeProperties;\n                    return self.addFilterItem();\n                })\n        };\n\n        this.addFilterItem = function(filter, options) {\n            var self = this,\n                $li = $('<li>').data('filterId', this.filterId++),\n                attributes = filter ? {\n                    property: this.propertiesByDomainType[this.matchType].find(function(property) {\n                        return property.title === filter.propertyId;\n                    }),\n                    predicate: filter.predicate,\n                    values: filter.values\n                } : {\n                    properties: this.propertiesByDomainType[this.matchType],\n                    supportsHistogram: this.attr.supportsHistogram\n                },\n                $newRow = this.$node.find('.newrow');\n\n            if (this.propertyListFilter) {\n                attributes.listFilter = this.propertyListFilter;\n            }\n\n            if (filter) {\n                $li.addClass('filter')\n                    .toggle(Boolean(!options || !options.hide))\n\n                if ($newRow.length) {\n                    $li.insertBefore($newRow);\n                } else {\n                    $li.appendTo(this.$node.find('.prop-filters'));\n                }\n            } else {\n                $li.addClass('filter newrow')\n                    .appendTo(this.$node.find('.prop-filters'));\n            }\n\n            return new Promise(function(fulfill) {\n                self.on($li, 'fieldRendered', function rendered() {\n                    self.off($li, 'fieldRendered', rendered);\n                    fulfill();\n                });\n                FilterItem.attachTo($li, attributes);\n                self.createNewRowIfNeeded();\n            })\n        }\n    }\n});\n"]}