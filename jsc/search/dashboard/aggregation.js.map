{"version":3,"sources":["../../../js/search/dashboard/aggregation.js"],"names":["define","defineComponent","d3","withDataRequest","ontology","template","DATA_TYPE_NUMBERS","AGGREGATIONS","value","name","i18n","dataTypes","INTERVAL_UNITS","label","HISTOGRAM_CALCULATED_BUCKETS","PRECISIONS","selected","defaultInterval","idIncrement","Aggregation","datumToDisplayName","d","properties","byTitle","field","displayName","attributes","aggregationSelector","addSelector","formSelector","inputsSelector","histogramIntervalSelector","histogramDateIntervalSelector","histogramIntervalUnitsSelector","histogramIntervalValueSelector","aggregations","after","on","onChangeAggregation","onChangeInputs","onKeyup","onAdd","onPropertySelected","onFilterProperties","attr","map","addId","a","id","_","isArray","nested","currentAggregation","updateAggregations","$node","html","precisions","intervalUnits","event","data","$target","$","target","val","save","is","precision","interval","parseInt","String","select","which","isEmpty","add","type","parentAggregation","aggregationToEdit","text","hide","show","aggregationField","prop","updateAggregationDependents","replaceObjectInListWithObject","list","newObject","existing","findWhere","replaced","index","indexOf","splice","push","minDocumentCount","self","property","find","trigger","title","$interval","$intervalUnits","$intervalValue","$dateInterval","loadStatsForAggregation","done","stats","range","max","min","buckets","ontologyProperty","isDate","dataType","Math","round","minuteInterval","toggle","aggregation","Promise","f","r","off","success","statistics","editAggregation","args","toArray","arguments","require","apply","selectAll","call","enter","append","style","display","flex","cursor","bind","closest","defer","margin","padding","exit","remove","parent","nestedLi","li","nestedIndex","length","contains","clone","extend","c","omit","section","others","siblings","placeholder","intervalUnitIndex","i","intervalUnit","last","console","warn","attachPropertySelection","node","options","then","FieldSelection","teardownComponent","onlyDataTypes","validDataTypes","attachTo","selectedProperty","onlySortable","includes","rollupCompound","hideCompound"],"mappings":"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","file":"aggregation.js","sourcesContent":["define([\n    'flight/lib/component',\n    'd3',\n    'util/withDataRequest',\n    'util/requirejs/promise!util/service/ontologyPromise',\n    './aggregationTpl.hbs'\n], function(\n    defineComponent,\n    d3,\n    withDataRequest,\n    ontology,\n    template) {\n    'use strict';\n\n    const DATA_TYPE_NUMBERS = ['integer', 'decimal', 'double', 'number', 'currency']\n\n    const AGGREGATIONS = [\n            {\n                value: 'term',\n                name: i18n('dashboard.savedsearches.aggregation.type.counts'),\n                dataTypes: ['date', 'boolean', 'string', ...DATA_TYPE_NUMBERS]\n            },\n            {\n                value: 'histogram',\n                name: i18n('dashboard.savedsearches.aggregation.type.histogram'),\n                dataTypes: ['date', ...DATA_TYPE_NUMBERS]\n            },\n            {\n                value: 'geohash',\n                name: i18n('dashboard.savedsearches.aggregation.type.geo'),\n                dataTypes: ['geoLocation']\n            }\n        ],\n        INTERVAL_UNITS = [\n            { value: 1000 * 60, label: 'minutes' },\n            { value: 1000 * 60 * 60, label: 'hours' },\n            { value: 1000 * 60 * 60 * 24, label: 'days' },\n            { value: 1000 * 60 * 60 * 24 * 365, label: 'years' }\n        ],\n        HISTOGRAM_CALCULATED_BUCKETS = 20,\n        PRECISIONS = [\n            { value: 1, label: i18n('dashboard.savedsearches.aggregation.geo.precision.1') },\n            { value: 2, label: i18n('dashboard.savedsearches.aggregation.geo.precision.2') },\n            { value: 3, label: i18n('dashboard.savedsearches.aggregation.geo.precision.3') },\n            { value: 4, label: i18n('dashboard.savedsearches.aggregation.geo.precision.4') },\n            { value: 5, label: i18n('dashboard.savedsearches.aggregation.geo.precision.5'), selected: true },\n            { value: 6, label: i18n('dashboard.savedsearches.aggregation.geo.precision.6') },\n            { value: 7, label: i18n('dashboard.savedsearches.aggregation.geo.precision.7') },\n            { value: 8, label: i18n('dashboard.savedsearches.aggregation.geo.precision.8') }\n        ],\n        defaultInterval = 20;\n    var idIncrement = 1;\n\n    return defineComponent(Aggregation, withDataRequest);\n\n    function datumToDisplayName(d) {\n        return ontology.properties.byTitle[d.field].displayName;\n    }\n\n    function Aggregation() {\n\n        this.attributes({\n            aggregationSelector: 'select.aggregation',\n            addSelector: '.add-aggregation',\n            formSelector: '.form',\n            inputsSelector: '.agg .interval, .agg .precision',\n            histogramIntervalSelector: '.histogram .interval',\n            histogramDateIntervalSelector: '.histogram .date_interval',\n            histogramIntervalUnitsSelector: '.histogram .interval_units',\n            histogramIntervalValueSelector: '.histogram .interval_value',\n            aggregations: []\n        })\n\n        this.after('initialize', function() {\n\n            this.on('change', {\n                aggregationSelector: this.onChangeAggregation,\n                inputsSelector: this.onChangeInputs,\n                histogramDateIntervalSelector: this.onChangeInputs\n            })\n\n            this.on('keyup', {\n                inputsSelector: this.onKeyup,\n                histogramDateIntervalSelector: this.onKeyup\n            });\n\n            this.on('click', {\n                addSelector: this.onAdd\n            })\n\n            this.on('propertyselected', this.onPropertySelected);\n            this.on('filterProperties', this.onFilterProperties);\n\n            this.aggregations = (this.attr.aggregations || []).map(function addId(a) {\n                if (!a.id) a.id = idIncrement++;\n                if (_.isArray(a.nested)) {\n                    a.nested = a.nested.map(addId);\n                }\n                return a;\n            });\n            this.currentAggregation = null;\n            this.updateAggregations(null, true);\n\n            this.$node.html(template({\n                aggregations: AGGREGATIONS,\n                precisions: PRECISIONS,\n                intervalUnits: INTERVAL_UNITS\n            }));\n        });\n\n        this.onChangeInputs = function(event, data) {\n            var $target = $(event.target), val, save = true;\n            if ($target.is('.precision')) {\n                this.currentAggregation.precision = $target.val();\n            } else if ($target.is('.interval')) {\n                this.currentAggregation.interval = $target.val();\n            } else if ($target.is('.interval_value')) {\n                val = parseInt($target.val(), 10) || defaultInterval;\n                this.currentAggregation.interval = String(val * parseInt(this.select('histogramIntervalUnitsSelector').val(), 10));\n            } else if ($target.is('.interval_units')) {\n                val = parseInt(this.select('histogramIntervalValueSelector').val(), 10) || defaultInterval;\n                this.currentAggregation.interval = String(parseInt($target.val(), 10) * val);\n            }\n            if (save) {\n                this.save();\n            }\n        };\n\n        this.onKeyup = function(event) {\n            if (event.which === 13 && this.currentAggregation && this.currentAggregation.field) {\n                this.save();\n            }\n        };\n\n        this.onAdd = function(event) {\n            if (!$(event.target).is(':visible')) return;\n\n            if (_.isEmpty(this.aggregations)) {\n                this.add({ type: '' });\n            } else {\n                this.add({ parentAggregation: this.aggregations[0] });\n            }\n        };\n\n        this.add = function(aggregationToEdit) {\n            if (this.currentAggregation) {\n                this.select('addSelector').text('Add');\n                this.currentAggregation = null;\n                this.select('formSelector').hide();\n                this.updateAggregations()\n            } else {\n                this.currentAggregation = aggregationToEdit;\n                this.select('addSelector').text(i18n('dashboard.savedsearches.button.cancel')).show();\n                this.select('formSelector').show();\n                var aggregationField = this.select('aggregationSelector');\n                if (aggregationToEdit.parentAggregation) {\n                    aggregationField.prop('disabled', true).val('term');\n                } else {\n                    aggregationField.prop('disabled', false);\n                }\n                this.updateAggregationDependents(this.currentAggregation.type || aggregationField.val());\n            }\n\n        };\n\n        this.replaceObjectInListWithObject = function(list, newObject) {\n            var existing = newObject.id && _.findWhere(list, { id: newObject.id }),\n                replaced = false,\n                index = existing && _.indexOf(list, existing);\n\n            if (index >= 0) {\n                list.splice(index, 1, newObject);\n                replaced = true;\n            }\n\n            if (!replaced) {\n                list.push(newObject);\n            }\n        };\n\n        this.save = function() {\n            var parentAggregation = this.currentAggregation.parentAggregation;\n            if (parentAggregation) {\n                parentAggregation.nested = parentAggregation.nested || [];\n                this.currentAggregation.name = this.currentAggregation.field;\n                this.replaceObjectInListWithObject(parentAggregation.nested, this.currentAggregation);\n            } else {\n                this.replaceObjectInListWithObject(this.aggregations, this.currentAggregation);\n            }\n\n            if (!this.currentAggregation.id) {\n                this.currentAggregation.id = idIncrement++;\n            }\n            if (this.currentAggregation.type === 'histogram') {\n                this.currentAggregation.minDocumentCount = 0;\n            }\n            this.currentAggregation = null;\n            this.select('formSelector').hide();\n            this.select('addSelector').text('Add');\n            this.updateAggregations();\n        }\n\n        this.onPropertySelected = function(event, data) {\n            var self = this;\n\n            if (!data.property) {\n                this.$node.find('.property-select').trigger('selectProperty');\n                return;\n            }\n            this.currentAggregation.field = data.property.title;\n            this.currentAggregation.name = 'field';\n            if (this.currentAggregation.type === 'histogram') {\n                var $interval = this.select('histogramIntervalSelector'),\n                    $intervalUnits = this.select('histogramIntervalUnitsSelector'),\n                    $intervalValue = this.select('histogramIntervalValueSelector'),\n                    $dateInterval = this.select('histogramDateIntervalSelector');\n\n                this.loadStatsForAggregation(this.currentAggregation)\n                    .done(function(stats) {\n                        var range = stats.max - stats.min,\n                            buckets = range / HISTOGRAM_CALCULATED_BUCKETS,\n                            ontologyProperty = ontology.properties.byTitle[stats.field],\n                            isDate = ontologyProperty && ontologyProperty.dataType === 'date',\n                            interval = Math.round(buckets);\n\n                        if (isDate) {\n                            var minuteInterval = INTERVAL_UNITS[0].value;\n                            self.currentAggregation.isDate = true;\n                            interval = interval < minuteInterval ? minuteInterval : interval;\n                            $intervalUnits.val(minuteInterval);\n                        }\n                        $interval.val(interval);\n                        $interval.toggle(!isDate);\n                        $dateInterval.toggle(isDate);\n\n                        self.currentAggregation.interval = String(interval);\n                        self.save();\n                    });\n            } else {\n                this.save();\n            }\n        };\n\n        this.loadStatsForAggregation = function(aggregation) {\n            var self = this;\n\n            return new Promise(function(f, r) {\n                self.off('aggregationStatistics');\n                self.on('aggregationStatistics', function(event, data) {\n                    self.off('aggregationStatistics');\n                    if (data.success && data.statistics.field === aggregation.field) {\n                        f(data.statistics);\n                    } else {\n                        r()\n                    }\n                })\n                self.trigger('statisticsForAggregation', {\n                    aggregation: aggregation\n                });\n            });\n        };\n\n        this.onChangeAggregation = function(event) {\n            var aggregation = $(event.target).val();\n            this.updateAggregationDependents(aggregation);\n        };\n\n        this.editAggregation = function(aggregation) {\n            this.currentAggregation = null;\n            this.add(aggregation);\n        };\n\n        this.updateAggregations = function(d3) {\n            var self = this;\n\n            if (!d3) {\n                var args = _.toArray(arguments);\n                return require(['d3'], function(d3) {\n                    args.splice(0, 1, d3);\n                    self.updateAggregations.apply(self, args);\n                });\n            }\n\n            d3.select(this.$node.find('ul.aggregations')[0])\n                .selectAll('li')\n                .data(this.aggregations)\n                .call(function() {\n                    this.enter().append('li').style({ 'flex-wrap': 'wrap', display: 'flex'})\n                        .call(function() {\n                            this.append('span')\n                                .style({flex: 1, cursor: 'pointer'})\n                                .on('click', self.editAggregation.bind(self));\n                            this.append('button').attr('class', 'remove-icon')\n                                .on('click', function() {\n                                    self.aggregations.splice($(d3.event.target).closest('li').index(), 1);\n                                    _.defer(function() {\n                                        self.updateAggregations(d3);\n                                    })\n                                })\n                            this.append('ul').style({\n                                flex: '1 0 100%',\n                                margin: 0,\n                                padding: 0\n                            })\n                        })\n                    this.exit().remove();\n                    this.select('span').text(datumToDisplayName)\n                })\n                .select('ul')\n                .selectAll('li')\n                .data(function(d) {\n                    return d.nested || [];\n                })\n                .call(function() {\n                    this.enter().append('li').style('display', 'flex')\n                        .call(function() {\n                            this.append('span')\n                                .style({ flex: 1, 'padding-left': '2em', cursor: 'pointer'})\n                                .on('click', function(aggregation) {\n                                    var parentAggregation = self.aggregations[$(d3.event.target).closest('li').parent().closest('li').index()];\n                                    aggregation.parentAggregation = parentAggregation;\n                                    self.editAggregation(aggregation);\n                                });\n                            this.append('button').attr('class', 'remove-icon')\n                                .on('click', function() {\n                                    var nestedLi = $(d3.event.target).closest('li'),\n                                        li = nestedLi.parent().closest('li'),\n                                        nestedIndex = nestedLi.index(),\n                                        index = li.index();\n\n                                    self.aggregations[index].nested.splice(nestedIndex, 1);\n                                    _.defer(function() {\n                                        self.updateAggregations(d3);\n                                    })\n                                })\n                        });\n                    this.exit().remove();\n                    this.select('span').text(datumToDisplayName)\n                })\n\n            this.select('addSelector').toggle(this.aggregations.length === 0 || (\n                _.isEmpty(this.aggregations[0].nested) && _.contains(['term'/*, 'histogram'*/], this.aggregations[0].type)\n            ));\n\n            this.trigger('aggregationsUpdated', {\n                aggregations: this.aggregations.map(function(a) {\n                    if (_.isArray(a.nested)) {\n                        var clone = _.extend({}, a);\n                        a.nested = a.nested.map(function(c) {\n                            return _.omit(c, 'parentAggregation');\n                        });\n                    }\n                    return a;\n                })\n            })\n        };\n\n        this.updateAggregationDependents = function(type) {\n            var section = this.$node.find('.' + type).show(),\n                others = section.siblings('div').hide(),\n                aggregation = this.currentAggregation,\n                placeholder;\n\n            this.currentAggregation.type = type;\n\n            switch (type) {\n                case 'geohash':\n                    if (!aggregation.precision) {\n                        aggregation.precision = '5';\n                    }\n\n                    section.find('.precision').val(aggregation.precision);\n                    placeholder = i18n('dashboard.search.aggregation.geohash.property.placeholder');\n                    break;\n\n                case 'histogram':\n                    if (!aggregation.interval) {\n                        aggregation.interval = String(defaultInterval);\n                    }\n\n                    var ontologyProperty = ontology.properties.byTitle[this.currentAggregation.field],\n                        isDate = !!ontologyProperty && ontologyProperty.dataType === 'date',\n                        $interval = section.find('.interval').toggle(!isDate);\n\n                    section.find('.date_interval').toggle(isDate);\n                    $interval.val(aggregation.interval);\n                    if (isDate) {\n                        var interval = parseInt(aggregation.interval, 10),\n                            intervalUnitIndex = -1;\n\n                        for (var i = 0; i < INTERVAL_UNITS.length; i++) {\n                            if (interval < INTERVAL_UNITS[i].value) {\n                                intervalUnitIndex = i;\n                                break;\n                            }\n                        }\n                        var intervalUnit = intervalUnitIndex === -1 ?\n                            _.last(INTERVAL_UNITS) :\n                            INTERVAL_UNITS[Math.max(0, intervalUnitIndex - 1)];\n\n                        section.find('.interval_value').val(Math.round(interval / intervalUnit.value));\n                        section.find('.interval_units').val(intervalUnit.value);\n                    }\n                    break;\n\n                case 'term':\n                    break;\n\n                default:\n                    console.warn('No aggregation of type', aggregation);\n            }\n\n            this.select('aggregationSelector').val(type);\n            this.attachPropertySelection(section.find('.property-select'), {\n                selected: aggregation && aggregation.field,\n                placeholder: placeholder || i18n('dashboard.savedsearches.aggregation.property.placeholder')\n            });\n        };\n\n        this.onFilterProperties = function(event, data) {\n            if ($(event.target).is('.property-select')) return;\n\n            this.$node.find('.property-select').trigger(event.type, data)\n        };\n\n        this.attachPropertySelection = function(node, options) {\n            var self = this;\n            if (!options) {\n                options = {};\n            }\n            return Promise.require('util/ontology/propertySelect').then(function(FieldSelection) {\n                node.teardownComponent(FieldSelection);\n\n                const onlyDataTypes = self.validDataTypes();\n                FieldSelection.attachTo(node, {\n                    selectedProperty: options.selected,\n                    onlyDataTypes,\n                    onlySortable: onlyDataTypes.includes('geoLocation') ? null : true,\n                    placeholder: options.placeholder || '',\n                    rollupCompound: false,\n                    hideCompound: true\n                });\n            });\n        };\n\n        this.validDataTypes = function() {\n            var aggregation = _.find(AGGREGATIONS, a => a.value === this.currentAggregation.type);\n            return aggregation.dataTypes;\n        };\n\n    }\n});\n"]}