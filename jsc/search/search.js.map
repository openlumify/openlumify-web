{"version":3,"sources":["../../js/search/search.js"],"names":["define","require","defineComponent","template","alertTemplate","withDataRequest","F","withElementScrollingPositionUpdates","registry","d3","SearchToolbarExtensionPopover","Attacher","SEARCH_TYPES","documentExtensionPoint","e","canHandle","_","isFunction","onElementCreated","onClick","isString","tooltip","icon","action","type","componentPath","name","displayName","savedSearchUrl","SavedSearchPopover","Search","savedQueries","indexBy","map","query","filters","status","defaultAttrs","formSelector","querySelector","queryValidationSelector","queryExtensionsSelector","queryExtensionsButtonSelector","hitsSelector","advancedSearchDropdownSelector","advancedSearchTypeSelector","savedSearchSelector","queryContainerSelector","clearSearchSelector","segmentedControlSelector","filtersInfoSelector","searchTypeSelector","after","render","currentSearchByUrl","currentSearchUrl","triggerQueryUpdatedThrottled","throttle","triggerQueryUpdated","bind","debounce","on","onSegmentedControlsClick","onClearSearchClick","onAdvancedSearchTypeClick","onSavedSearch","onExtensionToolbarClick","select","onAdvancedSearchDropdown","onQueryChange","onQueryFocus","onSavedQuerySelected","onSetCurrentSearchForSaving","onFiltersChange","onClearSearch","onSearchResultsBegan","onSearchResultsCompleted","onSearchTypeLoaded","document","onSearchByParameters","onSearchForPhrase","onSearchByRelatedEntity","onSearchByProperty","onSearchPaneVisible","onSwitchSearchType","onToggleDisplay","event","data","$","target","is","currentSearchNode","advancedActive","params","advancedSearchExtension","initialParameters","parameters","attach","trigger","submit","self","currentSearchQuery","url","advancedSearch","findWhere","extensionsForPoint","filter","openSearchType","then","node","getSearchTypeNode","find","val","q","updateClearSearch","attr","openlumifyFilter","test","currentSearch","updateQueryToolbarExtensions","extensions","toolbarExtensionsById","inc","mapped","identifier","$container","items","get","selectAll","call","enter","append","each","property","style","order","exit","remove","$toolbarButton","extension","datum","preventDefault","stopPropagation","lookupComponent","defer","teardownAllComponents","Promise","Component","attachTo","model","search","Error","JSON","stringify","$node","closest","length","hide","searchType","d","Deferred","fulfill","reject","handler","off","done","resolve","loadedHandler","switchSearchType","replace","delay","focus","addClass","removeClass","updateQueryStatus","getSearchTypeOrId","$error","$hits","success","empty","message","text","html","error","i18n","updateTypeCss","hadFilters","hasFilters","getQueryVal","options","dataRequest","properties","setAsteriskSearchOnEmpty","hasQuery","validSearch","matchChanged","isScrubbing","triggerQuerySubmit","which","ui","keyCode","ENTER","ESCAPE","canClearSearch","blur","$query","$clear","clearMatch","$target","path","$button","$advancedButton","next","dropdown","opened","siblings","addBack","Save","searches","id","list","update","setQueryVal","isObject","newSearchType","advanced","previousSearchType","updateAdvancedSearchDropdown","cls","className","to","appendTo","resizable","handles","minWidth","maxWidth","resize","show","searchTypePromise","resultsSelector","$resultsContainer","behavior","setCurrentSearchForSaving","attacher","renderResults","renderFn","push","updateQueryValue","segmentedButton","toLowerCase","end","SearchType","alreadyAttached","dropdownCaret","previousSibling","textContent","toggle","css","outerHeight","hasSome","trim","triggerOnType","eventName","value","partial","change","classList","match","types","i","OpenLumify","Workspace","selected"],"mappings":"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","file":"search.js","sourcesContent":["define([\n    'require',\n    'flight/lib/component',\n    './searchTpl.hbs',\n    'tpl!util/alert',\n    'util/withDataRequest',\n    'util/formatters',\n    'util/popovers/withElementScrollingPositionUpdates',\n    'configuration/plugins/registry',\n    'd3',\n    './extensionToolbarPopover',\n    'util/component/attacher'\n], function(\n    require,\n    defineComponent,\n    template,\n    alertTemplate,\n    withDataRequest,\n    F,\n    withElementScrollingPositionUpdates,\n    registry,\n    d3,\n    SearchToolbarExtensionPopover,\n    Attacher) {\n    'use strict';\n\n    var SEARCH_TYPES = ['OpenLumify'];\n\n    /**\n     * Search toolbar items display below the search query input field.\n     *\n     * They have access to the current search query (if available),\n     * and can react to click events with content in a popover, or a custom event.\n     * @param {string} tooltip What to display in `title` attribute\n     * @param {string} icon URL path to icon to display. Use monochromatic icon with black as color. Opacity is adjusted automatically, and modified on hover.\n     * @param {object} action Action to take place on click events. Must include `type` key set to one of:\n     * @param {string} action.type Type of action event to occur: `popover` or `event`\n     * @param {string} [action.componentPath] Required when `type='popover'`\n     * Path to {@link org.openlumify.search.toolbar~Component}\n     * @param {string} [action.name] Required when `type='event'`, name of\n     * event to fire\n     *\n     *     // action: { type: 'event', name: 'MyCustomEventName' }\n     *     $(document).on('myCustomEventName', function(event, data) {\n     *         // data.extension\n     *         // data.currentSearch\n     *     })\n     * @param {org.openlumify.search.toolbar~canHandle} [canHandle] Set a function to determine if the toolbar icon should be displayed.\n     * @param {org.openlumify.search.toolbar~onElementCreated} [onElementCreated] Will be called after icon ImageElement is created.\n     * @param {org.openlumify.search.toolbar~onClick} [onClick] Function will be called during click event, before the `action` behavior\n     */\n    registry.documentExtensionPoint('org.openlumify.search.toolbar',\n        'Add toolbar icons under search query box',\n        function(e) {\n            return (!e.canHandle || _.isFunction(e.canHandle)) &&\n                (!e.onElementCreated || _.isFunction(e.onElementCreated)) &&\n                (!e.onClick || _.isFunction(e.onClick)) &&\n                _.isString(e.tooltip) &&\n                _.isString(e.icon) &&\n                e.action && (\n                    (e.action.type === 'popover' && e.action.componentPath) ||\n                    (e.action.type === 'event' && e.action.name)\n                )\n        },\n        'http://docs.openlumify.org/extension-points/front-end/searchToolbar'\n    );\n\n    /**\n     * Alternate search interfaces to replace the content in the search pane.\n     *\n     * Each of the search interfaces has its own saved searches.\n     *\n     * @param {string} componentPath Path to {@link org.openlumify.search.advanced~Component}\n     * @param {string} displayName The text to display in search dropdown (to\n     * select the type of search interface)\n     * @param {string} savedSearchUrl The endpoint to execute when search is changed\n     */\n    registry.documentExtensionPoint('org.openlumify.search.advanced',\n        'Add alternate search interfaces',\n        function(e) {\n            return (e.componentPath && e.displayName && e.savedSearchUrl);\n        },\n        'http://docs.openlumify.org/extension-points/front-end/searchAdvanced'\n    );\n\n    /**\n     * @undocumented\n     */\n    registry.documentExtensionPoint('org.openlumify.search.filter',\n        'Add new types of search filters',\n        function(e) {\n            return ('searchType' in e) &&\n                ('componentPath' in e);\n        },\n        'http://docs.openlumify.org/extension-points/front-end/searchFilters'\n    );\n\n    var SavedSearchPopover;\n\n    return defineComponent(Search, withDataRequest, withElementScrollingPositionUpdates);\n\n    function Search() {\n\n        this.savedQueries = _.indexBy(SEARCH_TYPES.map(function(type) {\n            return {\n                type: type,\n                query: '',\n                filters: [],\n                status: {}\n            }\n        }), 'type');\n\n        this.defaultAttrs({\n            formSelector: '.navbar-search',\n            querySelector: '.navbar-search .search-query',\n            queryValidationSelector: '.search-query-validation',\n            queryExtensionsSelector: '.below-query .extensions',\n            queryExtensionsButtonSelector: '.below-query .extensions > button',\n            hitsSelector: '.search-hits',\n            advancedSearchDropdownSelector: '.search-dropdowns .advanced',\n            advancedSearchTypeSelector: '.search-dropdowns .advanced-dropdown li a',\n            savedSearchSelector: '.search-dropdowns .saved',\n            queryContainerSelector: '.search-query-container',\n            clearSearchSelector: '.search-query-container a',\n            segmentedControlSelector: '.segmented-control',\n            filtersInfoSelector: '.filter-info',\n            searchTypeSelector: '.search-type'\n        });\n\n        this.after('initialize', function() {\n            this.render();\n\n            this.currentSearchByUrl = {};\n            this.currentSearchUrl = '';\n\n            this.triggerQueryUpdatedThrottled = _.throttle(this.triggerQueryUpdated.bind(this), 100);\n            this.triggerQueryUpdated = _.debounce(this.triggerQueryUpdated.bind(this), 500);\n\n            this.on('click', {\n                segmentedControlSelector: this.onSegmentedControlsClick,\n                clearSearchSelector: this.onClearSearchClick,\n                advancedSearchTypeSelector: this.onAdvancedSearchTypeClick,\n                savedSearchSelector: this.onSavedSearch,\n                queryExtensionsButtonSelector: this.onExtensionToolbarClick\n            });\n            this.on(this.select('advancedSearchDropdownSelector'), 'click', this.onAdvancedSearchDropdown);\n            this.on('change keydown keyup paste', {\n                querySelector: this.onQueryChange\n            });\n            this.on(this.select('querySelector'), 'focus', this.onQueryFocus);\n\n            this.on('savedQuerySelected', this.onSavedQuerySelected);\n            this.on('setCurrentSearchForSaving', this.onSetCurrentSearchForSaving);\n            this.on('filterschange', this.onFiltersChange);\n            this.on('clearSearch', this.onClearSearch);\n            this.on('searchRequestBegan', this.onSearchResultsBegan);\n            this.on('searchRequestCompleted', this.onSearchResultsCompleted);\n            this.on('searchtypeloaded', this.onSearchTypeLoaded);\n            this.on(document, 'searchByParameters', this.onSearchByParameters);\n            this.on(document, 'searchForPhrase', this.onSearchForPhrase);\n            this.on(document, 'searchByRelatedEntity', this.onSearchByRelatedEntity);\n            this.on(document, 'searchByProperty', this.onSearchByProperty);\n            this.on(document, 'searchPaneVisible', this.onSearchPaneVisible);\n            this.on(document, 'switchSearchType', this.onSwitchSearchType);\n            this.on(document, 'menubarToggleDisplay', this.onToggleDisplay);\n        });\n\n        /**\n         * Fired when user selects a saved search.\n         * {@link org.openlumify.search.advanced~Component|AdvancedSearch}\n         * components should listen and load the search\n         *\n         * @event org.openlumify.search.advanced#savedQuerySelected\n         * @property {object} data\n         * @property {object} data.query\n         * @property {string} data.query.url The search endpoint\n         * @property {object} data.query.parameters The search endpoint parameters\n         */\n        this.onSavedQuerySelected = function(event, data) {\n            if ($(event.target).is(this.currentSearchNode)) return;\n\n            if (this.advancedActive) {\n                const params = this.advancedSearchExtension.params();\n                this.advancedSearchExtension.params({\n                    ...params,\n                    initialParameters: data.query.parameters\n                }).attach();\n                this.currentSearchNode.trigger('savedQuerySelected', data);\n            } else {\n                this.trigger(\n                    'searchByParameters',\n                    {\n                        ...data.query,\n                        submit: true\n                    }\n                );\n            }\n        };\n\n        this.onSearchByParameters = function(event, data) {\n            var self = this;\n\n            if ($(event.target).is(this.currentSearchNode)) return;\n\n            this.currentSearchQuery = data;\n            this.currentSearchByUrl[data.url] = data;\n\n            var advancedSearch = data.url &&\n                _.findWhere(registry.extensionsForPoint('org.openlumify.search.advanced'), { savedSearchUrl: data.url })\n\n            if (!data.url) data.url = '/vertex/search';\n            if (!data.parameters) data.parameters = {};\n            if (!data.parameters.filter) data.parameters.filter = '[]';\n\n            this.openSearchType(advancedSearch ?\n                { ...advancedSearch, advancedSearch: advancedSearch.componentPath } :\n                'OpenLumify'\n            ).then(function() {\n                var node = self.getSearchTypeNode().find('.search-filters > .content');\n                if ('q' in data.parameters) {\n                    self.select('querySelector').filter(':visible')\n                        .val(data.parameters.q)\n                        .select()\n                    self.updateClearSearch();\n                }\n                node.trigger(event.type, data);\n            });\n        };\n\n        /**\n         * @event org.openlumify.search.advanced#setCurrentSearchForSaving\n         * @property {object} data\n         * @property {string} data.url The endpoint url (should match extension\n         * point savedSearchUrl)\n         * @property {object} data.parameters The parameters to send to endpoint\n         */\n        this.onSetCurrentSearchForSaving = function(event, data) {\n            if (event.target && $(event.target).is(this.attr.savedSearchSelector)) return;\n\n            if (data && data.url) {\n                var openlumifyFilter = /^\\/(?:vertex|element|edge)\\/search$/;\n                this.currentSearchByUrl[data.url] = data;\n                if (openlumifyFilter.test(data.url)) {\n                    this.currentSearchByUrl['/vertex/search'] = data;\n                }\n                this.currentSearch = data;\n            } else {\n                this.currentSearchByUrl = {};\n                this.currentSearch = null;\n            }\n            this.select('savedSearchSelector').trigger('setCurrentSearchForSaving', this.currentSearchByUrl[this.currentSearchUrl]);\n            this.updateQueryToolbarExtensions();\n        };\n\n        this.updateQueryToolbarExtensions = function() {\n            var self = this,\n                extensions = registry.extensionsForPoint('org.openlumify.search.toolbar');\n            if (!this.toolbarExtensionsById) {\n                var inc = 0,\n                    mapped = extensions.map(function(e) {\n                        e.identifier = inc++;\n                        return e;\n                    });\n                this.toolbarExtensionsById = _.indexBy(mapped, 'identifier')\n            }\n\n            var $container = this.select('queryExtensionsSelector'),\n                items = _.filter(extensions, function(e) {\n                    /**\n                     * @callback org.openlumify.search.toolbar~canHandle\n                     * @param {object} [currentSearch] Could be null if\n                     * current search is invalid\n                     * @param {object} currentSearch.url\n                     * @param {object} currentSearch.parameters\n                     * @returns {boolean} If the item can handle the search\n                     */\n                    return !_.isFunction(e.canHandle) || e.canHandle(self.currentSearch);\n                });\n\n            d3.select($container.get(0))\n                .selectAll('button')\n                .data(items)\n                .call(function() {\n                    this.enter().append('button')\n                        .each(function(e) {\n                            if (_.isFunction(e.onElementCreated)) {\n                                /**\n                                 * @callback org.openlumify.search.toolbar~onElementCreated\n                                 * @param {Element} element The dom element that the\n                                 * toolbar item is in\n                                 */\n                                e.onElementCreated(this)\n                            }\n                        })\n                        .attr('title', _.property('tooltip'))\n                        .style('background-image', function(e) {\n                            return 'url(' + e.icon + ')'\n                        })\n                    this.order()\n                    this.exit().remove();\n                })\n        };\n\n        this.onExtensionToolbarClick = function(event) {\n            var self = this,\n                $toolbarButton = $(event.target),\n                extension = d3.select(event.target).datum();\n\n            event.preventDefault();\n            if (extension) {\n                if (_.isFunction(extension.onClick)) {\n                    /**\n                     * @callback org.openlumify.search.toolbar~onClick\n                     * @param {Event} event The click event\n                     * @returns {boolean} If false the `action` defined in the\n                     * extension won't execute.\n                     */\n                    if (extension.onClick(event) === false) {\n                        event.stopPropagation();\n                        return;\n                    }\n                }\n                switch (extension.action && extension.action.type || '') {\n                  case 'popover':\n                    if ($toolbarButton.lookupComponent(SearchToolbarExtensionPopover)) {\n                        _.defer(function() {\n                            $toolbarButton.teardownAllComponents();\n                        });\n                        return;\n                    }\n                    Promise.require(extension.action.componentPath)\n                        .then(function(Component) {\n                            SearchToolbarExtensionPopover.attachTo($toolbarButton, {\n                                Component: Component,\n                                model: {\n                                    search: self.currentSearch\n                                },\n                                extension: extension\n                            })\n                        });\n                    break;\n\n                  case 'event':\n                    $toolbarButton.trigger(extension.action.name, {\n                        extension: extension,\n                        currentSearch: this.currentSearch\n                    });\n                    break;\n\n                  default:\n                      throw new Error('Unknown action for toolbar item extension: ' + JSON.stringify(extension));\n                }\n            }\n        };\n\n        this.onToggleDisplay = function(event, data) {\n            if (data.name === 'search' && this.$node.closest('.visible').length === 0) {\n                this.$node.find('.advanced-search-type-results').hide();\n            }\n        };\n\n        this.onSearchTypeLoaded = function() {\n            this.trigger('paneResized');\n            this.updateQueryToolbarExtensions();\n        };\n\n        this.openSearchType = function(searchType) {\n            var self = this,\n                d = $.Deferred();\n\n            new Promise(function(fulfill, reject) {\n                if (self.$node.closest('.visible').length === 0) {\n                    self.searchType = null;\n                    self.on(document, 'searchPaneVisible', function handler(data) {\n                        self.off(document, 'searchPaneVisible', handler);\n                        fulfill();\n                    })\n                    self.trigger(document, 'menubarToggleDisplay', { name: 'search' });\n                } else fulfill();\n            }).done(function() {\n                if (self.searchType === searchType) {\n                    d.resolve();\n                } else {\n                    self.on('searchtypeloaded', function loadedHandler() {\n                        self.off('searchtypeloaded', loadedHandler);\n                        d.resolve();\n                    });\n                }\n                self.switchSearchType(searchType);\n            });\n\n            return d;\n        };\n\n        this.onSearchForPhrase = function(event, data) {\n            this.trigger('searchByParameters', {\n                submit: true,\n                parameters: {\n                    q: '\"' + data.query.replace(/\"/g, '\\\\\"') + '\"'\n                }\n            });\n        };\n\n        this.onSearchByProperty = function(event, data) {\n            var self = this;\n\n            this.openSearchType('OpenLumify')\n                .done(function() {\n                    var node = self.getSearchTypeNode().find('.search-filters .content');\n                    self.select('querySelector').val('');\n                    self.trigger(node, 'searchByProperty', data);\n                })\n        };\n\n        this.onSearchByRelatedEntity = function(event, data) {\n            var self = this;\n\n            this.openSearchType('OpenLumify')\n                .done(function() {\n                    var node = self.getSearchTypeNode().find('.search-filters .content');\n                    self.select('querySelector').val('');\n                    self.trigger(node, 'searchByRelatedEntity', data);\n                });\n        };\n\n        this.onSearchPaneVisible = function(event, data) {\n            var self = this;\n\n            _.delay(function() {\n                self.select('querySelector').focus();\n            }, 250);\n        };\n\n        this.onSearchResultsBegan = function() {\n            this.select('queryContainerSelector').addClass('loading');\n        };\n\n        this.onSearchResultsCompleted = function(event, data) {\n            this.select('queryContainerSelector').removeClass('loading');\n            this.updateQueryStatus(data);\n        };\n\n        /**\n         * Display the status of a submitted query. If no argument is given it will clear the current status.\n         *\n         * @callback org.openlumify.search.advanced~updateQueryStatus\n         * @param {object} [status]\n         * @param {boolean} [status.success]\n         * @param {string} [status.error] Custom error message to display\n         * @param {string} [status.message] Message to display on success (e.g. number of hits)\n         */\n        this.updateQueryStatus = function(status) {\n            const searchType = this.getSearchTypeOrId();\n            const $error = this.select('queryValidationSelector');\n            const $hits = this.select('hitsSelector');\n\n            if (!status || status.success) {\n                $error.empty();\n\n                if (status && status.message) {\n                    $hits.text(status.message);\n                } else $hits.empty();\n            } else {\n                $hits.empty();\n                $error.html(\n                    alertTemplate({ error: _.isString(status.error) ? status.error : i18n('search.query.error') })\n                )\n            }\n\n            this.savedQueries[searchType].status = status || { success: true };\n            this.updateTypeCss();\n        };\n\n        this.onFiltersChange = function(event, data) {\n            var self = this,\n                hadFilters = this.hasFilters();\n\n            this.filters = data;\n\n            var query = this.getQueryVal(),\n                options = (data && data.options) || {},\n                hasFilters = this.hasFilters();\n\n            this.dataRequest('config', 'properties')\n                .done(function(properties) {\n                    if (!query && hasFilters && data.setAsteriskSearchOnEmpty) {\n                        if (properties['search.disableWildcardSearch'] === 'true') {\n                            self.updateClearSearch();\n                            return;\n                        } else {\n                            self.select('querySelector').val('*');\n                            query = self.getQueryVal();\n                        }\n                    }\n\n                    const hasQuery = query && query.length;\n                    const validSearch = hasQuery && (hasFilters || hadFilters || options.matchChanged);\n\n                    if (options.isScrubbing) {\n                        self.triggerQueryUpdatedThrottled();\n                    } else {\n                        self.triggerQueryUpdated();\n                    }\n                    if (validSearch || options.submit) {\n                        self.triggerQuerySubmit();\n                    }\n\n                    self.updateClearSearch();\n                });\n        };\n\n        this.onQueryChange = function(event) {\n            if (event.which === $.ui.keyCode.ENTER) {\n                if (event.type === 'keyup') {\n                    if (this.select('querySelector').val().length) {\n                        this.triggerQuerySubmit();\n                        $(event.target).select()\n                    }\n                }\n            } else if (event.which === $.ui.keyCode.ESCAPE) {\n                if (event.type === 'keyup') {\n                    if (this.canClearSearch) {\n                        this.onClearSearchClick();\n                    } else {\n                        this.select('querySelector').blur();\n                    }\n                }\n            } else {\n                this.updateClearSearch();\n                this.triggerQueryUpdated();\n            }\n        };\n\n        this.onClearSearchClick = function(event) {\n            var node = this.getSearchTypeNode(),\n                $query = this.select('querySelector'),\n                $clear = this.select('clearSearchSelector');\n\n            $clear.hide();\n            _.defer($query.focus.bind($query));\n            this.trigger(node, 'clearSearch', { clearMatch: false })\n        };\n\n        this.onAdvancedSearchTypeClick = function(event) {\n            var $target = $(event.target),\n                path = $target.data('componentPath'),\n                savedSearchUrl = $target.data('savedSearchUrl');\n\n            this.switchSearchType({\n                advancedSearch: path,\n                displayName: $target.text(),\n                savedSearchUrl: savedSearchUrl\n            });\n        };\n\n        this.onAdvancedSearchDropdown = function() {\n            this.select('savedSearchSelector').teardownAllComponents();\n        };\n\n        this.onSavedSearch = function(event) {\n            var self = this,\n                $button = $(event.target).closest('button'),\n                $advancedButton = this.$node.find('.search-dropdowns .advanced');\n\n            event.stopPropagation();\n\n            if ($advancedButton.next('.dropdown-menu').is(':visible')) {\n                $advancedButton.dropdown('toggle');\n            }\n\n            var opened = SavedSearchPopover && !!$button.lookupComponent(SavedSearchPopover);\n            if (opened) {\n                $button.siblings('button').addBack().teardownAllComponents();\n            } else {\n                $button.addClass('loading');\n                require(['./save/popover'], function(Save) {\n                    SavedSearchPopover = Save;\n                    $button.removeClass('loading')\n                    self.dataRequest('search', 'all', self.currentSearchUrl).done(function(searches) {\n                        if (self.currentSearchQuery) {\n                            self.currentSearchQuery = _.findWhere(searches, { id: self.currentSearchQuery.id });\n                        }\n                        Save.attachTo($button, {\n                            list: searches,\n                            update: self.currentSearchQuery,\n                            query: self.currentSearchByUrl[self.currentSearchUrl]\n                        });\n                    })\n                });\n            }\n        };\n\n        this.onClearSearch = function(event) {\n            var node = this.getSearchTypeNode(),\n                $query = this.select('querySelector'),\n                $clear = this.select('clearSearchSelector');\n\n            this.currentSearchQuery = null;\n\n            if (node.is(event.target)) {\n                this.select('queryContainerSelector').removeClass('loading');\n                if (this.getQueryVal()) {\n                    this.setQueryVal('');\n                }\n                this.filters = null;\n                this.updateQueryStatus();\n                this.triggerQueryUpdated();\n            }\n        };\n\n        this.onSegmentedControlsClick = function(event, data) {\n            event.stopPropagation();\n\n            this.switchSearchType(\n                $(event.target).blur().data('type')\n            );\n            this.select('querySelector').focus();\n        };\n\n        this.onQueryFocus = function(event) {\n            this.switchSearchType(this.searchType || SEARCH_TYPES[0]);\n        };\n\n        this.onSwitchSearchType = function(event, data) {\n            if (data !== 'OpenLumify' && !_.isObject(data) && !data.advancedSearch) {\n                throw new Error('Only OpenLumify search type supported');\n            }\n            this.switchSearchType(data);\n        };\n\n        this.switchSearchType = function(newSearchType) {\n            var self = this,\n                advanced = !_.isString(newSearchType);\n\n            if (advanced) {\n                var path = newSearchType.advancedSearch,\n                    previousSearchType = this.searchType;\n\n                if (!path) {\n                    this.searchType = null;\n                    this.switchSearchType(previousSearchType);\n                    return;\n                }\n\n                this.advancedActive = true;\n                this.updateAdvancedSearchDropdown(newSearchType);\n\n                var cls = F.className.to(path),\n                    $container = this.$node.find('.advanced-search-type.' + cls),\n                    attach = false;\n\n                if (!$container.length) {\n                    attach = true;\n                    $container = $('<div>')\n                        .addClass('advanced-search-type ' + cls)\n                        .appendTo(this.node)\n                    $('<div>')\n                        .addClass('advanced-search-type-results ' + cls)\n                        .data('width-preference', path)\n                        .html('<div class=\"content\">')\n                        .appendTo(this.node)\n                        .resizable({\n                            handles: 'e',\n                            minWidth: 200,\n                            maxWidth: 350,\n                            resize: function() {\n                                self.trigger(document, 'paneResized');\n                            }\n                        }).hide();\n                }\n\n                this.$node.find('.search-type.active').removeClass('active');\n                this.$node.find('.search-query-container').hide();\n                $container.show();\n\n                const searchTypePromise = [];\n                if (attach) {\n                    const resultsSelector = '.advanced-search-type-results.' + cls;\n                    const $resultsContainer = $(resultsSelector);\n\n                    /**\n                     * Responsible for displaying the interface for\n                     * searching, and displaying the results.\n                     *\n                     * @typedef org.openlumify.search.advanced~Component\n                     * @property {string} resultsSelector <span class=\"important\">Deprecated:</span>\n                     * Use `renderResults` function instead.\n                     * Css selector of the container that will hold results\n                     * @property {object} [initialParameters] The search endpoint parameters\n                     * @property {function} renderResults takes a callback which is given the DOM node of the results container\n                     * @property {org.openlumify.search.advanced~updateQueryStatus} updateQueryStatus Display error/success message\n                     * @see module:components/List\n                     * @listens org.openlumify.search.advanced#savedQuerySelected\n                     * @fires org.openlumify.search.advanced#setCurrentSearchForSaving\n                     * @example <caption>Rendering results</caption>\n                     * this.props.renderResults((resultsNode) => {\n                     *     List.attachTo($(resultsNode), {\n                     *          items: results\n                     * })\n                     */\n                    self.advancedSearchExtension = Attacher()\n                        .path(path)\n                        .node($container)\n                        .params({ resultsSelector })\n                        .behavior({\n                           setCurrentSearchForSaving: self.onSetCurrentSearchForSaving.bind(self),\n                           updateQueryStatus: function(attacher, status) { self.updateQueryStatus(status) },\n                           renderResults: function(attacher, renderFn) { renderFn($resultsContainer[0]); }\n                        });\n\n                    searchTypePromise.push(self.advancedSearchExtension.attach())\n                }\n\n                Promise.resolve(searchTypePromise)\n                    .then(() => {\n                        self.trigger($container, 'searchtypeloaded', { type: newSearchType });\n\n                        self.currentSearch = null;\n                        self.currentSearchUrl = newSearchType.savedSearchUrl\n                        self.currentSearchNode = $container;\n\n                        self.$node.find('.advanced-search-type, .advanced-search-type-results').hide();\n                        $container.show().addClass('active');\n                        $container.siblings('.advanced-search-type').removeClass('active');\n\n                        if (!self.savedQueries[cls]) {\n                            self.savedQueries[cls] = {};\n                        }\n                        self.updateQueryStatus(self.savedQueries[cls].status);\n\n                        if (self.savedQueries[cls].status.success) {\n                            $container.siblings('.advanced-search-type-results.' + cls).show();\n                        }\n                    });\n\n                return;\n            }\n\n            this.$node.find('.advanced-search-type, .advanced-search-type-results').hide();\n            this.$node.find('.search-query-container').show();\n\n            if (!this.advancedActive && (!newSearchType || this.searchType === newSearchType)) {\n                return;\n            }\n\n            this.advancedActive = false;\n\n            this.updateQueryValue(newSearchType);\n\n            this.updateAdvancedSearchDropdown(newSearchType);\n\n            var segmentedButton = this.$node.find('.find-' + newSearchType.toLowerCase())\n                    .addClass('active')\n                    .siblings('button').removeClass('active').end(),\n                node = this.getSearchTypeNode()\n                    .addClass('active')\n                    .siblings('.search-type').removeClass('active').end();\n\n            require(['./types/type' + newSearchType], function(SearchType) {\n                self.currentSearchUrl = SearchType.savedSearchUrl;\n                var alreadyAttached = node.lookupComponent(SearchType);\n                if (alreadyAttached) {\n                    self.trigger(node, 'searchtypeloaded', { type: newSearchType });\n                } else {\n                    SearchType.attachTo(node);\n                }\n                self.currentSearchNode = node;\n                self.updateTypeCss();\n            });\n        };\n\n        this.updateAdvancedSearchDropdown = function(newSearchType) {\n            var dropdownCaret = this.$node.find('.search-dropdowns .advanced .caret')[0];\n\n            if (dropdownCaret) {\n                dropdownCaret.previousSibling.textContent = (\n                    _.isObject(newSearchType) && newSearchType.displayName ?\n                        newSearchType.displayName :\n                        i18n('search.advanced.default')\n                ) + ' ';\n            }\n            this.$node.find('.search-dropdowns').toggle(_.isObject(newSearchType) || newSearchType === 'OpenLumify');\n        }\n\n        this.updateTypeCss = function() {\n            this.$node.find('.search-type .search-filters').css(\n                'top',\n                this.select('formSelector').outerHeight(true)\n            );\n        };\n\n        this.updateClearSearch = function() {\n            this.canClearSearch = this.getQueryVal().length > 0 || this.hasFilters();\n            this.select('clearSearchSelector').toggle(this.canClearSearch);\n        };\n\n        this.hasFilters = function() {\n            return !!(this.filters && this.filters.hasSome);\n        };\n\n        this.updateQueryValue = function(newSearchType) {\n            const $query = this.select('querySelector');\n            const $hits = this.select('hitsSelector');\n            const searchType = this.getSearchTypeOrId();\n\n            if (this.searchType) {\n                this.savedQueries[this.searchType].query = $query.val();\n                this.savedQueries[this.searchType].status.message = $hits.text().trim();\n            }\n            this.searchType = newSearchType;\n\n            if (!this.savedQueries[searchType]) {\n                this.savedQueries[searchType] = { query: '', status: {}};\n            }\n\n            $query.val(this.savedQueries[searchType].query);\n\n            if (this.savedQueries[searchType].status.message) {\n                $hits.text(this.savedQueries[searchType].status.message);\n            } else $hits.empty();\n\n            this.updateClearSearch();\n        };\n\n        this.triggerOnType = function(eventName) {\n            var searchType = this.getSearchTypeNode();\n            this.trigger(searchType, eventName, {\n                value: this.getQueryVal(),\n                filters: this.filters || {}\n            });\n        };\n\n        this.triggerQuerySubmit = _.partial(this.triggerOnType, 'querysubmit');\n\n        this.triggerQueryUpdated = _.partial(this.triggerOnType, 'queryupdated');\n\n        this.getQueryVal = function() {\n            return $.trim(this.select('querySelector').val());\n        };\n\n        this.setQueryVal = function(val) {\n            return this.select('querySelector').val(val).change();\n        };\n\n        this.getSearchTypeNode = function() {\n            return this.$node.find('.search-type-' + this.searchType.toLowerCase());\n        };\n\n        this.getSearchTypeOrId = function() {\n            if (this.advancedActive) {\n                const classList = this.$node.find('.advanced-search-type.active').attr('class');\n                return classList.match(/id[0-9]+/)[0];\n            } else {\n                return 'OpenLumify';\n            }\n        }\n\n        this.render = function() {\n            const extensions = registry.extensionsForPoint('org.openlumify.search.advanced');\n\n            this.$node.html(template({\n                advancedSearch: extensions,\n                types: SEARCH_TYPES.map(function(type, i) {\n                    return {\n                        cls: type.toLowerCase(),\n                        name: type,\n                        displayName: {\n                            OpenLumify: i18n('search.types.openlumify'),\n                            Workspace: i18n('search.types.workspace')\n                        }[type],\n                        selected: i === 0\n                    }\n                })\n            }));\n        };\n    }\n});\n"]}